<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1350.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1333" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1333" > </text>
<g id="frames">
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.05%)</title><rect x="620.7" y="773" width="0.6" height="15.0" fill="rgb(234,80,45)" rx="2" ry="2" />
<text  x="623.70" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="1092.1" y="629" width="0.2" height="15.0" fill="rgb(238,173,8)" rx="2" ry="2" />
<text  x="1095.13" y="639.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::propagate_globals (998 samples, 3.18%)</title><rect x="26.1" y="1141" width="37.5" height="15.0" fill="rgb(254,58,30)" rx="2" ry="2" />
<text  x="29.11" y="1151.5" >cla..</text>
</g>
<g >
<title>_&lt;deno..file_fetcher..SourceFileCache as core..default..Default&gt;::default (8 samples, 0.03%)</title><rect x="663.0" y="901" width="0.3" height="15.0" fill="rgb(218,167,24)" rx="2" ry="2" />
<text  x="665.98" y="911.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.04%)</title><rect x="1073.2" y="853" width="0.5" height="15.0" fill="rgb(254,1,28)" rx="2" ry="2" />
<text  x="1076.21" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="177.5" y="1061" width="0.2" height="15.0" fill="rgb(212,56,18)" rx="2" ry="2" />
<text  x="180.51" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (11 samples, 0.03%)</title><rect x="830.0" y="677" width="0.4" height="15.0" fill="rgb(241,209,44)" rx="2" ry="2" />
<text  x="832.97" y="687.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.04%)</title><rect x="1086.8" y="741" width="0.4" height="15.0" fill="rgb(243,46,43)" rx="2" ry="2" />
<text  x="1089.80" y="751.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="1033.2" y="821" width="0.6" height="15.0" fill="rgb(253,26,0)" rx="2" ry="2" />
<text  x="1036.22" y="831.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once (112 samples, 0.36%)</title><rect x="1090.3" y="837" width="4.2" height="15.0" fill="rgb(242,201,46)" rx="2" ry="2" />
<text  x="1093.29" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::new_uninitialized (4 samples, 0.01%)</title><rect x="1032.1" y="741" width="0.1" height="15.0" fill="rgb(254,127,42)" rx="2" ry="2" />
<text  x="1035.06" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.08%)</title><rect x="172.6" y="997" width="0.9" height="15.0" fill="rgb(208,33,50)" rx="2" ry="2" />
<text  x="175.63" y="1007.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (9 samples, 0.03%)</title><rect x="103.0" y="1077" width="0.3" height="15.0" fill="rgb(218,209,20)" rx="2" ry="2" />
<text  x="105.96" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (133 samples, 0.42%)</title><rect x="315.9" y="181" width="5.0" height="15.0" fill="rgb(234,184,38)" rx="2" ry="2" />
<text  x="318.93" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="286.9" y="165" width="0.2" height="15.0" fill="rgb(218,130,37)" rx="2" ry="2" />
<text  x="289.88" y="175.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_file_host (12 samples, 0.04%)</title><rect x="601.6" y="661" width="0.4" height="15.0" fill="rgb(213,70,53)" rx="2" ry="2" />
<text  x="604.56" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="18.6" y="933" width="0.2" height="15.0" fill="rgb(246,38,46)" rx="2" ry="2" />
<text  x="21.56" y="943.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::execute (55 samples, 0.17%)</title><rect x="1178.3" y="901" width="2.1" height="15.0" fill="rgb(222,49,40)" rx="2" ry="2" />
<text  x="1181.29" y="911.5" ></text>
</g>
<g >
<title>deno::disk_cache::DiskCache::get_cache_filename_with_extension (49 samples, 0.16%)</title><rect x="241.8" y="693" width="1.8" height="15.0" fill="rgb(229,122,25)" rx="2" ry="2" />
<text  x="244.75" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="646.3" y="805" width="0.4" height="15.0" fill="rgb(243,180,38)" rx="2" ry="2" />
<text  x="649.31" y="815.5" ></text>
</g>
<g >
<title>deno::tsc::CompiledFileMetadata::from_json_string (30 samples, 0.10%)</title><rect x="266.2" y="645" width="1.2" height="15.0" fill="rgb(238,112,31)" rx="2" ry="2" />
<text  x="269.23" y="655.5" ></text>
</g>
<g >
<title>clap::app::validator::Validator::validate (24 samples, 0.08%)</title><rect x="25.2" y="1125" width="0.9" height="15.0" fill="rgb(220,102,52)" rx="2" ry="2" />
<text  x="28.20" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (28 samples, 0.09%)</title><rect x="547.1" y="261" width="1.1" height="15.0" fill="rgb(221,153,54)" rx="2" ry="2" />
<text  x="550.12" y="271.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="98.1" y="1045" width="0.2" height="15.0" fill="rgb(226,77,39)" rx="2" ry="2" />
<text  x="101.15" y="1055.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (10 samples, 0.03%)</title><rect x="133.6" y="1029" width="0.4" height="15.0" fill="rgb(246,166,5)" rx="2" ry="2" />
<text  x="136.63" y="1039.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (24 samples, 0.08%)</title><rect x="1081.1" y="821" width="0.9" height="15.0" fill="rgb(235,72,47)" rx="2" ry="2" />
<text  x="1084.09" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="156.2" y="1093" width="0.2" height="15.0" fill="rgb(222,82,49)" rx="2" ry="2" />
<text  x="159.19" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (80 samples, 0.25%)</title><rect x="642.3" y="741" width="3.0" height="15.0" fill="rgb(230,134,50)" rx="2" ry="2" />
<text  x="645.33" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (24 samples, 0.08%)</title><rect x="596.2" y="629" width="0.9" height="15.0" fill="rgb(242,143,20)" rx="2" ry="2" />
<text  x="599.19" y="639.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.08%)</title><rect x="12.0" y="1189" width="0.9" height="15.0" fill="rgb(253,229,51)" rx="2" ry="2" />
<text  x="15.03" y="1199.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="576.0" y="469" width="0.1" height="15.0" fill="rgb(226,186,1)" rx="2" ry="2" />
<text  x="578.95" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="202.3" y="1109" width="0.3" height="15.0" fill="rgb(232,116,0)" rx="2" ry="2" />
<text  x="205.33" y="1119.5" ></text>
</g>
<g >
<title>url::path_to_file_url_segments (129 samples, 0.41%)</title><rect x="1181.0" y="901" width="4.9" height="15.0" fill="rgb(214,229,18)" rx="2" ry="2" />
<text  x="1184.03" y="911.5" ></text>
</g>
<g >
<title>deno::flags::lint_subcommand (86 samples, 0.27%)</title><rect x="134.1" y="1157" width="3.2" height="15.0" fill="rgb(214,109,34)" rx="2" ry="2" />
<text  x="137.08" y="1167.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..slice..Join&lt;&amp;str&gt; for [S]&gt;::join (10 samples, 0.03%)</title><rect x="222.8" y="645" width="0.4" height="15.0" fill="rgb(231,79,18)" rx="2" ry="2" />
<text  x="225.83" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (15 samples, 0.05%)</title><rect x="1137.1" y="453" width="0.6" height="15.0" fill="rgb(207,188,42)" rx="2" ry="2" />
<text  x="1140.10" y="463.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="98.7" y="1109" width="0.3" height="15.0" fill="rgb(235,118,25)" rx="2" ry="2" />
<text  x="101.71" y="1119.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (16 samples, 0.05%)</title><rect x="1066.0" y="853" width="0.6" height="15.0" fill="rgb(238,19,47)" rx="2" ry="2" />
<text  x="1069.00" y="863.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (10 samples, 0.03%)</title><rect x="83.3" y="1029" width="0.4" height="15.0" fill="rgb(222,36,5)" rx="2" ry="2" />
<text  x="86.32" y="1039.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileFetcher::get_source_file::_{{closure}} (82 samples, 0.26%)</title><rect x="212.8" y="549" width="3.1" height="15.0" fill="rgb(252,5,16)" rx="2" ry="2" />
<text  x="215.84" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="77.3" y="1029" width="0.2" height="15.0" fill="rgb(206,19,49)" rx="2" ry="2" />
<text  x="80.28" y="1039.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_key (6 samples, 0.02%)</title><rect x="266.5" y="549" width="0.2" height="15.0" fill="rgb(252,97,41)" rx="2" ry="2" />
<text  x="269.45" y="559.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (14 samples, 0.04%)</title><rect x="269.8" y="549" width="0.6" height="15.0" fill="rgb(239,81,17)" rx="2" ry="2" />
<text  x="272.83" y="559.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="22.7" y="997" width="0.2" height="15.0" fill="rgb(239,96,28)" rx="2" ry="2" />
<text  x="25.73" y="1007.5" ></text>
</g>
<g >
<title>_&lt;S as futures_core..stream..TryStream&gt;::try_poll_next (164 samples, 0.52%)</title><rect x="611.7" y="725" width="6.1" height="15.0" fill="rgb(250,151,12)" rx="2" ry="2" />
<text  x="614.66" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (13 samples, 0.04%)</title><rect x="589.2" y="709" width="0.5" height="15.0" fill="rgb(223,108,23)" rx="2" ry="2" />
<text  x="592.21" y="719.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="999.1" y="821" width="0.1" height="15.0" fill="rgb(241,229,54)" rx="2" ry="2" />
<text  x="1002.06" y="831.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (550 samples, 1.75%)</title><rect x="42.8" y="1109" width="20.7" height="15.0" fill="rgb(230,168,38)" rx="2" ry="2" />
<text  x="45.85" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.03%)</title><rect x="632.7" y="597" width="0.3" height="15.0" fill="rgb(208,117,26)" rx="2" ry="2" />
<text  x="635.68" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="216.5" y="437" width="0.2" height="15.0" fill="rgb(205,108,16)" rx="2" ry="2" />
<text  x="219.52" y="447.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert (16 samples, 0.05%)</title><rect x="830.6" y="869" width="0.6" height="15.0" fill="rgb(241,216,15)" rx="2" ry="2" />
<text  x="833.61" y="879.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc..string..String,serde_json..value..Value&gt;::insert (129 samples, 0.41%)</title><rect x="1106.9" y="629" width="4.8" height="15.0" fill="rgb(236,104,45)" rx="2" ry="2" />
<text  x="1109.88" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="828.7" y="805" width="0.2" height="15.0" fill="rgb(224,24,6)" rx="2" ry="2" />
<text  x="831.73" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="179.1" y="1045" width="0.1" height="15.0" fill="rgb(215,212,20)" rx="2" ry="2" />
<text  x="182.05" y="1055.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::cmp (4 samples, 0.01%)</title><rect x="615.3" y="485" width="0.1" height="15.0" fill="rgb(213,201,51)" rx="2" ry="2" />
<text  x="618.26" y="495.5" ></text>
</g>
<g >
<title>bytes::bytes::Bytes::copy_from_slice (7 samples, 0.02%)</title><rect x="834.7" y="805" width="0.3" height="15.0" fill="rgb(230,153,39)" rx="2" ry="2" />
<text  x="837.70" y="815.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,385 samples, 4.41%)</title><rect x="705.5" y="581" width="52.0" height="15.0" fill="rgb(234,30,32)" rx="2" ry="2" />
<text  x="708.48" y="591.5" >alloc..</text>
</g>
<g >
<title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.01%)</title><rect x="74.0" y="1013" width="0.1" height="15.0" fill="rgb(211,229,33)" rx="2" ry="2" />
<text  x="76.97" y="1023.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.02%)</title><rect x="200.0" y="1109" width="0.2" height="15.0" fill="rgb(226,106,27)" rx="2" ry="2" />
<text  x="203.00" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="181.9" y="1061" width="0.5" height="15.0" fill="rgb(239,16,15)" rx="2" ry="2" />
<text  x="184.94" y="1071.5" ></text>
</g>
<g >
<title>_&lt;char as unicode_xid..UnicodeXID&gt;::is_xid_start (4 samples, 0.01%)</title><rect x="236.4" y="293" width="0.1" height="15.0" fill="rgb(246,130,10)" rx="2" ry="2" />
<text  x="239.38" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="886.8" y="565" width="0.1" height="15.0" fill="rgb(211,74,46)" rx="2" ry="2" />
<text  x="889.81" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (28 samples, 0.09%)</title><rect x="759.2" y="837" width="1.1" height="15.0" fill="rgb(236,28,15)" rx="2" ry="2" />
<text  x="762.24" y="847.5" ></text>
</g>
<g >
<title>deno::state::State::stateful_op::_{{closure}} (355 samples, 1.13%)</title><rect x="1101.3" y="677" width="13.3" height="15.0" fill="rgb(227,107,30)" rx="2" ry="2" />
<text  x="1104.29" y="687.5" ></text>
</g>
<g >
<title>tokio::time::wheel::Wheel&lt;T&gt;::new (26 samples, 0.08%)</title><rect x="204.7" y="1109" width="1.0" height="15.0" fill="rgb(209,175,42)" rx="2" ry="2" />
<text  x="207.73" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="178.2" y="1077" width="0.2" height="15.0" fill="rgb(254,213,46)" rx="2" ry="2" />
<text  x="181.15" y="1087.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (10 samples, 0.03%)</title><rect x="573.1" y="421" width="0.4" height="15.0" fill="rgb(235,189,30)" rx="2" ry="2" />
<text  x="576.14" y="431.5" ></text>
</g>
<g >
<title>deno::flags::doc_subcommand (130 samples, 0.41%)</title><rect x="100.9" y="1157" width="4.8" height="15.0" fill="rgb(234,157,41)" rx="2" ry="2" />
<text  x="103.85" y="1167.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="140.9" y="1061" width="0.3" height="15.0" fill="rgb(225,54,6)" rx="2" ry="2" />
<text  x="143.95" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="1075.7" y="709" width="0.1" height="15.0" fill="rgb(243,80,34)" rx="2" ry="2" />
<text  x="1078.68" y="719.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="757.7" y="565" width="0.4" height="15.0" fill="rgb(239,75,31)" rx="2" ry="2" />
<text  x="760.70" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (13 samples, 0.04%)</title><rect x="1113.9" y="469" width="0.5" height="15.0" fill="rgb(213,26,50)" rx="2" ry="2" />
<text  x="1116.86" y="479.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="1098.5" y="741" width="0.2" height="15.0" fill="rgb(237,0,24)" rx="2" ry="2" />
<text  x="1101.47" y="751.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="1095.7" y="821" width="0.2" height="15.0" fill="rgb(223,205,34)" rx="2" ry="2" />
<text  x="1098.66" y="831.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (531 samples, 1.69%)</title><rect x="301.0" y="325" width="19.9" height="15.0" fill="rgb(207,48,48)" rx="2" ry="2" />
<text  x="303.99" y="335.5" ></text>
</g>
<g >
<title>deno::global_state::GlobalState::new (4,604 samples, 14.65%)</title><rect x="659.2" y="933" width="172.9" height="15.0" fill="rgb(254,217,16)" rx="2" ry="2" />
<text  x="662.22" y="943.5" >deno::global_state::Gl..</text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (16 samples, 0.05%)</title><rect x="212.2" y="453" width="0.6" height="15.0" fill="rgb(219,39,30)" rx="2" ry="2" />
<text  x="215.20" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (7 samples, 0.02%)</title><rect x="830.1" y="645" width="0.3" height="15.0" fill="rgb(253,25,50)" rx="2" ry="2" />
<text  x="833.12" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="18.9" y="997" width="0.1" height="15.0" fill="rgb(229,112,48)" rx="2" ry="2" />
<text  x="21.90" y="1007.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (20 samples, 0.06%)</title><rect x="86.1" y="1109" width="0.7" height="15.0" fill="rgb(216,87,4)" rx="2" ry="2" />
<text  x="89.06" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="608.0" y="517" width="0.2" height="15.0" fill="rgb(248,8,27)" rx="2" ry="2" />
<text  x="611.02" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="72.7" y="933" width="0.1" height="15.0" fill="rgb(254,192,5)" rx="2" ry="2" />
<text  x="75.70" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="14.9" y="1093" width="0.2" height="15.0" fill="rgb(215,179,23)" rx="2" ry="2" />
<text  x="17.88" y="1103.5" ></text>
</g>
<g >
<title>clap::app::App::arg (84 samples, 0.27%)</title><rect x="100.9" y="1141" width="3.1" height="15.0" fill="rgb(247,33,29)" rx="2" ry="2" />
<text  x="103.89" y="1151.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.08%)</title><rect x="62.6" y="1029" width="0.9" height="15.0" fill="rgb(252,198,30)" rx="2" ry="2" />
<text  x="65.60" y="1039.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::begin_object_key (21 samples, 0.07%)</title><rect x="1166.3" y="597" width="0.8" height="15.0" fill="rgb(241,1,32)" rx="2" ry="2" />
<text  x="1169.27" y="607.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (128 samples, 0.41%)</title><rect x="129.2" y="1109" width="4.8" height="15.0" fill="rgb(218,82,16)" rx="2" ry="2" />
<text  x="132.20" y="1119.5" ></text>
</g>
<g >
<title>url::Url::from_file_path (73 samples, 0.23%)</title><rect x="1173.3" y="901" width="2.7" height="15.0" fill="rgb(246,80,0)" rx="2" ry="2" />
<text  x="1176.29" y="911.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (28 samples, 0.09%)</title><rect x="221.3" y="549" width="1.1" height="15.0" fill="rgb(237,96,33)" rx="2" ry="2" />
<text  x="224.33" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (72 samples, 0.23%)</title><rect x="70.1" y="997" width="2.7" height="15.0" fill="rgb(229,182,18)" rx="2" ry="2" />
<text  x="73.14" y="1007.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="1062.7" y="821" width="0.3" height="15.0" fill="rgb(232,170,0)" rx="2" ry="2" />
<text  x="1065.66" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="21.3" y="981" width="0.1" height="15.0" fill="rgb(246,35,2)" rx="2" ry="2" />
<text  x="24.26" y="991.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="23.4" y="965" width="0.1" height="15.0" fill="rgb(212,222,6)" rx="2" ry="2" />
<text  x="26.37" y="975.5" ></text>
</g>
<g >
<title>deno::flags::eval_subcommand (185 samples, 0.59%)</title><rect x="105.7" y="1157" width="7.0" height="15.0" fill="rgb(231,22,4)" rx="2" ry="2" />
<text  x="108.73" y="1167.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="234.9" y="197" width="0.2" height="15.0" fill="rgb(239,109,2)" rx="2" ry="2" />
<text  x="237.88" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="204.2" y="965" width="0.2" height="15.0" fill="rgb(223,4,17)" rx="2" ry="2" />
<text  x="207.21" y="975.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="155.9" y="1077" width="0.2" height="15.0" fill="rgb(239,194,49)" rx="2" ry="2" />
<text  x="158.89" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="635.3" y="853" width="0.2" height="15.0" fill="rgb(205,38,18)" rx="2" ry="2" />
<text  x="638.35" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (15 samples, 0.05%)</title><rect x="129.8" y="1093" width="0.6" height="15.0" fill="rgb(246,184,41)" rx="2" ry="2" />
<text  x="132.80" y="1103.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::parse (12 samples, 0.04%)</title><rect x="834.5" y="885" width="0.5" height="15.0" fill="rgb(218,174,53)" rx="2" ry="2" />
<text  x="837.51" y="895.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..FilterMap&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (21 samples, 0.07%)</title><rect x="21.9" y="901" width="0.8" height="15.0" fill="rgb(246,104,0)" rx="2" ry="2" />
<text  x="24.86" y="911.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="215.3" y="437" width="0.4" height="15.0" fill="rgb(238,141,32)" rx="2" ry="2" />
<text  x="218.28" y="447.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (10 samples, 0.03%)</title><rect x="1032.6" y="853" width="0.4" height="15.0" fill="rgb(250,63,14)" rx="2" ry="2" />
<text  x="1035.62" y="863.5" ></text>
</g>
<g >
<title>deno::permissions::resolve_fs_allowlist (4 samples, 0.01%)</title><rect x="831.6" y="901" width="0.2" height="15.0" fill="rgb(216,178,53)" rx="2" ry="2" />
<text  x="834.62" y="911.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (14 samples, 0.04%)</title><rect x="1086.7" y="773" width="0.5" height="15.0" fill="rgb(211,109,33)" rx="2" ry="2" />
<text  x="1089.72" y="783.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="621.5" y="709" width="0.1" height="15.0" fill="rgb(231,168,40)" rx="2" ry="2" />
<text  x="624.49" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="634.0" y="789" width="0.2" height="15.0" fill="rgb(218,115,2)" rx="2" ry="2" />
<text  x="637.03" y="799.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (52 samples, 0.17%)</title><rect x="1069.0" y="885" width="2.0" height="15.0" fill="rgb(223,118,46)" rx="2" ry="2" />
<text  x="1072.04" y="895.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner (11 samples, 0.03%)</title><rect x="236.1" y="405" width="0.4" height="15.0" fill="rgb(250,34,48)" rx="2" ry="2" />
<text  x="239.12" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="241.1" y="613" width="0.2" height="15.0" fill="rgb(246,65,42)" rx="2" ry="2" />
<text  x="244.07" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.02%)</title><rect x="1088.1" y="773" width="0.2" height="15.0" fill="rgb(233,97,48)" rx="2" ry="2" />
<text  x="1091.07" y="783.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.01%)</title><rect x="658.5" y="469" width="0.1" height="15.0" fill="rgb(219,168,32)" rx="2" ry="2" />
<text  x="661.47" y="479.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as core..hash..Hash&gt;::hash (11 samples, 0.03%)</title><rect x="665.1" y="789" width="0.4" height="15.0" fill="rgb(218,181,9)" rx="2" ry="2" />
<text  x="668.12" y="799.5" ></text>
</g>
<g >
<title>_&lt;deno_core..module_specifier..ModuleSpecifier as core..fmt..Display&gt;::fmt (48 samples, 0.15%)</title><rect x="220.6" y="629" width="1.8" height="15.0" fill="rgb(231,101,50)" rx="2" ry="2" />
<text  x="223.58" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="612.3" y="517" width="0.1" height="15.0" fill="rgb(229,53,23)" rx="2" ry="2" />
<text  x="615.33" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="180.5" y="1061" width="0.1" height="15.0" fill="rgb(254,129,14)" rx="2" ry="2" />
<text  x="183.52" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (21 samples, 0.07%)</title><rect x="1176.7" y="853" width="0.8" height="15.0" fill="rgb(233,108,35)" rx="2" ry="2" />
<text  x="1179.75" y="863.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="1059.1" y="821" width="0.3" height="15.0" fill="rgb(249,157,16)" rx="2" ry="2" />
<text  x="1062.09" y="831.5" ></text>
</g>
<g >
<title>swc_ecma_visit::Visit::visit_expr (11 samples, 0.03%)</title><rect x="240.2" y="469" width="0.5" height="15.0" fill="rgb(212,81,25)" rx="2" ry="2" />
<text  x="243.25" y="479.5" ></text>
</g>
<g >
<title>_&lt;core..hash..sip..SipHasher13 as core..hash..Hasher&gt;::write (70 samples, 0.22%)</title><rect x="562.1" y="293" width="2.6" height="15.0" fill="rgb(232,103,44)" rx="2" ry="2" />
<text  x="565.06" y="303.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="634.8" y="853" width="0.2" height="15.0" fill="rgb(237,12,12)" rx="2" ry="2" />
<text  x="637.82" y="863.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileFetcher::fetch_cached_source_file (46 samples, 0.15%)</title><rect x="612.5" y="597" width="1.7" height="15.0" fill="rgb(228,59,51)" rx="2" ry="2" />
<text  x="615.48" y="607.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::trim_start_matches (7 samples, 0.02%)</title><rect x="79.8" y="1125" width="0.3" height="15.0" fill="rgb(254,97,23)" rx="2" ry="2" />
<text  x="82.83" y="1135.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (12 samples, 0.04%)</title><rect x="205.7" y="1157" width="0.5" height="15.0" fill="rgb(235,186,23)" rx="2" ry="2" />
<text  x="208.75" y="1167.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend::_{{closure}} (16 samples, 0.05%)</title><rect x="581.9" y="517" width="0.6" height="15.0" fill="rgb(213,53,0)" rx="2" ry="2" />
<text  x="584.89" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="600.0" y="677" width="0.2" height="15.0" fill="rgb(246,29,42)" rx="2" ry="2" />
<text  x="603.02" y="687.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="118.9" y="1077" width="0.3" height="15.0" fill="rgb(217,207,22)" rx="2" ry="2" />
<text  x="121.95" y="1087.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="1001.5" y="837" width="0.3" height="15.0" fill="rgb(209,100,36)" rx="2" ry="2" />
<text  x="1004.54" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="1063.4" y="789" width="0.4" height="15.0" fill="rgb(228,43,22)" rx="2" ry="2" />
<text  x="1066.37" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="191.8" y="1045" width="0.1" height="15.0" fill="rgb(247,51,39)" rx="2" ry="2" />
<text  x="194.78" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="240.8" y="629" width="0.2" height="15.0" fill="rgb(232,110,35)" rx="2" ry="2" />
<text  x="243.77" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="88.8" y="1109" width="0.2" height="15.0" fill="rgb(208,226,38)" rx="2" ry="2" />
<text  x="91.76" y="1119.5" ></text>
</g>
<g >
<title>http::header::value::HeaderValue::try_from_generic (9 samples, 0.03%)</title><rect x="834.6" y="837" width="0.4" height="15.0" fill="rgb(233,131,50)" rx="2" ry="2" />
<text  x="837.62" y="847.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (24 samples, 0.08%)</title><rect x="176.5" y="1029" width="0.9" height="15.0" fill="rgb(236,61,28)" rx="2" ry="2" />
<text  x="179.46" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="130.1" y="1045" width="0.3" height="15.0" fill="rgb(231,96,45)" rx="2" ry="2" />
<text  x="133.14" y="1055.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Cloned&lt;I&gt; as core..iter..traits..iterator..Iterator&gt;::fold (21 samples, 0.07%)</title><rect x="667.6" y="725" width="0.7" height="15.0" fill="rgb(252,12,19)" rx="2" ry="2" />
<text  x="670.56" y="735.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..slice..Join&lt;&amp;str&gt; for [S]&gt;::join (6 samples, 0.02%)</title><rect x="19.9" y="933" width="0.3" height="15.0" fill="rgb(222,110,31)" rx="2" ry="2" />
<text  x="22.95" y="943.5" ></text>
</g>
<g >
<title>_&lt;serde_json..read..StrRead as serde_json..read..Read&gt;::parse_str (4 samples, 0.01%)</title><rect x="333.0" y="293" width="0.2" height="15.0" fill="rgb(234,70,20)" rx="2" ry="2" />
<text  x="336.02" y="303.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (2,380 samples, 7.57%)</title><rect x="668.9" y="805" width="89.3" height="15.0" fill="rgb(208,149,14)" rx="2" ry="2" />
<text  x="671.87" y="815.5" >alloc::sli..</text>
</g>
<g >
<title>clap::args::arg::Arg::unset (5 samples, 0.02%)</title><rect x="104.3" y="1125" width="0.2" height="15.0" fill="rgb(205,141,6)" rx="2" ry="2" />
<text  x="107.34" y="1135.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_string (180 samples, 0.57%)</title><rect x="277.6" y="309" width="6.8" height="15.0" fill="rgb(250,188,32)" rx="2" ry="2" />
<text  x="280.64" y="319.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="928.7" y="565" width="0.3" height="15.0" fill="rgb(209,24,45)" rx="2" ry="2" />
<text  x="931.67" y="575.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (20 samples, 0.06%)</title><rect x="292.4" y="309" width="0.8" height="15.0" fill="rgb(238,162,46)" rx="2" ry="2" />
<text  x="295.43" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="617.6" y="693" width="0.2" height="15.0" fill="rgb(214,1,23)" rx="2" ry="2" />
<text  x="620.59" y="703.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (180 samples, 0.57%)</title><rect x="1117.3" y="693" width="6.8" height="15.0" fill="rgb(214,159,9)" rx="2" ry="2" />
<text  x="1120.32" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="1054.9" y="757" width="0.1" height="15.0" fill="rgb(226,170,46)" rx="2" ry="2" />
<text  x="1057.92" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (25 samples, 0.08%)</title><rect x="838.4" y="789" width="0.9" height="15.0" fill="rgb(217,32,28)" rx="2" ry="2" />
<text  x="841.38" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="835.1" y="805" width="0.2" height="15.0" fill="rgb(220,192,11)" rx="2" ry="2" />
<text  x="838.15" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="657.9" y="133" width="0.2" height="15.0" fill="rgb(248,117,16)" rx="2" ry="2" />
<text  x="660.91" y="143.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="1034.6" y="821" width="0.3" height="15.0" fill="rgb(224,219,46)" rx="2" ry="2" />
<text  x="1037.57" y="831.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="21.0" y="981" width="0.2" height="15.0" fill="rgb(251,150,16)" rx="2" ry="2" />
<text  x="23.96" y="991.5" ></text>
</g>
<g >
<title>deno::run_command::_{{closure}} (26,166 samples, 83.25%)</title><rect x="207.3" y="949" width="982.3" height="15.0" fill="rgb(227,112,7)" rx="2" ry="2" />
<text  x="210.29" y="959.5" >deno::run_command::_{{closure}}</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="25.9" y="1013" width="0.1" height="15.0" fill="rgb(206,45,36)" rx="2" ry="2" />
<text  x="28.92" y="1023.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (14 samples, 0.04%)</title><rect x="139.1" y="1141" width="0.6" height="15.0" fill="rgb(228,38,41)" rx="2" ry="2" />
<text  x="142.15" y="1151.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (74 samples, 0.24%)</title><rect x="30.3" y="1013" width="2.8" height="15.0" fill="rgb(238,55,43)" rx="2" ry="2" />
<text  x="33.35" y="1023.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (12 samples, 0.04%)</title><rect x="1001.4" y="869" width="0.4" height="15.0" fill="rgb(210,32,7)" rx="2" ry="2" />
<text  x="1004.39" y="879.5" ></text>
</g>
<g >
<title>deno::flags::lock_arg (9 samples, 0.03%)</title><rect x="180.0" y="1125" width="0.4" height="15.0" fill="rgb(254,226,42)" rx="2" ry="2" />
<text  x="183.03" y="1135.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (3 samples, 0.01%)</title><rect x="134.5" y="1109" width="0.1" height="15.0" fill="rgb(251,127,52)" rx="2" ry="2" />
<text  x="137.49" y="1119.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (31 samples, 0.10%)</title><rect x="572.3" y="453" width="1.2" height="15.0" fill="rgb(211,47,20)" rx="2" ry="2" />
<text  x="575.35" y="463.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (124 samples, 0.39%)</title><rect x="546.2" y="373" width="4.6" height="15.0" fill="rgb(233,87,11)" rx="2" ry="2" />
<text  x="549.18" y="383.5" ></text>
</g>
<g >
<title>_&lt;core..option..Option&lt;T&gt; as core..hash..Hash&gt;::hash (6 samples, 0.02%)</title><rect x="229.4" y="613" width="0.2" height="15.0" fill="rgb(205,69,15)" rx="2" ry="2" />
<text  x="232.36" y="623.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (22 samples, 0.07%)</title><rect x="1188.5" y="789" width="0.8" height="15.0" fill="rgb(244,21,25)" rx="2" ry="2" />
<text  x="1191.46" y="799.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (72 samples, 0.23%)</title><rect x="1045.4" y="821" width="2.7" height="15.0" fill="rgb(239,87,42)" rx="2" ry="2" />
<text  x="1048.39" y="831.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (50 samples, 0.16%)</title><rect x="643.1" y="645" width="1.9" height="15.0" fill="rgb(246,163,18)" rx="2" ry="2" />
<text  x="646.12" y="655.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (83 samples, 0.26%)</title><rect x="212.8" y="565" width="3.1" height="15.0" fill="rgb(221,229,49)" rx="2" ry="2" />
<text  x="215.80" y="575.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::unwrap_or_else (3 samples, 0.01%)</title><rect x="834.4" y="901" width="0.1" height="15.0" fill="rgb(241,162,27)" rx="2" ry="2" />
<text  x="837.36" y="911.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="270.1" y="421" width="0.3" height="15.0" fill="rgb(234,180,11)" rx="2" ry="2" />
<text  x="273.13" y="431.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (59 samples, 0.19%)</title><rect x="1183.2" y="837" width="2.2" height="15.0" fill="rgb(229,77,3)" rx="2" ry="2" />
<text  x="1186.20" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="230.7" y="533" width="0.2" height="15.0" fill="rgb(212,121,35)" rx="2" ry="2" />
<text  x="233.71" y="543.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (11 samples, 0.03%)</title><rect x="574.8" y="597" width="0.4" height="15.0" fill="rgb(227,29,22)" rx="2" ry="2" />
<text  x="577.75" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="64.1" y="1061" width="0.2" height="15.0" fill="rgb(205,75,43)" rx="2" ry="2" />
<text  x="67.06" y="1071.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (5 samples, 0.02%)</title><rect x="574.2" y="517" width="0.2" height="15.0" fill="rgb(231,209,30)" rx="2" ry="2" />
<text  x="577.19" y="527.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.03%)</title><rect x="259.5" y="645" width="0.3" height="15.0" fill="rgb(249,50,23)" rx="2" ry="2" />
<text  x="262.47" y="655.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (512 samples, 1.63%)</title><rect x="1013.0" y="869" width="19.2" height="15.0" fill="rgb(247,103,23)" rx="2" ry="2" />
<text  x="1015.99" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (63 samples, 0.20%)</title><rect x="655.8" y="469" width="2.3" height="15.0" fill="rgb(220,9,21)" rx="2" ry="2" />
<text  x="658.77" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1086.9" y="677" width="0.2" height="15.0" fill="rgb(208,170,42)" rx="2" ry="2" />
<text  x="1089.95" y="687.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="25.4" y="1061" width="0.1" height="15.0" fill="rgb(227,103,3)" rx="2" ry="2" />
<text  x="28.35" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="1106.5" y="597" width="0.2" height="15.0" fill="rgb(240,180,38)" rx="2" ry="2" />
<text  x="1109.47" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (15 samples, 0.05%)</title><rect x="1091.8" y="661" width="0.5" height="15.0" fill="rgb(228,201,8)" rx="2" ry="2" />
<text  x="1094.75" y="671.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.04%)</title><rect x="216.7" y="549" width="0.5" height="15.0" fill="rgb(246,156,26)" rx="2" ry="2" />
<text  x="219.71" y="559.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (36 samples, 0.11%)</title><rect x="1037.1" y="869" width="1.4" height="15.0" fill="rgb(216,9,6)" rx="2" ry="2" />
<text  x="1040.13" y="879.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="269.6" y="405" width="0.2" height="15.0" fill="rgb(234,74,26)" rx="2" ry="2" />
<text  x="272.61" y="415.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next::_{{closure}} (7 samples, 0.02%)</title><rect x="234.0" y="213" width="0.3" height="15.0" fill="rgb(233,57,19)" rx="2" ry="2" />
<text  x="237.02" y="223.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (45 samples, 0.14%)</title><rect x="1035.2" y="885" width="1.7" height="15.0" fill="rgb(208,140,44)" rx="2" ry="2" />
<text  x="1038.17" y="895.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="198.8" y="1077" width="0.3" height="15.0" fill="rgb(241,192,30)" rx="2" ry="2" />
<text  x="201.84" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="15.4" y="1029" width="0.2" height="15.0" fill="rgb(212,154,28)" rx="2" ry="2" />
<text  x="18.44" y="1039.5" ></text>
</g>
<g >
<title>tokio::runtime::time::variant::create_driver (28 samples, 0.09%)</title><rect x="204.7" y="1141" width="1.0" height="15.0" fill="rgb(238,152,44)" rx="2" ry="2" />
<text  x="207.66" y="1151.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_str (12 samples, 0.04%)</title><rect x="268.7" y="565" width="0.5" height="15.0" fill="rgb(210,59,33)" rx="2" ry="2" />
<text  x="271.71" y="575.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (3 samples, 0.01%)</title><rect x="80.8" y="1109" width="0.2" height="15.0" fill="rgb(208,14,20)" rx="2" ry="2" />
<text  x="83.84" y="1119.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (10 samples, 0.03%)</title><rect x="138.8" y="1077" width="0.3" height="15.0" fill="rgb(244,11,25)" rx="2" ry="2" />
<text  x="141.77" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (17 samples, 0.05%)</title><rect x="205.1" y="1029" width="0.6" height="15.0" fill="rgb(232,50,23)" rx="2" ry="2" />
<text  x="208.07" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="648.9" y="501" width="0.3" height="15.0" fill="rgb(229,60,51)" rx="2" ry="2" />
<text  x="651.90" y="511.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (2,229 samples, 7.09%)</title><rect x="674.4" y="645" width="83.7" height="15.0" fill="rgb(239,27,53)" rx="2" ry="2" />
<text  x="677.39" y="655.5" >core::ops..</text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (36 samples, 0.11%)</title><rect x="285.8" y="309" width="1.4" height="15.0" fill="rgb(223,142,31)" rx="2" ry="2" />
<text  x="288.83" y="319.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (223 samples, 0.71%)</title><rect x="144.8" y="1093" width="8.3" height="15.0" fill="rgb(220,164,11)" rx="2" ry="2" />
<text  x="147.78" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="1087.1" y="661" width="0.1" height="15.0" fill="rgb(233,96,52)" rx="2" ry="2" />
<text  x="1090.13" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="166.1" y="1061" width="0.2" height="15.0" fill="rgb(238,98,33)" rx="2" ry="2" />
<text  x="169.10" y="1071.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (170 samples, 0.54%)</title><rect x="90.0" y="1125" width="6.4" height="15.0" fill="rgb(235,130,54)" rx="2" ry="2" />
<text  x="93.00" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (12 samples, 0.04%)</title><rect x="117.0" y="1045" width="0.4" height="15.0" fill="rgb(242,27,29)" rx="2" ry="2" />
<text  x="120.00" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (12 samples, 0.04%)</title><rect x="12.2" y="1109" width="0.5" height="15.0" fill="rgb(246,114,12)" rx="2" ry="2" />
<text  x="15.22" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="663.6" y="757" width="0.2" height="15.0" fill="rgb(219,150,15)" rx="2" ry="2" />
<text  x="666.62" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="19.8" y="837" width="0.1" height="15.0" fill="rgb(225,72,31)" rx="2" ry="2" />
<text  x="22.80" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="75.7" y="1013" width="0.2" height="15.0" fill="rgb(224,138,52)" rx="2" ry="2" />
<text  x="78.74" y="1023.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="21.2" y="997" width="0.2" height="15.0" fill="rgb(216,208,20)" rx="2" ry="2" />
<text  x="24.23" y="1007.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..valued..Valued as core..convert..From&lt;&amp;clap..args..arg..Arg&gt;&gt;::from (10 samples, 0.03%)</title><rect x="75.5" y="1093" width="0.4" height="15.0" fill="rgb(215,172,34)" rx="2" ry="2" />
<text  x="78.55" y="1103.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_map (5,069 samples, 16.13%)</title><rect x="355.8" y="309" width="190.3" height="15.0" fill="rgb(249,129,42)" rx="2" ry="2" />
<text  x="358.80" y="319.5" >_&lt;serde_json..value..de...</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="1004.1" y="757" width="0.1" height="15.0" fill="rgb(250,15,47)" rx="2" ry="2" />
<text  x="1007.05" y="767.5" ></text>
</g>
<g >
<title>serde_json::value::to_value (77 samples, 0.24%)</title><rect x="1111.7" y="629" width="2.9" height="15.0" fill="rgb(223,76,22)" rx="2" ry="2" />
<text  x="1114.72" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for alloc..string..String&gt;::serialize (130 samples, 0.41%)</title><rect x="1125.2" y="613" width="4.8" height="15.0" fill="rgb(214,40,25)" rx="2" ry="2" />
<text  x="1128.16" y="623.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.03%)</title><rect x="125.9" y="1045" width="0.3" height="15.0" fill="rgb(218,16,39)" rx="2" ry="2" />
<text  x="128.86" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..boxed..Box&lt;T&gt; as core..clone..Clone&gt;::clone (3 samples, 0.01%)</title><rect x="240.4" y="405" width="0.1" height="15.0" fill="rgb(209,7,12)" rx="2" ry="2" />
<text  x="243.40" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="1075.3" y="757" width="0.5" height="15.0" fill="rgb(222,24,14)" rx="2" ry="2" />
<text  x="1078.35" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (16 samples, 0.05%)</title><rect x="640.8" y="565" width="0.6" height="15.0" fill="rgb(233,105,2)" rx="2" ry="2" />
<text  x="643.79" y="575.5" ></text>
</g>
<g >
<title>swc_common::syntax_pos::Globals::new (3 samples, 0.01%)</title><rect x="227.3" y="645" width="0.1" height="15.0" fill="rgb(224,46,45)" rx="2" ry="2" />
<text  x="230.33" y="655.5" ></text>
</g>
<g >
<title>_&lt;futures_util..stream..stream..next..Next&lt;St&gt; as core..future..future..Future&gt;::poll (468 samples, 1.49%)</title><rect x="600.2" y="837" width="17.6" height="15.0" fill="rgb(250,171,38)" rx="2" ry="2" />
<text  x="603.24" y="847.5" ></text>
</g>
<g >
<title>url::file_url_segments_to_pathbuf (48 samples, 0.15%)</title><rect x="264.4" y="597" width="1.8" height="15.0" fill="rgb(252,13,12)" rx="2" ry="2" />
<text  x="267.43" y="607.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (34 samples, 0.11%)</title><rect x="137.9" y="1109" width="1.2" height="15.0" fill="rgb(220,124,2)" rx="2" ry="2" />
<text  x="140.87" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="157.6" y="1045" width="0.4" height="15.0" fill="rgb(234,104,45)" rx="2" ry="2" />
<text  x="160.62" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::join (11 samples, 0.03%)</title><rect x="259.0" y="661" width="0.4" height="15.0" fill="rgb(217,193,6)" rx="2" ry="2" />
<text  x="262.02" y="671.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u64 (9 samples, 0.03%)</title><rect x="1123.6" y="517" width="0.4" height="15.0" fill="rgb(230,34,14)" rx="2" ry="2" />
<text  x="1126.62" y="527.5" ></text>
</g>
<g >
<title>_&lt;deno..http_cache..HttpCache as core..clone..Clone&gt;::clone (11 samples, 0.03%)</title><rect x="586.4" y="709" width="0.4" height="15.0" fill="rgb(213,124,29)" rx="2" ry="2" />
<text  x="589.35" y="719.5" ></text>
</g>
<g >
<title>http::header::map::hash_elem_using (12 samples, 0.04%)</title><rect x="665.1" y="805" width="0.4" height="15.0" fill="rgb(226,57,40)" rx="2" ry="2" />
<text  x="668.08" y="815.5" ></text>
</g>
<g >
<title>_&lt;tokio..runtime..context..enter..DropGuard as core..ops..drop..Drop&gt;::drop (6 samples, 0.02%)</title><rect x="206.3" y="1125" width="0.3" height="15.0" fill="rgb(209,163,18)" rx="2" ry="2" />
<text  x="209.35" y="1135.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (3 samples, 0.01%)</title><rect x="229.5" y="565" width="0.1" height="15.0" fill="rgb(219,63,2)" rx="2" ry="2" />
<text  x="232.47" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="190.3" y="1013" width="0.2" height="15.0" fill="rgb(239,69,36)" rx="2" ry="2" />
<text  x="193.32" y="1023.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (20 samples, 0.06%)</title><rect x="547.4" y="197" width="0.8" height="15.0" fill="rgb(231,175,32)" rx="2" ry="2" />
<text  x="550.42" y="207.5" ></text>
</g>
<g >
<title>deno::permissions::Permissions::allow_all (3 samples, 0.01%)</title><rect x="261.8" y="677" width="0.1" height="15.0" fill="rgb(216,65,36)" rx="2" ry="2" />
<text  x="264.76" y="687.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="636.2" y="757" width="0.2" height="15.0" fill="rgb(223,189,53)" rx="2" ry="2" />
<text  x="639.17" y="767.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (12 samples, 0.04%)</title><rect x="1069.1" y="869" width="0.5" height="15.0" fill="rgb(239,18,36)" rx="2" ry="2" />
<text  x="1072.11" y="879.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (603 samples, 1.92%)</title><rect x="413.7" y="133" width="22.6" height="15.0" fill="rgb(233,134,16)" rx="2" ry="2" />
<text  x="416.70" y="143.5" >a..</text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (33 samples, 0.10%)</title><rect x="159.2" y="1013" width="1.2" height="15.0" fill="rgb(210,116,30)" rx="2" ry="2" />
<text  x="162.16" y="1023.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find (7 samples, 0.02%)</title><rect x="20.9" y="997" width="0.3" height="15.0" fill="rgb(243,14,40)" rx="2" ry="2" />
<text  x="23.92" y="1007.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_with_scheme (274 samples, 0.87%)</title><rect x="575.6" y="629" width="10.3" height="15.0" fill="rgb(235,184,38)" rx="2" ry="2" />
<text  x="578.58" y="639.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (8 samples, 0.03%)</title><rect x="77.7" y="1077" width="0.3" height="15.0" fill="rgb(214,186,49)" rx="2" ry="2" />
<text  x="80.69" y="1087.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (65 samples, 0.21%)</title><rect x="1083.5" y="869" width="2.5" height="15.0" fill="rgb(253,130,10)" rx="2" ry="2" />
<text  x="1086.53" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="644.6" y="517" width="0.4" height="15.0" fill="rgb(213,87,34)" rx="2" ry="2" />
<text  x="647.62" y="527.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.03%)</title><rect x="223.2" y="661" width="0.4" height="15.0" fill="rgb(232,131,23)" rx="2" ry="2" />
<text  x="226.20" y="671.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.03%)</title><rect x="79.3" y="1125" width="0.3" height="15.0" fill="rgb(218,151,50)" rx="2" ry="2" />
<text  x="82.34" y="1135.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for &amp;T&gt;::hash (12 samples, 0.04%)</title><rect x="1000.8" y="805" width="0.4" height="15.0" fill="rgb(226,208,21)" rx="2" ry="2" />
<text  x="1003.79" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="600.1" y="661" width="0.1" height="15.0" fill="rgb(224,212,48)" rx="2" ry="2" />
<text  x="603.06" y="671.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (49 samples, 0.16%)</title><rect x="183.0" y="1045" width="1.8" height="15.0" fill="rgb(220,66,50)" rx="2" ry="2" />
<text  x="186.00" y="1055.5" ></text>
</g>
<g >
<title>deno::tsc::pre_process_file (433 samples, 1.38%)</title><rect x="224.4" y="677" width="16.3" height="15.0" fill="rgb(209,138,33)" rx="2" ry="2" />
<text  x="227.41" y="687.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (48 samples, 0.15%)</title><rect x="147.5" y="1013" width="1.8" height="15.0" fill="rgb(227,102,22)" rx="2" ry="2" />
<text  x="150.48" y="1023.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (11 samples, 0.03%)</title><rect x="1048.8" y="821" width="0.4" height="15.0" fill="rgb(228,55,35)" rx="2" ry="2" />
<text  x="1051.76" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="154.8" y="1061" width="0.2" height="15.0" fill="rgb(213,224,31)" rx="2" ry="2" />
<text  x="157.80" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="142.0" y="1093" width="0.3" height="15.0" fill="rgb(207,120,31)" rx="2" ry="2" />
<text  x="145.04" y="1103.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (751 samples, 2.39%)</title><rect x="517.9" y="245" width="28.2" height="15.0" fill="rgb(251,13,25)" rx="2" ry="2" />
<text  x="520.91" y="255.5" >i..</text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="142.3" y="1077" width="0.2" height="15.0" fill="rgb(206,97,48)" rx="2" ry="2" />
<text  x="145.30" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="588.7" y="565" width="0.1" height="15.0" fill="rgb(205,70,21)" rx="2" ry="2" />
<text  x="591.68" y="575.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.03%)</title><rect x="1033.8" y="853" width="0.4" height="15.0" fill="rgb(222,84,25)" rx="2" ry="2" />
<text  x="1036.82" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="153.3" y="1061" width="0.2" height="15.0" fill="rgb(227,177,25)" rx="2" ry="2" />
<text  x="156.30" y="1071.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner (11 samples, 0.03%)</title><rect x="233.9" y="277" width="0.4" height="15.0" fill="rgb(223,2,22)" rx="2" ry="2" />
<text  x="236.87" y="287.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="1180.7" y="853" width="0.3" height="15.0" fill="rgb(213,78,24)" rx="2" ry="2" />
<text  x="1183.65" y="863.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (8 samples, 0.03%)</title><rect x="210.7" y="725" width="0.3" height="15.0" fill="rgb(220,197,48)" rx="2" ry="2" />
<text  x="213.66" y="735.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="1186.1" y="853" width="0.2" height="15.0" fill="rgb(236,104,38)" rx="2" ry="2" />
<text  x="1189.06" y="863.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (56 samples, 0.18%)</title><rect x="271.6" y="453" width="2.1" height="15.0" fill="rgb(249,132,23)" rx="2" ry="2" />
<text  x="274.56" y="463.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..TextDocument as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="613.2" y="549" width="0.3" height="15.0" fill="rgb(245,129,21)" rx="2" ry="2" />
<text  x="616.16" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="715.8" y="565" width="0.2" height="15.0" fill="rgb(212,172,12)" rx="2" ry="2" />
<text  x="718.84" y="575.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="135.5" y="1045" width="0.2" height="15.0" fill="rgb(214,116,25)" rx="2" ry="2" />
<text  x="138.50" y="1055.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::with_name (3 samples, 0.01%)</title><rect x="78.0" y="1141" width="0.1" height="15.0" fill="rgb(212,184,3)" rx="2" ry="2" />
<text  x="80.99" y="1151.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as serde_json..value..index..Index&gt;::index_into (19 samples, 0.06%)</title><rect x="574.5" y="661" width="0.7" height="15.0" fill="rgb(238,76,11)" rx="2" ry="2" />
<text  x="577.45" y="671.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.05%)</title><rect x="217.2" y="549" width="0.6" height="15.0" fill="rgb(245,105,32)" rx="2" ry="2" />
<text  x="220.20" y="559.5" ></text>
</g>
<g >
<title>deno::flags::inspect_args (35 samples, 0.11%)</title><rect x="178.7" y="1125" width="1.3" height="15.0" fill="rgb(247,229,13)" rx="2" ry="2" />
<text  x="181.72" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="646.5" y="709" width="0.2" height="15.0" fill="rgb(227,212,22)" rx="2" ry="2" />
<text  x="649.53" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="262.8" y="533" width="0.1" height="15.0" fill="rgb(243,5,37)" rx="2" ry="2" />
<text  x="265.81" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="166.1" y="1045" width="0.2" height="15.0" fill="rgb(227,195,46)" rx="2" ry="2" />
<text  x="169.14" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="114.2" y="1077" width="0.2" height="15.0" fill="rgb(221,208,24)" rx="2" ry="2" />
<text  x="117.18" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="223.3" y="629" width="0.3" height="15.0" fill="rgb(233,229,38)" rx="2" ry="2" />
<text  x="226.28" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="98.9" y="1045" width="0.1" height="15.0" fill="rgb(247,63,21)" rx="2" ry="2" />
<text  x="101.86" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (41 samples, 0.13%)</title><rect x="637.1" y="917" width="1.5" height="15.0" fill="rgb(210,210,48)" rx="2" ry="2" />
<text  x="640.07" y="927.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (7 samples, 0.02%)</title><rect x="216.4" y="485" width="0.3" height="15.0" fill="rgb(238,134,15)" rx="2" ry="2" />
<text  x="219.41" y="495.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="218.6" y="565" width="0.2" height="15.0" fill="rgb(236,54,5)" rx="2" ry="2" />
<text  x="221.62" y="575.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="620.4" y="773" width="0.3" height="15.0" fill="rgb(226,31,24)" rx="2" ry="2" />
<text  x="623.37" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="599.9" y="645" width="0.1" height="15.0" fill="rgb(224,112,50)" rx="2" ry="2" />
<text  x="602.87" y="655.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (90 samples, 0.29%)</title><rect x="255.6" y="213" width="3.4" height="15.0" fill="rgb(214,17,10)" rx="2" ry="2" />
<text  x="258.60" y="223.5" ></text>
</g>
<g >
<title>_&lt;swc_common..syntax_pos..FileName as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="229.6" y="613" width="0.2" height="15.0" fill="rgb(231,174,30)" rx="2" ry="2" />
<text  x="232.59" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="153.3" y="1077" width="0.2" height="15.0" fill="rgb(246,68,16)" rx="2" ry="2" />
<text  x="156.26" y="1087.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.01%)</title><rect x="1094.6" y="853" width="0.2" height="15.0" fill="rgb(208,63,17)" rx="2" ry="2" />
<text  x="1097.64" y="863.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (459 samples, 1.46%)</title><rect x="554.1" y="373" width="17.3" height="15.0" fill="rgb(251,197,45)" rx="2" ry="2" />
<text  x="557.14" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (7 samples, 0.02%)</title><rect x="141.7" y="1093" width="0.3" height="15.0" fill="rgb(216,43,51)" rx="2" ry="2" />
<text  x="144.70" y="1103.5" ></text>
</g>
<g >
<title>deno::tsc::TsCompiler::get_metadata (95 samples, 0.30%)</title><rect x="263.8" y="661" width="3.6" height="15.0" fill="rgb(207,8,7)" rx="2" ry="2" />
<text  x="266.79" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (72 samples, 0.23%)</title><rect x="639.1" y="805" width="2.7" height="15.0" fill="rgb(254,29,6)" rx="2" ry="2" />
<text  x="642.10" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (22 samples, 0.07%)</title><rect x="999.6" y="805" width="0.8" height="15.0" fill="rgb(247,35,40)" rx="2" ry="2" />
<text  x="1002.62" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="136.6" y="1125" width="0.2" height="15.0" fill="rgb(214,124,49)" rx="2" ry="2" />
<text  x="139.59" y="1135.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::is_present (16 samples, 0.05%)</title><rect x="73.0" y="1173" width="0.6" height="15.0" fill="rgb(213,198,54)" rx="2" ry="2" />
<text  x="76.00" y="1183.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="128.6" y="1093" width="0.2" height="15.0" fill="rgb(211,215,36)" rx="2" ry="2" />
<text  x="131.60" y="1103.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (16 samples, 0.05%)</title><rect x="112.0" y="1125" width="0.6" height="15.0" fill="rgb(213,208,43)" rx="2" ry="2" />
<text  x="115.00" y="1135.5" ></text>
</g>
<g >
<title>alloc::collections::btree::navigate::_&lt;impl alloc..collections..btree..node..Handle&lt;alloc..collections..btree..node..NodeRef&lt;alloc..collections..btree..node..marker..Owned,K,V,alloc..collections..btree..node..marker..Leaf&gt;,alloc..collections..btree..node..marker..Edge&gt;&gt;::next_unchecked (3 samples, 0.01%)</title><rect x="23.1" y="917" width="0.1" height="15.0" fill="rgb(248,28,1)" rx="2" ry="2" />
<text  x="26.10" y="927.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1057.9" y="837" width="0.1" height="15.0" fill="rgb(229,106,14)" rx="2" ry="2" />
<text  x="1060.85" y="847.5" ></text>
</g>
<g >
<title>serde_json::value::ser::_&lt;impl serde..ser..Serialize for serde_json..value..Value&gt;::serialize (157 samples, 0.50%)</title><rect x="1118.2" y="613" width="5.9" height="15.0" fill="rgb(222,133,28)" rx="2" ry="2" />
<text  x="1121.18" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (8 samples, 0.03%)</title><rect x="73.3" y="1109" width="0.3" height="15.0" fill="rgb(219,226,0)" rx="2" ry="2" />
<text  x="76.30" y="1119.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (19 samples, 0.06%)</title><rect x="21.9" y="869" width="0.8" height="15.0" fill="rgb(205,156,3)" rx="2" ry="2" />
<text  x="24.94" y="879.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="1061.6" y="821" width="0.1" height="15.0" fill="rgb(246,74,33)" rx="2" ry="2" />
<text  x="1064.60" y="831.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (50 samples, 0.16%)</title><rect x="130.7" y="1077" width="1.8" height="15.0" fill="rgb(254,71,22)" rx="2" ry="2" />
<text  x="133.66" y="1087.5" ></text>
</g>
<g >
<title>_&lt;core..option..Option&lt;T&gt; as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="75.6" y="1061" width="0.3" height="15.0" fill="rgb(239,179,2)" rx="2" ry="2" />
<text  x="78.62" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="588.6" y="581" width="0.2" height="15.0" fill="rgb(217,21,45)" rx="2" ry="2" />
<text  x="591.64" y="591.5" ></text>
</g>
<g >
<title>deno::flags::config_arg (10 samples, 0.03%)</title><rect x="153.8" y="1125" width="0.4" height="15.0" fill="rgb(211,26,41)" rx="2" ry="2" />
<text  x="156.79" y="1135.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (118 samples, 0.38%)</title><rect x="158.0" y="1077" width="4.4" height="15.0" fill="rgb(231,43,33)" rx="2" ry="2" />
<text  x="160.96" y="1087.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for &amp;T&gt;::serialize (70 samples, 0.22%)</title><rect x="1135.3" y="597" width="2.6" height="15.0" fill="rgb(214,213,22)" rx="2" ry="2" />
<text  x="1138.30" y="607.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="1138.4" y="677" width="0.2" height="15.0" fill="rgb(211,154,15)" rx="2" ry="2" />
<text  x="1141.42" y="687.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="101.5" y="1077" width="0.1" height="15.0" fill="rgb(227,85,49)" rx="2" ry="2" />
<text  x="104.49" y="1087.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (9 samples, 0.03%)</title><rect x="600.7" y="661" width="0.3" height="15.0" fill="rgb(223,102,21)" rx="2" ry="2" />
<text  x="603.66" y="671.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope::with_context (5 samples, 0.02%)</title><rect x="210.0" y="837" width="0.2" height="15.0" fill="rgb(218,206,34)" rx="2" ry="2" />
<text  x="212.99" y="847.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (18 samples, 0.06%)</title><rect x="237.7" y="389" width="0.6" height="15.0" fill="rgb(208,190,19)" rx="2" ry="2" />
<text  x="240.66" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (54 samples, 0.17%)</title><rect x="656.1" y="357" width="2.0" height="15.0" fill="rgb(251,188,1)" rx="2" ry="2" />
<text  x="659.11" y="367.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner::_{{closure}} (17 samples, 0.05%)</title><rect x="237.7" y="373" width="0.6" height="15.0" fill="rgb(227,176,31)" rx="2" ry="2" />
<text  x="240.70" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1062.0" y="741" width="0.1" height="15.0" fill="rgb(254,36,11)" rx="2" ry="2" />
<text  x="1065.02" y="751.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (8 samples, 0.03%)</title><rect x="205.4" y="965" width="0.3" height="15.0" fill="rgb(243,90,26)" rx="2" ry="2" />
<text  x="208.41" y="975.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (9 samples, 0.03%)</title><rect x="517.5" y="213" width="0.3" height="15.0" fill="rgb(210,226,54)" rx="2" ry="2" />
<text  x="520.46" y="223.5" ></text>
</g>
<g >
<title>clap::app::App::arg (17 samples, 0.05%)</title><rect x="111.3" y="1125" width="0.6" height="15.0" fill="rgb(252,63,50)" rx="2" ry="2" />
<text  x="114.29" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="14.3" y="1077" width="0.2" height="15.0" fill="rgb(248,76,47)" rx="2" ry="2" />
<text  x="17.32" y="1087.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (24 samples, 0.08%)</title><rect x="1082.6" y="869" width="0.9" height="15.0" fill="rgb(224,13,19)" rx="2" ry="2" />
<text  x="1085.63" y="879.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (8 samples, 0.03%)</title><rect x="260.3" y="549" width="0.3" height="15.0" fill="rgb(208,35,50)" rx="2" ry="2" />
<text  x="263.33" y="559.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::get_matches_with (345 samples, 1.10%)</title><rect x="13.2" y="1141" width="12.9" height="15.0" fill="rgb(222,103,11)" rx="2" ry="2" />
<text  x="16.15" y="1151.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="105.1" y="1125" width="0.3" height="15.0" fill="rgb(222,107,33)" rx="2" ry="2" />
<text  x="108.13" y="1135.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::pool::BlockingPool::shutdown (25 samples, 0.08%)</title><rect x="198.5" y="1141" width="0.9" height="15.0" fill="rgb(235,171,33)" rx="2" ry="2" />
<text  x="201.50" y="1151.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="142.6" y="1077" width="0.3" height="15.0" fill="rgb(231,38,1)" rx="2" ry="2" />
<text  x="145.60" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1115.3" y="565" width="0.1" height="15.0" fill="rgb(250,210,43)" rx="2" ry="2" />
<text  x="1118.25" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (8 samples, 0.03%)</title><rect x="629.7" y="613" width="0.3" height="15.0" fill="rgb(241,14,0)" rx="2" ry="2" />
<text  x="632.71" y="623.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="999.0" y="837" width="0.2" height="15.0" fill="rgb(217,160,39)" rx="2" ry="2" />
<text  x="1002.02" y="847.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::new_try_catch_data (4 samples, 0.01%)</title><rect x="1179.6" y="869" width="0.2" height="15.0" fill="rgb(235,45,30)" rx="2" ry="2" />
<text  x="1182.60" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="1005.3" y="757" width="0.3" height="15.0" fill="rgb(209,103,31)" rx="2" ry="2" />
<text  x="1008.25" y="767.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as http..header..map..into_header_name..Sealed&gt;::insert (14 samples, 0.04%)</title><rect x="836.1" y="837" width="0.5" height="15.0" fill="rgb(249,41,17)" rx="2" ry="2" />
<text  x="839.09" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.01%)</title><rect x="1094.7" y="837" width="0.1" height="15.0" fill="rgb(232,83,13)" rx="2" ry="2" />
<text  x="1097.68" y="847.5" ></text>
</g>
<g >
<title>deno::flags::bundle_subcommand (252 samples, 0.80%)</title><rect x="80.1" y="1157" width="9.5" height="15.0" fill="rgb(242,212,26)" rx="2" ry="2" />
<text  x="83.13" y="1167.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (15 samples, 0.05%)</title><rect x="157.4" y="1077" width="0.6" height="15.0" fill="rgb(252,50,30)" rx="2" ry="2" />
<text  x="160.39" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (8 samples, 0.03%)</title><rect x="222.1" y="469" width="0.3" height="15.0" fill="rgb(214,77,12)" rx="2" ry="2" />
<text  x="225.08" y="479.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_fold::_{{closure}} (14 samples, 0.04%)</title><rect x="205.2" y="981" width="0.5" height="15.0" fill="rgb(208,220,38)" rx="2" ry="2" />
<text  x="208.18" y="991.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (189 samples, 0.60%)</title><rect x="1025.1" y="837" width="7.1" height="15.0" fill="rgb(224,8,40)" rx="2" ry="2" />
<text  x="1028.11" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (15 samples, 0.05%)</title><rect x="1060.1" y="773" width="0.6" height="15.0" fill="rgb(248,136,0)" rx="2" ry="2" />
<text  x="1063.10" y="783.5" ></text>
</g>
<g >
<title>deno::flags::inspect_arg_parse (13 samples, 0.04%)</title><rect x="194.3" y="1141" width="0.5" height="15.0" fill="rgb(212,125,49)" rx="2" ry="2" />
<text  x="197.33" y="1151.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (21 samples, 0.07%)</title><rect x="1067.0" y="805" width="0.8" height="15.0" fill="rgb(240,32,50)" rx="2" ry="2" />
<text  x="1070.05" y="815.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::add_val_to (25 samples, 0.08%)</title><rect x="15.9" y="1061" width="0.9" height="15.0" fill="rgb(244,12,29)" rx="2" ry="2" />
<text  x="18.89" y="1071.5" ></text>
</g>
<g >
<title>deno_core::bindings::boxed_slice_to_uint8array (9 samples, 0.03%)</title><rect x="1100.0" y="757" width="0.3" height="15.0" fill="rgb(253,160,33)" rx="2" ry="2" />
<text  x="1103.01" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="1035.5" y="805" width="0.2" height="15.0" fill="rgb(232,26,12)" rx="2" ry="2" />
<text  x="1038.55" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (28 samples, 0.09%)</title><rect x="1003.1" y="805" width="1.1" height="15.0" fill="rgb(207,50,44)" rx="2" ry="2" />
<text  x="1006.11" y="815.5" ></text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for alloc..vec..Vec&lt;u8&gt;&gt;::write_all (7 samples, 0.02%)</title><rect x="1123.7" y="485" width="0.3" height="15.0" fill="rgb(228,191,24)" rx="2" ry="2" />
<text  x="1126.70" y="495.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1061.6" y="837" width="0.1" height="15.0" fill="rgb(223,175,53)" rx="2" ry="2" />
<text  x="1064.57" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="666.0" y="869" width="0.2" height="15.0" fill="rgb(233,62,9)" rx="2" ry="2" />
<text  x="669.02" y="879.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (62 samples, 0.20%)</title><rect x="597.5" y="661" width="2.3" height="15.0" fill="rgb(212,14,12)" rx="2" ry="2" />
<text  x="600.47" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (8 samples, 0.03%)</title><rect x="613.9" y="533" width="0.3" height="15.0" fill="rgb(249,222,47)" rx="2" ry="2" />
<text  x="616.91" y="543.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.01%)</title><rect x="21.1" y="933" width="0.1" height="15.0" fill="rgb(205,181,35)" rx="2" ry="2" />
<text  x="24.08" y="943.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="13.4" y="1077" width="0.2" height="15.0" fill="rgb(236,146,46)" rx="2" ry="2" />
<text  x="16.42" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="668.1" y="581" width="0.2" height="15.0" fill="rgb(210,126,4)" rx="2" ry="2" />
<text  x="671.12" y="591.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="1000.1" y="677" width="0.3" height="15.0" fill="rgb(238,173,52)" rx="2" ry="2" />
<text  x="1003.07" y="687.5" ></text>
</g>
<g >
<title>core::str::traits::_&lt;impl core..cmp..PartialEq for str&gt;::eq (4 samples, 0.01%)</title><rect x="213.1" y="437" width="0.2" height="15.0" fill="rgb(225,55,44)" rx="2" ry="2" />
<text  x="216.11" y="447.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..HashMap&lt;K,V,S&gt; as core..default..Default&gt;::default (5 samples, 0.02%)</title><rect x="663.1" y="853" width="0.2" height="15.0" fill="rgb(247,170,22)" rx="2" ry="2" />
<text  x="666.09" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.05%)</title><rect x="283.8" y="133" width="0.6" height="15.0" fill="rgb(224,149,39)" rx="2" ry="2" />
<text  x="286.84" y="143.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (175 samples, 0.56%)</title><rect x="66.4" y="1061" width="6.6" height="15.0" fill="rgb(208,54,7)" rx="2" ry="2" />
<text  x="69.43" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1034.8" y="741" width="0.1" height="15.0" fill="rgb(223,171,10)" rx="2" ry="2" />
<text  x="1037.76" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="1005.3" y="741" width="0.3" height="15.0" fill="rgb(249,216,47)" rx="2" ry="2" />
<text  x="1008.33" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="1112.5" y="501" width="0.3" height="15.0" fill="rgb(246,126,1)" rx="2" ry="2" />
<text  x="1115.55" y="511.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::find (13 samples, 0.04%)</title><rect x="837.5" y="805" width="0.5" height="15.0" fill="rgb(236,201,45)" rx="2" ry="2" />
<text  x="840.48" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (6 samples, 0.02%)</title><rect x="617.4" y="501" width="0.2" height="15.0" fill="rgb(231,115,44)" rx="2" ry="2" />
<text  x="620.36" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="1089.8" y="741" width="0.1" height="15.0" fill="rgb(239,156,40)" rx="2" ry="2" />
<text  x="1092.80" y="751.5" ></text>
</g>
<g >
<title>core::mem::swap (5 samples, 0.02%)</title><rect x="1088.8" y="757" width="0.2" height="15.0" fill="rgb(240,186,24)" rx="2" ry="2" />
<text  x="1091.82" y="767.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="115.0" y="1029" width="0.2" height="15.0" fill="rgb(211,156,28)" rx="2" ry="2" />
<text  x="118.04" y="1039.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (87 samples, 0.28%)</title><rect x="1182.2" y="853" width="3.2" height="15.0" fill="rgb(234,69,37)" rx="2" ry="2" />
<text  x="1185.15" y="863.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.05%)</title><rect x="240.7" y="661" width="0.6" height="15.0" fill="rgb(239,34,47)" rx="2" ry="2" />
<text  x="243.70" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.03%)</title><rect x="1137.3" y="437" width="0.4" height="15.0" fill="rgb(216,145,43)" rx="2" ry="2" />
<text  x="1140.29" y="447.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="243.9" y="677" width="0.4" height="15.0" fill="rgb(215,174,38)" rx="2" ry="2" />
<text  x="246.93" y="687.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (86 samples, 0.27%)</title><rect x="1065.8" y="885" width="3.2" height="15.0" fill="rgb(229,14,39)" rx="2" ry="2" />
<text  x="1068.77" y="895.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert2 (25 samples, 0.08%)</title><rect x="664.0" y="853" width="0.9" height="15.0" fill="rgb(228,167,19)" rx="2" ry="2" />
<text  x="666.95" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (59 samples, 0.19%)</title><rect x="639.6" y="693" width="2.2" height="15.0" fill="rgb(252,63,5)" rx="2" ry="2" />
<text  x="642.59" y="703.5" ></text>
</g>
<g >
<title>core::str::pattern::Searcher::next_reject (5 samples, 0.02%)</title><rect x="79.9" y="1093" width="0.2" height="15.0" fill="rgb(217,182,40)" rx="2" ry="2" />
<text  x="82.90" y="1103.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_str (12 samples, 0.04%)</title><rect x="321.3" y="373" width="0.4" height="15.0" fill="rgb(236,178,40)" rx="2" ry="2" />
<text  x="324.27" y="383.5" ></text>
</g>
<g >
<title>deno::flags::inspect_args (33 samples, 0.10%)</title><rect x="140.0" y="1141" width="1.2" height="15.0" fill="rgb(233,24,35)" rx="2" ry="2" />
<text  x="143.01" y="1151.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..ser..Serializer as serde..ser..Serializer&gt;::serialize_seq (5 samples, 0.02%)</title><rect x="1137.7" y="517" width="0.2" height="15.0" fill="rgb(216,104,29)" rx="2" ry="2" />
<text  x="1140.74" y="527.5" ></text>
</g>
<g >
<title>url::parser::Parser::file_host (11 samples, 0.03%)</title><rect x="601.6" y="645" width="0.4" height="15.0" fill="rgb(228,195,15)" rx="2" ry="2" />
<text  x="604.60" y="655.5" ></text>
</g>
<g >
<title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (3 samples, 0.01%)</title><rect x="617.7" y="661" width="0.1" height="15.0" fill="rgb(223,149,1)" rx="2" ry="2" />
<text  x="620.66" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="141.5" y="1061" width="0.2" height="15.0" fill="rgb(237,151,54)" rx="2" ry="2" />
<text  x="144.55" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1088.5" y="789" width="0.1" height="15.0" fill="rgb(235,18,11)" rx="2" ry="2" />
<text  x="1091.48" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.04%)</title><rect x="1129.6" y="469" width="0.4" height="15.0" fill="rgb(208,175,31)" rx="2" ry="2" />
<text  x="1132.56" y="479.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::state (14 samples, 0.04%)</title><rect x="622.3" y="821" width="0.5" height="15.0" fill="rgb(209,110,6)" rx="2" ry="2" />
<text  x="625.28" y="831.5" ></text>
</g>
<g >
<title>_&lt;deno_core..modules..RecursiveModuleLoad as futures_core..stream..Stream&gt;::poll_next (466 samples, 1.48%)</title><rect x="600.3" y="805" width="17.5" height="15.0" fill="rgb(231,161,12)" rx="2" ry="2" />
<text  x="603.32" y="815.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileFetcher::fetch_cached_source_file (46 samples, 0.15%)</title><rect x="261.9" y="661" width="1.8" height="15.0" fill="rgb(210,95,52)" rx="2" ry="2" />
<text  x="264.95" y="671.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (7 samples, 0.02%)</title><rect x="192.7" y="997" width="0.3" height="15.0" fill="rgb(210,223,50)" rx="2" ry="2" />
<text  x="195.72" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (380 samples, 1.21%)</title><rect x="244.7" y="517" width="14.3" height="15.0" fill="rgb(251,57,49)" rx="2" ry="2" />
<text  x="247.72" y="527.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="153.6" y="1061" width="0.2" height="15.0" fill="rgb(250,127,11)" rx="2" ry="2" />
<text  x="156.60" y="1071.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..SeqAccess&lt;R&gt; as serde..de..SeqAccess&gt;::next_element_seed (664 samples, 2.11%)</title><rect x="296.0" y="373" width="25.0" height="15.0" fill="rgb(208,128,32)" rx="2" ry="2" />
<text  x="299.04" y="383.5" >_..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (89 samples, 0.28%)</title><rect x="317.6" y="165" width="3.3" height="15.0" fill="rgb(218,175,30)" rx="2" ry="2" />
<text  x="320.59" y="175.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1186.8" y="805" width="0.1" height="15.0" fill="rgb(246,185,31)" rx="2" ry="2" />
<text  x="1189.77" y="815.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="267.1" y="389" width="0.3" height="15.0" fill="rgb(234,48,20)" rx="2" ry="2" />
<text  x="270.13" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="223.4" y="581" width="0.1" height="15.0" fill="rgb(212,56,24)" rx="2" ry="2" />
<text  x="226.39" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::calculate_layout (3 samples, 0.01%)</title><rect x="833.5" y="773" width="0.1" height="15.0" fill="rgb(225,181,50)" rx="2" ry="2" />
<text  x="836.53" y="783.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (8,073 samples, 25.68%)</title><rect x="270.4" y="565" width="303.1" height="15.0" fill="rgb(240,117,46)" rx="2" ry="2" />
<text  x="273.43" y="575.5" >_&lt;core..marker..PhantomData&lt;T&gt; as serde...</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="141.5" y="1093" width="0.2" height="15.0" fill="rgb(227,116,46)" rx="2" ry="2" />
<text  x="144.47" y="1103.5" ></text>
</g>
<g >
<title>deno::version::v8 (3 samples, 0.01%)</title><rect x="74.6" y="1077" width="0.1" height="15.0" fill="rgb(238,82,32)" rx="2" ry="2" />
<text  x="77.61" y="1087.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="198.1" y="1109" width="0.2" height="15.0" fill="rgb(212,39,48)" rx="2" ry="2" />
<text  x="201.13" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="1077.3" y="789" width="0.2" height="15.0" fill="rgb(211,197,4)" rx="2" ry="2" />
<text  x="1080.33" y="799.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (120 samples, 0.38%)</title><rect x="1101.9" y="613" width="4.5" height="15.0" fill="rgb(219,98,0)" rx="2" ry="2" />
<text  x="1104.89" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="137.1" y="997" width="0.1" height="15.0" fill="rgb(234,175,25)" rx="2" ry="2" />
<text  x="140.12" y="1007.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="1031.8" y="709" width="0.2" height="15.0" fill="rgb(234,212,4)" rx="2" ry="2" />
<text  x="1034.83" y="719.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (18 samples, 0.06%)</title><rect x="138.0" y="1093" width="0.7" height="15.0" fill="rgb(219,74,4)" rx="2" ry="2" />
<text  x="140.98" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="1110.4" y="517" width="0.3" height="15.0" fill="rgb(223,205,19)" rx="2" ry="2" />
<text  x="1113.45" y="527.5" ></text>
</g>
<g >
<title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (168 samples, 0.53%)</title><rect x="611.5" y="789" width="6.3" height="15.0" fill="rgb(213,134,40)" rx="2" ry="2" />
<text  x="614.51" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="263.2" y="501" width="0.1" height="15.0" fill="rgb(223,50,11)" rx="2" ry="2" />
<text  x="266.19" y="511.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (48 samples, 0.15%)</title><rect x="1174.0" y="853" width="1.8" height="15.0" fill="rgb(216,56,24)" rx="2" ry="2" />
<text  x="1177.01" y="863.5" ></text>
</g>
<g >
<title>deno_core::bindings::set_macrotask_callback (9 samples, 0.03%)</title><rect x="1171.0" y="773" width="0.3" height="15.0" fill="rgb(230,82,37)" rx="2" ry="2" />
<text  x="1174.00" y="783.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_file_host (12 samples, 0.04%)</title><rect x="575.7" y="597" width="0.4" height="15.0" fill="rgb(207,132,43)" rx="2" ry="2" />
<text  x="578.65" y="607.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (6 samples, 0.02%)</title><rect x="209.1" y="821" width="0.2" height="15.0" fill="rgb(214,77,10)" rx="2" ry="2" />
<text  x="212.05" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="215.4" y="421" width="0.3" height="15.0" fill="rgb(216,138,47)" rx="2" ry="2" />
<text  x="218.40" y="431.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (66 samples, 0.21%)</title><rect x="1080.0" y="885" width="2.4" height="15.0" fill="rgb(220,97,33)" rx="2" ry="2" />
<text  x="1082.96" y="895.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (49 samples, 0.16%)</title><rect x="122.2" y="1061" width="1.9" height="15.0" fill="rgb(250,220,12)" rx="2" ry="2" />
<text  x="125.21" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (9 samples, 0.03%)</title><rect x="1134.2" y="517" width="0.3" height="15.0" fill="rgb(233,192,11)" rx="2" ry="2" />
<text  x="1137.17" y="527.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="1114.8" y="661" width="0.6" height="15.0" fill="rgb(220,34,47)" rx="2" ry="2" />
<text  x="1117.80" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.07%)</title><rect x="1184.6" y="741" width="0.8" height="15.0" fill="rgb(234,174,17)" rx="2" ry="2" />
<text  x="1187.56" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (130 samples, 0.41%)</title><rect x="465.3" y="69" width="4.9" height="15.0" fill="rgb(228,66,24)" rx="2" ry="2" />
<text  x="468.28" y="79.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (158 samples, 0.50%)</title><rect x="27.2" y="1109" width="5.9" height="15.0" fill="rgb(215,199,35)" rx="2" ry="2" />
<text  x="30.19" y="1119.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (5 samples, 0.02%)</title><rect x="636.8" y="885" width="0.2" height="15.0" fill="rgb(233,177,35)" rx="2" ry="2" />
<text  x="639.85" y="895.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="217.4" y="469" width="0.1" height="15.0" fill="rgb(234,161,20)" rx="2" ry="2" />
<text  x="220.39" y="479.5" ></text>
</g>
<g >
<title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (3 samples, 0.01%)</title><rect x="217.9" y="613" width="0.1" height="15.0" fill="rgb(231,54,38)" rx="2" ry="2" />
<text  x="220.87" y="623.5" ></text>
</g>
<g >
<title>url::path_to_file_url_segments (70 samples, 0.22%)</title><rect x="1186.9" y="885" width="2.6" height="15.0" fill="rgb(242,225,25)" rx="2" ry="2" />
<text  x="1189.88" y="895.5" ></text>
</g>
<g >
<title>_&lt;reqwest..proxy..SYS_PROXIES as core..ops..deref..Deref&gt;::deref (11 samples, 0.03%)</title><rect x="758.5" y="853" width="0.4" height="15.0" fill="rgb(215,215,41)" rx="2" ry="2" />
<text  x="761.49" y="863.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="18.6" y="917" width="0.2" height="15.0" fill="rgb(234,110,1)" rx="2" ry="2" />
<text  x="21.60" y="927.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="321.5" y="293" width="0.2" height="15.0" fill="rgb(249,29,30)" rx="2" ry="2" />
<text  x="324.45" y="303.5" ></text>
</g>
<g >
<title>http::header::map::hash_elem_using (12 samples, 0.04%)</title><rect x="664.4" y="837" width="0.5" height="15.0" fill="rgb(222,35,7)" rx="2" ry="2" />
<text  x="667.44" y="847.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..raw..RawTable&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="658.8" y="485" width="0.1" height="15.0" fill="rgb(252,207,40)" rx="2" ry="2" />
<text  x="661.77" y="495.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (19 samples, 0.06%)</title><rect x="838.6" y="693" width="0.7" height="15.0" fill="rgb(242,12,35)" rx="2" ry="2" />
<text  x="841.60" y="703.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="757.8" y="533" width="0.3" height="15.0" fill="rgb(209,94,12)" rx="2" ry="2" />
<text  x="760.85" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (18 samples, 0.06%)</title><rect x="657.4" y="149" width="0.7" height="15.0" fill="rgb(206,65,25)" rx="2" ry="2" />
<text  x="660.38" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="210.8" y="661" width="0.2" height="15.0" fill="rgb(228,28,17)" rx="2" ry="2" />
<text  x="213.82" y="671.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="262.7" y="597" width="0.2" height="15.0" fill="rgb(223,70,17)" rx="2" ry="2" />
<text  x="265.66" y="607.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (21 samples, 0.07%)</title><rect x="829.6" y="773" width="0.8" height="15.0" fill="rgb(218,104,45)" rx="2" ry="2" />
<text  x="832.59" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="832.3" y="821" width="0.2" height="15.0" fill="rgb(224,210,20)" rx="2" ry="2" />
<text  x="835.33" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (6 samples, 0.02%)</title><rect x="659.0" y="821" width="0.2" height="15.0" fill="rgb(221,13,2)" rx="2" ry="2" />
<text  x="662.00" y="831.5" ></text>
</g>
<g >
<title>deno::disk_cache::DiskCache::get_cache_filename (51 samples, 0.16%)</title><rect x="264.3" y="629" width="1.9" height="15.0" fill="rgb(214,178,7)" rx="2" ry="2" />
<text  x="267.31" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.02%)</title><rect x="83.5" y="1013" width="0.2" height="15.0" fill="rgb(218,108,22)" rx="2" ry="2" />
<text  x="86.51" y="1023.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (158 samples, 0.50%)</title><rect x="1007.1" y="869" width="5.9" height="15.0" fill="rgb(226,181,31)" rx="2" ry="2" />
<text  x="1010.06" y="879.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="202.7" y="1093" width="0.1" height="15.0" fill="rgb(248,192,4)" rx="2" ry="2" />
<text  x="205.67" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (7 samples, 0.02%)</title><rect x="586.1" y="693" width="0.3" height="15.0" fill="rgb(209,89,49)" rx="2" ry="2" />
<text  x="589.09" y="703.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (40 samples, 0.13%)</title><rect x="1136.2" y="533" width="1.5" height="15.0" fill="rgb(224,117,0)" rx="2" ry="2" />
<text  x="1139.16" y="543.5" ></text>
</g>
<g >
<title>clap::app::App::arg (49 samples, 0.16%)</title><rect x="112.7" y="1141" width="1.9" height="15.0" fill="rgb(246,78,16)" rx="2" ry="2" />
<text  x="115.72" y="1151.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="121.0" y="1093" width="0.2" height="15.0" fill="rgb(210,16,30)" rx="2" ry="2" />
<text  x="124.01" y="1103.5" ></text>
</g>
<g >
<title>_&lt;deno..colors..NO_COLOR as core..ops..deref..Deref&gt;::deref (3 samples, 0.01%)</title><rect x="1106.8" y="613" width="0.1" height="15.0" fill="rgb(212,14,3)" rx="2" ry="2" />
<text  x="1109.77" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="111.6" y="1061" width="0.1" height="15.0" fill="rgb(244,77,24)" rx="2" ry="2" />
<text  x="114.59" y="1071.5" ></text>
</g>
<g >
<title>_&lt;futures_util..stream..futures_unordered..FuturesUnordered&lt;Fut&gt; as futures_core..stream..Stream&gt;::poll_next (163 samples, 0.52%)</title><rect x="611.7" y="709" width="6.1" height="15.0" fill="rgb(221,153,10)" rx="2" ry="2" />
<text  x="614.69" y="719.5" ></text>
</g>
<g >
<title>core::cmp::impls::_&lt;impl core..cmp..PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.01%)</title><rect x="213.1" y="421" width="0.2" height="15.0" fill="rgb(242,185,42)" rx="2" ry="2" />
<text  x="216.14" y="431.5" ></text>
</g>
<g >
<title>core::mem::take (3 samples, 0.01%)</title><rect x="1186.4" y="853" width="0.1" height="15.0" fill="rgb(216,28,24)" rx="2" ry="2" />
<text  x="1189.43" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (8 samples, 0.03%)</title><rect x="828.6" y="837" width="0.3" height="15.0" fill="rgb(221,42,14)" rx="2" ry="2" />
<text  x="831.62" y="847.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (78 samples, 0.25%)</title><rect x="101.1" y="1125" width="2.9" height="15.0" fill="rgb(221,114,13)" rx="2" ry="2" />
<text  x="104.12" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..option..Option&lt;T&gt; as core..clone..Clone&gt;::clone (16 samples, 0.05%)</title><rect x="928.4" y="613" width="0.6" height="15.0" fill="rgb(254,186,53)" rx="2" ry="2" />
<text  x="931.44" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="645.9" y="725" width="0.1" height="15.0" fill="rgb(250,29,21)" rx="2" ry="2" />
<text  x="648.86" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="198.2" y="1093" width="0.1" height="15.0" fill="rgb(228,130,0)" rx="2" ry="2" />
<text  x="201.16" y="1103.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..valued..Valued as core..convert..From&lt;&amp;clap..args..arg..Arg&gt;&gt;::from (140 samples, 0.45%)</title><rect x="33.7" y="1093" width="5.2" height="15.0" fill="rgb(230,19,22)" rx="2" ry="2" />
<text  x="36.65" y="1103.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (12 samples, 0.04%)</title><rect x="1032.5" y="869" width="0.5" height="15.0" fill="rgb(237,50,30)" rx="2" ry="2" />
<text  x="1035.55" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="1094.2" y="757" width="0.3" height="15.0" fill="rgb(205,161,14)" rx="2" ry="2" />
<text  x="1097.23" y="767.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="119.4" y="1093" width="0.2" height="15.0" fill="rgb(207,228,44)" rx="2" ry="2" />
<text  x="122.40" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="24.6" y="1061" width="0.1" height="15.0" fill="rgb(219,197,8)" rx="2" ry="2" />
<text  x="27.57" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="64.1" y="1045" width="0.2" height="15.0" fill="rgb(233,158,6)" rx="2" ry="2" />
<text  x="67.14" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="75.4" y="981" width="0.1" height="15.0" fill="rgb(224,16,42)" rx="2" ry="2" />
<text  x="78.40" y="991.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (65 samples, 0.21%)</title><rect x="639.4" y="741" width="2.4" height="15.0" fill="rgb(233,216,14)" rx="2" ry="2" />
<text  x="642.36" y="751.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (20 samples, 0.06%)</title><rect x="95.1" y="1061" width="0.8" height="15.0" fill="rgb(221,209,26)" rx="2" ry="2" />
<text  x="98.15" y="1071.5" ></text>
</g>
<g >
<title>reqwest::connect::Connector::new_rustls_tls (2,433 samples, 7.74%)</title><rect x="667.0" y="869" width="91.3" height="15.0" fill="rgb(243,3,54)" rx="2" ry="2" />
<text  x="669.96" y="879.5" >reqwest::c..</text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="86.8" y="1141" width="0.5" height="15.0" fill="rgb(215,32,2)" rx="2" ry="2" />
<text  x="89.81" y="1151.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (8 samples, 0.03%)</title><rect x="149.7" y="1013" width="0.3" height="15.0" fill="rgb(241,151,20)" rx="2" ry="2" />
<text  x="152.66" y="1023.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.02%)</title><rect x="1033.9" y="837" width="0.3" height="15.0" fill="rgb(225,172,54)" rx="2" ry="2" />
<text  x="1036.90" y="847.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..ser..Serializer&lt;W,F&gt; as serde..ser..Serializer&gt;::serialize_str (15 samples, 0.05%)</title><rect x="1122.9" y="549" width="0.6" height="15.0" fill="rgb(252,96,47)" rx="2" ry="2" />
<text  x="1125.91" y="559.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_subcommand (22 samples, 0.07%)</title><rect x="78.2" y="1141" width="0.8" height="15.0" fill="rgb(218,54,22)" rx="2" ry="2" />
<text  x="81.21" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (258 samples, 0.82%)</title><rect x="426.6" y="69" width="9.7" height="15.0" fill="rgb(246,159,42)" rx="2" ry="2" />
<text  x="429.65" y="79.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="646.5" y="725" width="0.2" height="15.0" fill="rgb(224,180,49)" rx="2" ry="2" />
<text  x="649.50" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 0.05%)</title><rect x="1084.6" y="757" width="0.6" height="15.0" fill="rgb(225,142,52)" rx="2" ry="2" />
<text  x="1087.58" y="767.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="634.2" y="821" width="0.3" height="15.0" fill="rgb(214,12,35)" rx="2" ry="2" />
<text  x="637.22" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="16.4" y="981" width="0.2" height="15.0" fill="rgb(235,192,3)" rx="2" ry="2" />
<text  x="19.38" y="991.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (92 samples, 0.29%)</title><rect x="1038.5" y="869" width="3.4" height="15.0" fill="rgb(208,8,3)" rx="2" ry="2" />
<text  x="1041.48" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="1116.2" y="517" width="0.2" height="15.0" fill="rgb(232,167,16)" rx="2" ry="2" />
<text  x="1119.23" y="527.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (144 samples, 0.46%)</title><rect x="288.0" y="373" width="5.4" height="15.0" fill="rgb(241,183,8)" rx="2" ry="2" />
<text  x="291.00" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="22.9" y="1013" width="0.3" height="15.0" fill="rgb(249,108,51)" rx="2" ry="2" />
<text  x="25.88" y="1023.5" ></text>
</g>
<g >
<title>_&lt;deno..flags..Flags as core..clone..Clone&gt;::clone (43 samples, 0.14%)</title><rect x="661.0" y="917" width="1.6" height="15.0" fill="rgb(242,225,3)" rx="2" ry="2" />
<text  x="664.03" y="927.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (87 samples, 0.28%)</title><rect x="466.9" y="53" width="3.3" height="15.0" fill="rgb(209,125,9)" rx="2" ry="2" />
<text  x="469.89" y="63.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (16 samples, 0.05%)</title><rect x="109.2" y="1061" width="0.6" height="15.0" fill="rgb(235,187,52)" rx="2" ry="2" />
<text  x="112.22" y="1071.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.01%)</title><rect x="267.7" y="581" width="0.1" height="15.0" fill="rgb(232,52,48)" rx="2" ry="2" />
<text  x="270.69" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.02%)</title><rect x="621.4" y="757" width="0.2" height="15.0" fill="rgb(230,126,0)" rx="2" ry="2" />
<text  x="624.38" y="767.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc..string..String,serde_json..value..Value&gt;::insert (1,326 samples, 4.22%)</title><rect x="496.3" y="293" width="49.8" height="15.0" fill="rgb(210,60,12)" rx="2" ry="2" />
<text  x="499.33" y="303.5" >serde..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="839.2" y="565" width="0.1" height="15.0" fill="rgb(241,114,52)" rx="2" ry="2" />
<text  x="842.16" y="575.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (72 samples, 0.23%)</title><rect x="284.5" y="357" width="2.7" height="15.0" fill="rgb(240,49,23)" rx="2" ry="2" />
<text  x="287.47" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1074.4" y="789" width="0.1" height="15.0" fill="rgb(235,148,16)" rx="2" ry="2" />
<text  x="1077.41" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (9 samples, 0.03%)</title><rect x="1134.7" y="501" width="0.4" height="15.0" fill="rgb(216,207,22)" rx="2" ry="2" />
<text  x="1137.74" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (14 samples, 0.04%)</title><rect x="225.0" y="501" width="0.6" height="15.0" fill="rgb(239,56,20)" rx="2" ry="2" />
<text  x="228.04" y="511.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="219.9" y="581" width="0.2" height="15.0" fill="rgb(224,83,2)" rx="2" ry="2" />
<text  x="222.94" y="591.5" ></text>
</g>
<g >
<title>url::Url::parse (279 samples, 0.89%)</title><rect x="622.8" y="805" width="10.5" height="15.0" fill="rgb(237,161,3)" rx="2" ry="2" />
<text  x="625.84" y="815.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="588.9" y="645" width="0.2" height="15.0" fill="rgb(230,171,24)" rx="2" ry="2" />
<text  x="591.91" y="655.5" ></text>
</g>
<g >
<title>_&lt;T as core..slice..SliceContains&gt;::slice_contains::_{{closure}} (6 samples, 0.02%)</title><rect x="213.0" y="469" width="0.3" height="15.0" fill="rgb(254,57,4)" rx="2" ry="2" />
<text  x="216.03" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="834.8" y="741" width="0.2" height="15.0" fill="rgb(224,84,45)" rx="2" ry="2" />
<text  x="837.85" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="833.9" y="853" width="0.4" height="15.0" fill="rgb(232,133,4)" rx="2" ry="2" />
<text  x="836.87" y="863.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="830.9" y="741" width="0.2" height="15.0" fill="rgb(225,120,12)" rx="2" ry="2" />
<text  x="833.91" y="751.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="832.1" y="901" width="0.4" height="15.0" fill="rgb(208,58,28)" rx="2" ry="2" />
<text  x="835.14" y="911.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="13.8" y="1077" width="0.3" height="15.0" fill="rgb(227,151,19)" rx="2" ry="2" />
<text  x="16.79" y="1087.5" ></text>
</g>
<g >
<title>tokio::sync::batch_semaphore::Semaphore::release (5 samples, 0.02%)</title><rect x="612.3" y="549" width="0.1" height="15.0" fill="rgb(241,83,34)" rx="2" ry="2" />
<text  x="615.26" y="559.5" ></text>
</g>
<g >
<title>_&lt;rustls..client..ClientConfig as core..clone..Clone&gt;::clone (2,430 samples, 7.73%)</title><rect x="667.0" y="853" width="91.2" height="15.0" fill="rgb(250,61,54)" rx="2" ry="2" />
<text  x="669.99" y="863.5" >_&lt;rustls....</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (6 samples, 0.02%)</title><rect x="81.9" y="1093" width="0.2" height="15.0" fill="rgb(231,120,45)" rx="2" ry="2" />
<text  x="84.89" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="111.1" y="1061" width="0.2" height="15.0" fill="rgb(220,131,50)" rx="2" ry="2" />
<text  x="114.10" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="75.4" y="997" width="0.1" height="15.0" fill="rgb(209,21,28)" rx="2" ry="2" />
<text  x="78.36" y="1007.5" ></text>
</g>
<g >
<title>deno::worker::create_channels (4 samples, 0.01%)</title><rect x="1086.0" y="885" width="0.2" height="15.0" fill="rgb(239,25,14)" rx="2" ry="2" />
<text  x="1089.01" y="895.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (6 samples, 0.02%)</title><rect x="1080.5" y="805" width="0.3" height="15.0" fill="rgb(241,54,2)" rx="2" ry="2" />
<text  x="1083.53" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (27 samples, 0.09%)</title><rect x="999.4" y="821" width="1.0" height="15.0" fill="rgb(248,229,7)" rx="2" ry="2" />
<text  x="1002.43" y="831.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="623.4" y="693" width="0.4" height="15.0" fill="rgb(244,120,51)" rx="2" ry="2" />
<text  x="626.41" y="703.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (14 samples, 0.04%)</title><rect x="274.3" y="389" width="0.5" height="15.0" fill="rgb(246,114,47)" rx="2" ry="2" />
<text  x="277.30" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (222 samples, 0.71%)</title><rect x="250.6" y="261" width="8.4" height="15.0" fill="rgb(207,62,19)" rx="2" ry="2" />
<text  x="253.65" y="271.5" ></text>
</g>
<g >
<title>_&lt;deno..state..State as deno_core..modules..ModuleLoader&gt;::prepare_load (4 samples, 0.01%)</title><rect x="589.8" y="805" width="0.1" height="15.0" fill="rgb(251,196,28)" rx="2" ry="2" />
<text  x="592.77" y="815.5" ></text>
</g>
<g >
<title>tokio::io::blocking::Buf::with_capacity (15 samples, 0.05%)</title><rect x="833.8" y="869" width="0.5" height="15.0" fill="rgb(217,148,7)" rx="2" ry="2" />
<text  x="836.76" y="879.5" ></text>
</g>
<g >
<title>_&lt;core..hash..sip..SipHasher13 as core..hash..Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="15.7" y="965" width="0.2" height="15.0" fill="rgb(221,175,33)" rx="2" ry="2" />
<text  x="18.74" y="975.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="668.5" y="773" width="0.3" height="15.0" fill="rgb(223,83,29)" rx="2" ry="2" />
<text  x="671.46" y="783.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="546.6" y="213" width="0.3" height="15.0" fill="rgb(244,42,30)" rx="2" ry="2" />
<text  x="549.56" y="223.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::util::CharExt::is_ident_start (5 samples, 0.02%)</title><rect x="238.1" y="309" width="0.2" height="15.0" fill="rgb(242,28,35)" rx="2" ry="2" />
<text  x="241.15" y="319.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (9 samples, 0.03%)</title><rect x="138.3" y="1045" width="0.4" height="15.0" fill="rgb(233,141,3)" rx="2" ry="2" />
<text  x="141.32" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="76.1" y="1077" width="0.4" height="15.0" fill="rgb(217,8,22)" rx="2" ry="2" />
<text  x="79.15" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="839.5" y="757" width="0.3" height="15.0" fill="rgb(227,166,41)" rx="2" ry="2" />
<text  x="842.54" y="767.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (10 samples, 0.03%)</title><rect x="109.5" y="1045" width="0.3" height="15.0" fill="rgb(232,148,18)" rx="2" ry="2" />
<text  x="112.45" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (129 samples, 0.41%)</title><rect x="491.5" y="85" width="4.8" height="15.0" fill="rgb(217,15,21)" rx="2" ry="2" />
<text  x="494.48" y="95.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="1086.2" y="869" width="0.2" height="15.0" fill="rgb(235,25,1)" rx="2" ry="2" />
<text  x="1089.19" y="879.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (6 samples, 0.02%)</title><rect x="179.2" y="1077" width="0.2" height="15.0" fill="rgb(243,223,32)" rx="2" ry="2" />
<text  x="182.17" y="1087.5" ></text>
</g>
<g >
<title>deno::flags::ca_file_arg (9 samples, 0.03%)</title><rect x="128.1" y="1141" width="0.3" height="15.0" fill="rgb(223,135,15)" rx="2" ry="2" />
<text  x="131.11" y="1151.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (36 samples, 0.11%)</title><rect x="107.0" y="1093" width="1.4" height="15.0" fill="rgb(252,229,9)" rx="2" ry="2" />
<text  x="110.05" y="1103.5" ></text>
</g>
<g >
<title>tokio::park::thread::CachedParkThread::with_current (9 samples, 0.03%)</title><rect x="199.1" y="1077" width="0.3" height="15.0" fill="rgb(206,201,16)" rx="2" ry="2" />
<text  x="202.10" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="93.6" y="1013" width="0.4" height="15.0" fill="rgb(228,62,13)" rx="2" ry="2" />
<text  x="96.57" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="181.6" y="1029" width="0.1" height="15.0" fill="rgb(217,121,17)" rx="2" ry="2" />
<text  x="184.61" y="1039.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (3 samples, 0.01%)</title><rect x="287.3" y="341" width="0.1" height="15.0" fill="rgb(247,26,29)" rx="2" ry="2" />
<text  x="290.29" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="127.2" y="1045" width="0.2" height="15.0" fill="rgb(223,170,38)" rx="2" ry="2" />
<text  x="130.25" y="1055.5" ></text>
</g>
<g >
<title>swc_common::rustc_data_structures::stable_hasher::StableHasher&lt;W&gt;::finish (8 samples, 0.03%)</title><rect x="230.2" y="613" width="0.3" height="15.0" fill="rgb(239,5,27)" rx="2" ry="2" />
<text  x="233.22" y="623.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="1000.0" y="693" width="0.4" height="15.0" fill="rgb(234,171,42)" rx="2" ry="2" />
<text  x="1003.00" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="1178.0" y="805" width="0.1" height="15.0" fill="rgb(219,157,29)" rx="2" ry="2" />
<text  x="1181.02" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="1123.8" y="453" width="0.2" height="15.0" fill="rgb(243,122,3)" rx="2" ry="2" />
<text  x="1126.77" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::IntoIter&lt;T&gt;::as_raw_mut_slice (3 samples, 0.01%)</title><rect x="12.4" y="1045" width="0.1" height="15.0" fill="rgb(226,87,42)" rx="2" ry="2" />
<text  x="15.37" y="1055.5" ></text>
</g>
<g >
<title>http::header::map::hash_elem_using (12 samples, 0.04%)</title><rect x="835.5" y="837" width="0.5" height="15.0" fill="rgb(244,67,26)" rx="2" ry="2" />
<text  x="838.52" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="96.0" y="1061" width="0.2" height="15.0" fill="rgb(218,187,2)" rx="2" ry="2" />
<text  x="99.05" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend::_{{closure}} (12 samples, 0.04%)</title><rect x="629.6" y="645" width="0.4" height="15.0" fill="rgb(231,105,33)" rx="2" ry="2" />
<text  x="632.56" y="655.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="286.5" y="245" width="0.6" height="15.0" fill="rgb(247,92,43)" rx="2" ry="2" />
<text  x="289.50" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (39 samples, 0.12%)</title><rect x="1104.9" y="517" width="1.5" height="15.0" fill="rgb(206,77,42)" rx="2" ry="2" />
<text  x="1107.93" y="527.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1032.3" y="853" width="0.1" height="15.0" fill="rgb(234,52,18)" rx="2" ry="2" />
<text  x="1035.28" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (310 samples, 0.99%)</title><rect x="647.2" y="709" width="11.7" height="15.0" fill="rgb(222,12,27)" rx="2" ry="2" />
<text  x="650.25" y="719.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="119.4" y="1109" width="0.2" height="15.0" fill="rgb(237,92,2)" rx="2" ry="2" />
<text  x="122.36" y="1119.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="18.8" y="1029" width="0.2" height="15.0" fill="rgb(252,174,14)" rx="2" ry="2" />
<text  x="21.82" y="1039.5" ></text>
</g>
<g >
<title>deno::module_graph::ModuleGraphLoader::visit_module (564 samples, 1.79%)</title><rect x="220.1" y="693" width="21.2" height="15.0" fill="rgb(220,36,30)" rx="2" ry="2" />
<text  x="223.09" y="703.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (854 samples, 2.72%)</title><rect x="1138.9" y="629" width="32.1" height="15.0" fill="rgb(213,100,32)" rx="2" ry="2" />
<text  x="1141.94" y="639.5" >se..</text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="225.4" y="357" width="0.1" height="15.0" fill="rgb(232,71,39)" rx="2" ry="2" />
<text  x="228.38" y="367.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="111.0" y="1125" width="0.3" height="15.0" fill="rgb(229,23,23)" rx="2" ry="2" />
<text  x="113.95" y="1135.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc..string..String,serde_json..value..Value&gt;::insert (33 samples, 0.10%)</title><rect x="549.6" y="309" width="1.2" height="15.0" fill="rgb(226,147,26)" rx="2" ry="2" />
<text  x="552.60" y="319.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (38 samples, 0.12%)</title><rect x="1069.6" y="869" width="1.4" height="15.0" fill="rgb(246,6,27)" rx="2" ry="2" />
<text  x="1072.56" y="879.5" ></text>
</g>
<g >
<title>swc_common::syntax_pos::analyze_source_file::analyze_source_file_dispatch (8 samples, 0.03%)</title><rect x="230.6" y="597" width="0.3" height="15.0" fill="rgb(223,140,35)" rx="2" ry="2" />
<text  x="233.56" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="259.6" y="597" width="0.1" height="15.0" fill="rgb(214,110,29)" rx="2" ry="2" />
<text  x="262.58" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="111.1" y="1077" width="0.2" height="15.0" fill="rgb(236,97,2)" rx="2" ry="2" />
<text  x="114.06" y="1087.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (6 samples, 0.02%)</title><rect x="155.0" y="1077" width="0.2" height="15.0" fill="rgb(206,179,10)" rx="2" ry="2" />
<text  x="157.95" y="1087.5" ></text>
</g>
<g >
<title>_&lt;rusty_v8..isolate..OwnedIsolate as rusty_v8..scope..getter..GetScopeData&gt;::get_scope_data_mut (4 samples, 0.01%)</title><rect x="1095.9" y="821" width="0.2" height="15.0" fill="rgb(243,205,17)" rx="2" ry="2" />
<text  x="1098.92" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="215.8" y="453" width="0.1" height="15.0" fill="rgb(214,61,32)" rx="2" ry="2" />
<text  x="218.81" y="463.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (575 samples, 1.83%)</title><rect x="299.3" y="341" width="21.6" height="15.0" fill="rgb(208,222,13)" rx="2" ry="2" />
<text  x="302.34" y="351.5" >s..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.03%)</title><rect x="199.1" y="1061" width="0.3" height="15.0" fill="rgb(213,20,49)" rx="2" ry="2" />
<text  x="202.14" y="1071.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileFetcher::fetch_local_file (71 samples, 0.23%)</title><rect x="213.3" y="533" width="2.6" height="15.0" fill="rgb(238,109,9)" rx="2" ry="2" />
<text  x="216.26" y="543.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="163.1" y="1093" width="0.2" height="15.0" fill="rgb(227,153,53)" rx="2" ry="2" />
<text  x="166.06" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (35 samples, 0.11%)</title><rect x="1136.4" y="517" width="1.3" height="15.0" fill="rgb(213,165,18)" rx="2" ry="2" />
<text  x="1139.35" y="527.5" ></text>
</g>
<g >
<title>rustls::client::ClientConfig::with_ciphersuites (17 samples, 0.05%)</title><rect x="828.6" y="853" width="0.6" height="15.0" fill="rgb(227,176,31)" rx="2" ry="2" />
<text  x="831.58" y="863.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (40 samples, 0.13%)</title><rect x="1002.7" y="853" width="1.5" height="15.0" fill="rgb(213,156,34)" rx="2" ry="2" />
<text  x="1005.66" y="863.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="17.7" y="1029" width="0.2" height="15.0" fill="rgb(226,100,45)" rx="2" ry="2" />
<text  x="20.66" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (26 samples, 0.08%)</title><rect x="667.4" y="789" width="0.9" height="15.0" fill="rgb(226,50,0)" rx="2" ry="2" />
<text  x="670.37" y="799.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 0.03%)</title><rect x="1086.8" y="725" width="0.4" height="15.0" fill="rgb(247,103,20)" rx="2" ry="2" />
<text  x="1089.83" y="735.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="77.7" y="1061" width="0.3" height="15.0" fill="rgb(234,113,30)" rx="2" ry="2" />
<text  x="80.73" y="1071.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (16 samples, 0.05%)</title><rect x="240.7" y="677" width="0.6" height="15.0" fill="rgb(208,120,27)" rx="2" ry="2" />
<text  x="243.66" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.05%)</title><rect x="196.4" y="1077" width="0.6" height="15.0" fill="rgb(253,163,45)" rx="2" ry="2" />
<text  x="199.44" y="1087.5" ></text>
</g>
<g >
<title>clap::app::usage::create_usage_with_title (21 samples, 0.07%)</title><rect x="25.2" y="1109" width="0.8" height="15.0" fill="rgb(237,196,35)" rx="2" ry="2" />
<text  x="28.24" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="613.3" y="485" width="0.2" height="15.0" fill="rgb(231,219,50)" rx="2" ry="2" />
<text  x="616.31" y="495.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (45 samples, 0.14%)</title><rect x="116.4" y="1109" width="1.6" height="15.0" fill="rgb(221,51,52)" rx="2" ry="2" />
<text  x="119.36" y="1119.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="149.8" y="997" width="0.2" height="15.0" fill="rgb(246,117,3)" rx="2" ry="2" />
<text  x="152.81" y="1007.5" ></text>
</g>
<g >
<title>rusty_v8::function::_&lt;impl rusty_v8..support..MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(rusty_v8..handle..Local&lt;rusty_v8..data..Name&gt;,*const rusty_v8..function..PropertyCallbackInfo)&gt;::mapping::_{{closure}} (18 samples, 0.06%)</title><rect x="1172.5" y="805" width="0.7" height="15.0" fill="rgb(233,115,25)" rx="2" ry="2" />
<text  x="1175.54" y="815.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (14 samples, 0.04%)</title><rect x="135.2" y="1093" width="0.5" height="15.0" fill="rgb(250,177,3)" rx="2" ry="2" />
<text  x="138.20" y="1103.5" ></text>
</g>
<g >
<title>deno::permissions::Permissions::allow_all (3 samples, 0.01%)</title><rect x="614.2" y="597" width="0.1" height="15.0" fill="rgb(239,93,7)" rx="2" ry="2" />
<text  x="617.21" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (101 samples, 0.32%)</title><rect x="198.3" y="1189" width="3.8" height="15.0" fill="rgb(223,16,34)" rx="2" ry="2" />
<text  x="201.31" y="1199.5" ></text>
</g>
<g >
<title>swc_common::syntax_pos::analyze_source_file::analyze_source_file_sse2 (7 samples, 0.02%)</title><rect x="230.6" y="581" width="0.3" height="15.0" fill="rgb(229,172,43)" rx="2" ry="2" />
<text  x="233.60" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="271.0" y="325" width="0.1" height="15.0" fill="rgb(232,212,35)" rx="2" ry="2" />
<text  x="274.00" y="335.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.03%)</title><rect x="1062.6" y="837" width="0.4" height="15.0" fill="rgb(211,149,35)" rx="2" ry="2" />
<text  x="1065.58" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="1114.2" y="437" width="0.2" height="15.0" fill="rgb(249,135,4)" rx="2" ry="2" />
<text  x="1117.16" y="447.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (431 samples, 1.37%)</title><rect x="333.2" y="293" width="16.1" height="15.0" fill="rgb(223,128,27)" rx="2" ry="2" />
<text  x="336.17" y="303.5" ></text>
</g>
<g >
<title>rusty_v8::script::_&lt;impl rusty_v8..data..Script&gt;::compile (3 samples, 0.01%)</title><rect x="1097.2" y="869" width="0.1" height="15.0" fill="rgb(232,211,6)" rx="2" ry="2" />
<text  x="1100.19" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="86.3" y="1045" width="0.1" height="15.0" fill="rgb(217,138,16)" rx="2" ry="2" />
<text  x="89.32" y="1055.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc..string..String,serde_json..value..Value&gt;::insert (25 samples, 0.08%)</title><rect x="1116.4" y="693" width="0.9" height="15.0" fill="rgb(253,199,38)" rx="2" ry="2" />
<text  x="1119.38" y="703.5" ></text>
</g>
<g >
<title>deno::ops::repl::init (47 samples, 0.15%)</title><rect x="1062.3" y="901" width="1.8" height="15.0" fill="rgb(248,47,33)" rx="2" ry="2" />
<text  x="1065.32" y="911.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (16 samples, 0.05%)</title><rect x="266.8" y="517" width="0.6" height="15.0" fill="rgb(211,188,8)" rx="2" ry="2" />
<text  x="269.75" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="270.9" y="357" width="0.2" height="15.0" fill="rgb(229,229,50)" rx="2" ry="2" />
<text  x="273.92" y="367.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="239.6" y="645" width="0.2" height="15.0" fill="rgb(244,47,19)" rx="2" ry="2" />
<text  x="242.65" y="655.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (44 samples, 0.14%)</title><rect x="160.7" y="1061" width="1.7" height="15.0" fill="rgb(211,44,11)" rx="2" ry="2" />
<text  x="163.73" y="1071.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::new_scope_data_with (7 samples, 0.02%)</title><rect x="1172.2" y="757" width="0.3" height="15.0" fill="rgb(214,211,1)" rx="2" ry="2" />
<text  x="1175.24" y="767.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (8 samples, 0.03%)</title><rect x="135.4" y="1061" width="0.3" height="15.0" fill="rgb(248,0,49)" rx="2" ry="2" />
<text  x="138.43" y="1071.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (12 samples, 0.04%)</title><rect x="99.4" y="1109" width="0.5" height="15.0" fill="rgb(221,182,32)" rx="2" ry="2" />
<text  x="102.43" y="1119.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="153.1" y="1125" width="0.4" height="15.0" fill="rgb(223,213,21)" rx="2" ry="2" />
<text  x="156.15" y="1135.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (86 samples, 0.27%)</title><rect x="290.2" y="341" width="3.2" height="15.0" fill="rgb(241,98,30)" rx="2" ry="2" />
<text  x="293.18" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="1055.5" y="821" width="0.4" height="15.0" fill="rgb(241,203,16)" rx="2" ry="2" />
<text  x="1058.52" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (40 samples, 0.13%)</title><rect x="200.6" y="1109" width="1.5" height="15.0" fill="rgb(237,92,34)" rx="2" ry="2" />
<text  x="203.60" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (6 samples, 0.02%)</title><rect x="197.3" y="1077" width="0.3" height="15.0" fill="rgb(222,100,42)" rx="2" ry="2" />
<text  x="200.34" y="1087.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (30 samples, 0.10%)</title><rect x="131.4" y="1029" width="1.1" height="15.0" fill="rgb(231,169,9)" rx="2" ry="2" />
<text  x="134.41" y="1039.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (40 samples, 0.13%)</title><rect x="92.5" y="1061" width="1.5" height="15.0" fill="rgb(212,161,28)" rx="2" ry="2" />
<text  x="95.48" y="1071.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1034.3" y="837" width="0.2" height="15.0" fill="rgb(235,41,21)" rx="2" ry="2" />
<text  x="1037.31" y="847.5" ></text>
</g>
<g >
<title>rustls::anchors::OwnedTrustAnchor::from_trust_anchor (1,815 samples, 5.77%)</title><rect x="930.8" y="853" width="68.1" height="15.0" fill="rgb(234,14,21)" rx="2" ry="2" />
<text  x="933.81" y="863.5" >rustls:..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="98.1" y="1061" width="0.2" height="15.0" fill="rgb(243,109,34)" rx="2" ry="2" />
<text  x="101.11" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..ops..arith..Add&lt;&amp;str&gt;&gt;::add (8 samples, 0.03%)</title><rect x="18.5" y="965" width="0.3" height="15.0" fill="rgb(217,146,8)" rx="2" ry="2" />
<text  x="21.48" y="975.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.03%)</title><rect x="18.4" y="1013" width="0.4" height="15.0" fill="rgb(252,24,10)" rx="2" ry="2" />
<text  x="21.37" y="1023.5" ></text>
</g>
<g >
<title>tokio::util::wake::clone_arc_raw (5 samples, 0.02%)</title><rect x="209.8" y="773" width="0.2" height="15.0" fill="rgb(229,96,36)" rx="2" ry="2" />
<text  x="212.80" y="783.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..StandardHeader as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="665.2" y="757" width="0.2" height="15.0" fill="rgb(241,57,43)" rx="2" ry="2" />
<text  x="668.19" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 0.08%)</title><rect x="929.9" y="821" width="0.9" height="15.0" fill="rgb(215,136,51)" rx="2" ry="2" />
<text  x="932.87" y="831.5" ></text>
</g>
<g >
<title>tokio::util::slab::shard::Shard&lt;T&gt;::new (27 samples, 0.09%)</title><rect x="203.6" y="1093" width="1.1" height="15.0" fill="rgb(244,146,39)" rx="2" ry="2" />
<text  x="206.64" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (8 samples, 0.03%)</title><rect x="193.4" y="1109" width="0.3" height="15.0" fill="rgb(219,154,31)" rx="2" ry="2" />
<text  x="196.36" y="1119.5" ></text>
</g>
<g >
<title>clap::app::App::arg (22 samples, 0.07%)</title><rect x="99.1" y="1141" width="0.8" height="15.0" fill="rgb(221,73,21)" rx="2" ry="2" />
<text  x="102.05" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..rc..Rc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (23 samples, 0.07%)</title><rect x="224.7" y="629" width="0.9" height="15.0" fill="rgb(244,74,51)" rx="2" ry="2" />
<text  x="227.71" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="270.2" y="373" width="0.2" height="15.0" fill="rgb(216,87,22)" rx="2" ry="2" />
<text  x="273.24" y="383.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::get_matches_with (247 samples, 0.79%)</title><rect x="15.1" y="1109" width="9.3" height="15.0" fill="rgb(215,217,28)" rx="2" ry="2" />
<text  x="18.11" y="1119.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="160.5" y="1029" width="0.2" height="15.0" fill="rgb(221,176,3)" rx="2" ry="2" />
<text  x="163.47" y="1039.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="109.9" y="1093" width="0.2" height="15.0" fill="rgb(222,31,24)" rx="2" ry="2" />
<text  x="112.90" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="1082.2" y="821" width="0.2" height="15.0" fill="rgb(233,38,31)" rx="2" ry="2" />
<text  x="1085.22" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="137.7" y="1093" width="0.2" height="15.0" fill="rgb(235,110,42)" rx="2" ry="2" />
<text  x="140.72" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (30 samples, 0.10%)</title><rect x="1136.5" y="501" width="1.2" height="15.0" fill="rgb(231,1,25)" rx="2" ry="2" />
<text  x="1139.54" y="511.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (81 samples, 0.26%)</title><rect x="1045.0" y="837" width="3.1" height="15.0" fill="rgb(238,169,17)" rx="2" ry="2" />
<text  x="1048.05" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::shrink_to_fit (3 samples, 0.01%)</title><rect x="1115.4" y="677" width="0.2" height="15.0" fill="rgb(229,26,23)" rx="2" ry="2" />
<text  x="1118.44" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (12 samples, 0.04%)</title><rect x="596.6" y="581" width="0.5" height="15.0" fill="rgb(234,133,34)" rx="2" ry="2" />
<text  x="599.64" y="591.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (2,369 samples, 7.54%)</title><rect x="669.1" y="693" width="89.0" height="15.0" fill="rgb(223,219,9)" rx="2" ry="2" />
<text  x="672.13" y="703.5" >_&lt;core..it..</text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (6 samples, 0.02%)</title><rect x="208.1" y="837" width="0.3" height="15.0" fill="rgb(215,217,14)" rx="2" ry="2" />
<text  x="211.15" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="216.9" y="485" width="0.1" height="15.0" fill="rgb(209,212,24)" rx="2" ry="2" />
<text  x="219.86" y="495.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="162.1" y="997" width="0.3" height="15.0" fill="rgb(213,16,47)" rx="2" ry="2" />
<text  x="165.12" y="1007.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (15 samples, 0.05%)</title><rect x="113.5" y="1109" width="0.6" height="15.0" fill="rgb(248,129,40)" rx="2" ry="2" />
<text  x="116.50" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="218.7" y="533" width="0.1" height="15.0" fill="rgb(240,44,31)" rx="2" ry="2" />
<text  x="221.70" y="543.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (561 samples, 1.78%)</title><rect x="475.3" y="245" width="21.0" height="15.0" fill="rgb(210,4,52)" rx="2" ry="2" />
<text  x="478.26" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="270.9" y="373" width="0.2" height="15.0" fill="rgb(221,160,46)" rx="2" ry="2" />
<text  x="273.88" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1122.0" y="405" width="0.1" height="15.0" fill="rgb(205,110,36)" rx="2" ry="2" />
<text  x="1124.97" y="415.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (36 samples, 0.11%)</title><rect x="1077.8" y="837" width="1.4" height="15.0" fill="rgb(220,110,36)" rx="2" ry="2" />
<text  x="1080.82" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (216 samples, 0.69%)</title><rect x="341.2" y="213" width="8.1" height="15.0" fill="rgb(247,207,5)" rx="2" ry="2" />
<text  x="344.24" y="223.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as core..fmt..Display&gt;::fmt (13 samples, 0.04%)</title><rect x="612.6" y="549" width="0.5" height="15.0" fill="rgb(249,116,53)" rx="2" ry="2" />
<text  x="615.60" y="559.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove (4 samples, 0.01%)</title><rect x="636.9" y="869" width="0.1" height="15.0" fill="rgb(233,123,4)" rx="2" ry="2" />
<text  x="639.89" y="879.5" ></text>
</g>
<g >
<title>swc_ecma_visit::Visit::visit_expr_stmt (13 samples, 0.04%)</title><rect x="240.2" y="501" width="0.5" height="15.0" fill="rgb(213,109,0)" rx="2" ry="2" />
<text  x="243.17" y="511.5" ></text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="1185.9" y="901" width="0.4" height="15.0" fill="rgb(223,116,2)" rx="2" ry="2" />
<text  x="1188.95" y="911.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (10,369 samples, 32.99%)</title><rect x="211.0" y="837" width="389.2" height="15.0" fill="rgb(232,19,44)" rx="2" ry="2" />
<text  x="213.97" y="847.5" >_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="12.7" y="1157" width="0.2" height="15.0" fill="rgb(222,173,37)" rx="2" ry="2" />
<text  x="15.70" y="1167.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="215.5" y="405" width="0.2" height="15.0" fill="rgb(226,197,27)" rx="2" ry="2" />
<text  x="218.51" y="415.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (29 samples, 0.09%)</title><rect x="1063.0" y="869" width="1.1" height="15.0" fill="rgb(231,56,41)" rx="2" ry="2" />
<text  x="1065.99" y="879.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="128.2" y="1109" width="0.2" height="15.0" fill="rgb(246,43,8)" rx="2" ry="2" />
<text  x="131.18" y="1119.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (473 samples, 1.50%)</title><rect x="478.6" y="213" width="17.7" height="15.0" fill="rgb(249,98,11)" rx="2" ry="2" />
<text  x="481.57" y="223.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="1064.9" y="805" width="0.6" height="15.0" fill="rgb(212,68,49)" rx="2" ry="2" />
<text  x="1067.95" y="815.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_assignment_expr_base (22 samples, 0.07%)</title><rect x="233.5" y="421" width="0.8" height="15.0" fill="rgb(249,74,31)" rx="2" ry="2" />
<text  x="236.45" y="431.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (26 samples, 0.08%)</title><rect x="380.1" y="277" width="1.0" height="15.0" fill="rgb(230,86,16)" rx="2" ry="2" />
<text  x="383.09" y="287.5" ></text>
</g>
<g >
<title>clap::app::App::arg (10 samples, 0.03%)</title><rect x="187.5" y="1141" width="0.4" height="15.0" fill="rgb(210,74,13)" rx="2" ry="2" />
<text  x="190.54" y="1151.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.03%)</title><rect x="267.0" y="453" width="0.4" height="15.0" fill="rgb(243,21,22)" rx="2" ry="2" />
<text  x="269.98" y="463.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="623.5" y="661" width="0.3" height="15.0" fill="rgb(211,87,8)" rx="2" ry="2" />
<text  x="626.48" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="179.0" y="1061" width="0.2" height="15.0" fill="rgb(231,136,22)" rx="2" ry="2" />
<text  x="182.02" y="1071.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (50 samples, 0.16%)</title><rect x="1074.5" y="869" width="1.9" height="15.0" fill="rgb(208,89,0)" rx="2" ry="2" />
<text  x="1077.52" y="879.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="546.6" y="181" width="0.3" height="15.0" fill="rgb(208,75,42)" rx="2" ry="2" />
<text  x="549.63" y="191.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner::_{{closure}} (9 samples, 0.03%)</title><rect x="236.2" y="373" width="0.3" height="15.0" fill="rgb(250,142,1)" rx="2" ry="2" />
<text  x="239.19" y="383.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_expr (158 samples, 0.50%)</title><rect x="232.9" y="581" width="5.9" height="15.0" fill="rgb(247,159,6)" rx="2" ry="2" />
<text  x="235.89" y="591.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (88 samples, 0.28%)</title><rect x="29.8" y="1029" width="3.3" height="15.0" fill="rgb(239,100,44)" rx="2" ry="2" />
<text  x="32.82" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (6 samples, 0.02%)</title><rect x="103.8" y="1061" width="0.2" height="15.0" fill="rgb(211,25,2)" rx="2" ry="2" />
<text  x="106.82" y="1071.5" ></text>
</g>
<g >
<title>_&lt;smallvec..SmallVec&lt;A&gt; as core..iter..traits..collect..Extend&lt;&lt;A as smallvec..Array&gt;..Item&gt;&gt;::extend (12 samples, 0.04%)</title><rect x="1099.6" y="661" width="0.4" height="15.0" fill="rgb(248,124,47)" rx="2" ry="2" />
<text  x="1102.56" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="142.1" y="1061" width="0.2" height="15.0" fill="rgb(221,42,7)" rx="2" ry="2" />
<text  x="145.11" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="264.0" y="581" width="0.2" height="15.0" fill="rgb(219,1,25)" rx="2" ry="2" />
<text  x="266.98" y="591.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="89.1" y="1109" width="0.2" height="15.0" fill="rgb(252,156,45)" rx="2" ry="2" />
<text  x="92.06" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.02%)</title><rect x="633.7" y="773" width="0.2" height="15.0" fill="rgb(216,141,5)" rx="2" ry="2" />
<text  x="636.66" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="110.7" y="1045" width="0.2" height="15.0" fill="rgb(225,127,47)" rx="2" ry="2" />
<text  x="113.65" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="834.8" y="757" width="0.2" height="15.0" fill="rgb(240,215,41)" rx="2" ry="2" />
<text  x="837.81" y="767.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (227 samples, 0.72%)</title><rect x="276.0" y="357" width="8.5" height="15.0" fill="rgb(250,126,50)" rx="2" ry="2" />
<text  x="278.95" y="367.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="219.2" y="533" width="0.2" height="15.0" fill="rgb(213,29,18)" rx="2" ry="2" />
<text  x="222.22" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="209.2" y="773" width="0.1" height="15.0" fill="rgb(243,128,1)" rx="2" ry="2" />
<text  x="212.16" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (15 samples, 0.05%)</title><rect x="570.6" y="293" width="0.5" height="15.0" fill="rgb(221,52,22)" rx="2" ry="2" />
<text  x="573.59" y="303.5" ></text>
</g>
<g >
<title>std::thread::local::fast::destroy_value (7 samples, 0.02%)</title><rect x="1189.7" y="1285" width="0.3" height="15.0" fill="rgb(225,131,15)" rx="2" ry="2" />
<text  x="1192.74" y="1295.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="618.5" y="805" width="0.2" height="15.0" fill="rgb(214,30,18)" rx="2" ry="2" />
<text  x="621.45" y="815.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.03%)</title><rect x="1100.5" y="725" width="0.4" height="15.0" fill="rgb(253,21,11)" rx="2" ry="2" />
<text  x="1103.50" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="1072.8" y="757" width="0.4" height="15.0" fill="rgb(218,96,11)" rx="2" ry="2" />
<text  x="1075.75" y="767.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..vec..SpecFromElem&gt;::from_elem (5 samples, 0.02%)</title><rect x="665.8" y="821" width="0.1" height="15.0" fill="rgb(216,11,40)" rx="2" ry="2" />
<text  x="668.76" y="831.5" ></text>
</g>
<g >
<title>clap::app::usage::create_usage_no_title (15 samples, 0.05%)</title><rect x="25.5" y="1093" width="0.5" height="15.0" fill="rgb(227,190,15)" rx="2" ry="2" />
<text  x="28.47" y="1103.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="572.2" y="421" width="0.1" height="15.0" fill="rgb(229,134,8)" rx="2" ry="2" />
<text  x="575.20" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="1170.9" y="501" width="0.1" height="15.0" fill="rgb(236,181,9)" rx="2" ry="2" />
<text  x="1173.89" y="511.5" ></text>
</g>
<g >
<title>_&lt;deno..state..State as deno_core..modules..ModuleLoader&gt;::resolve (275 samples, 0.87%)</title><rect x="589.9" y="805" width="10.3" height="15.0" fill="rgb(232,39,35)" rx="2" ry="2" />
<text  x="592.92" y="815.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (28 samples, 0.09%)</title><rect x="141.4" y="1125" width="1.1" height="15.0" fill="rgb(246,188,2)" rx="2" ry="2" />
<text  x="144.40" y="1135.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend::_{{closure}} (53 samples, 0.17%)</title><rect x="1183.4" y="821" width="2.0" height="15.0" fill="rgb(207,59,6)" rx="2" ry="2" />
<text  x="1186.43" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (100 samples, 0.32%)</title><rect x="198.4" y="1173" width="3.7" height="15.0" fill="rgb(250,189,21)" rx="2" ry="2" />
<text  x="201.35" y="1183.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="64.8" y="1061" width="0.2" height="15.0" fill="rgb(230,144,44)" rx="2" ry="2" />
<text  x="67.85" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="140.3" y="1061" width="0.2" height="15.0" fill="rgb(235,101,34)" rx="2" ry="2" />
<text  x="143.35" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="587.9" y="517" width="0.1" height="15.0" fill="rgb(229,203,23)" rx="2" ry="2" />
<text  x="590.93" y="527.5" ></text>
</g>
<g >
<title>clap::app::usage::create_usage_no_title (142 samples, 0.45%)</title><rect x="18.3" y="1061" width="5.3" height="15.0" fill="rgb(218,79,40)" rx="2" ry="2" />
<text  x="21.26" y="1071.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (14 samples, 0.04%)</title><rect x="587.5" y="693" width="0.5" height="15.0" fill="rgb(218,32,1)" rx="2" ry="2" />
<text  x="590.52" y="703.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (30 samples, 0.10%)</title><rect x="1059.5" y="853" width="1.2" height="15.0" fill="rgb(251,57,0)" rx="2" ry="2" />
<text  x="1062.54" y="863.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.02%)</title><rect x="582.2" y="469" width="0.3" height="15.0" fill="rgb(231,146,47)" rx="2" ry="2" />
<text  x="585.22" y="479.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="613.3" y="501" width="0.2" height="15.0" fill="rgb(205,41,21)" rx="2" ry="2" />
<text  x="616.27" y="511.5" ></text>
</g>
<g >
<title>deno::flags::v8_flags_arg_parse (6 samples, 0.02%)</title><rect x="198.1" y="1141" width="0.2" height="15.0" fill="rgb(237,220,37)" rx="2" ry="2" />
<text  x="201.05" y="1151.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="181.6" y="1045" width="0.1" height="15.0" fill="rgb(252,32,7)" rx="2" ry="2" />
<text  x="184.57" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="1087.7" y="805" width="0.2" height="15.0" fill="rgb(236,178,37)" rx="2" ry="2" />
<text  x="1090.70" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="613.2" y="533" width="0.3" height="15.0" fill="rgb(218,104,36)" rx="2" ry="2" />
<text  x="616.20" y="543.5" ></text>
</g>
<g >
<title>_&lt;swc_common..syntax_pos..FileName as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="230.0" y="613" width="0.2" height="15.0" fill="rgb(254,200,27)" rx="2" ry="2" />
<text  x="233.04" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (24 samples, 0.08%)</title><rect x="667.4" y="773" width="0.9" height="15.0" fill="rgb(224,181,5)" rx="2" ry="2" />
<text  x="670.45" y="783.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="25.8" y="1045" width="0.2" height="15.0" fill="rgb(253,221,50)" rx="2" ry="2" />
<text  x="28.84" y="1055.5" ></text>
</g>
<g >
<title>swc_common::comments::SingleThreadedComments::with_leading (15 samples, 0.05%)</title><rect x="239.2" y="661" width="0.6" height="15.0" fill="rgb(210,42,15)" rx="2" ry="2" />
<text  x="242.23" y="671.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::drop_in_place (44 samples, 0.14%)</title><rect x="656.4" y="261" width="1.7" height="15.0" fill="rgb(228,167,5)" rx="2" ry="2" />
<text  x="659.41" y="271.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (17 samples, 0.05%)</title><rect x="266.7" y="533" width="0.7" height="15.0" fill="rgb(244,221,34)" rx="2" ry="2" />
<text  x="269.72" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="232.3" y="581" width="0.1" height="15.0" fill="rgb(206,27,7)" rx="2" ry="2" />
<text  x="235.29" y="591.5" ></text>
</g>
<g >
<title>std::collections::hash::map::RandomState::new (3 samples, 0.01%)</title><rect x="663.2" y="821" width="0.1" height="15.0" fill="rgb(243,68,19)" rx="2" ry="2" />
<text  x="666.17" y="831.5" ></text>
</g>
<g >
<title>core::mem::replace (4 samples, 0.01%)</title><rect x="81.1" y="1093" width="0.2" height="15.0" fill="rgb(232,88,50)" rx="2" ry="2" />
<text  x="84.14" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="1079.0" y="709" width="0.2" height="15.0" fill="rgb(223,149,11)" rx="2" ry="2" />
<text  x="1082.02" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="1166.2" y="373" width="0.1" height="15.0" fill="rgb(250,118,16)" rx="2" ry="2" />
<text  x="1169.16" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (5 samples, 0.02%)</title><rect x="81.9" y="1077" width="0.2" height="15.0" fill="rgb(225,66,6)" rx="2" ry="2" />
<text  x="84.93" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="156.0" y="1045" width="0.1" height="15.0" fill="rgb(254,181,35)" rx="2" ry="2" />
<text  x="158.97" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (4 samples, 0.01%)</title><rect x="200.3" y="1109" width="0.2" height="15.0" fill="rgb(209,103,34)" rx="2" ry="2" />
<text  x="203.34" y="1119.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_word_as_str::_{{closure}}::_{{closure}} (7 samples, 0.02%)</title><rect x="237.4" y="213" width="0.2" height="15.0" fill="rgb(244,91,48)" rx="2" ry="2" />
<text  x="240.36" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (8 samples, 0.03%)</title><rect x="219.5" y="629" width="0.3" height="15.0" fill="rgb(230,70,12)" rx="2" ry="2" />
<text  x="222.52" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (96 samples, 0.31%)</title><rect x="169.9" y="1061" width="3.6" height="15.0" fill="rgb(254,220,32)" rx="2" ry="2" />
<text  x="172.93" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (8 samples, 0.03%)</title><rect x="292.9" y="261" width="0.3" height="15.0" fill="rgb(245,131,23)" rx="2" ry="2" />
<text  x="295.88" y="271.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="139.0" y="1045" width="0.1" height="15.0" fill="rgb(234,178,15)" rx="2" ry="2" />
<text  x="142.00" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,107 samples, 3.52%)</title><rect x="956.8" y="805" width="41.5" height="15.0" fill="rgb(245,224,42)" rx="2" ry="2" />
<text  x="959.79" y="815.5" >all..</text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="263.5" y="533" width="0.1" height="15.0" fill="rgb(224,189,13)" rx="2" ry="2" />
<text  x="266.52" y="543.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_reqs (6 samples, 0.02%)</title><rect x="91.3" y="1109" width="0.2" height="15.0" fill="rgb(233,106,28)" rx="2" ry="2" />
<text  x="94.28" y="1119.5" ></text>
</g>
<g >
<title>_&lt;extern &quot;C&quot; fn(A0,A1) .&gt; R as rusty_v8..support..CFnFrom&lt;F&gt;&gt;::mapping::c_fn (19 samples, 0.06%)</title><rect x="1172.5" y="821" width="0.7" height="15.0" fill="rgb(206,143,25)" rx="2" ry="2" />
<text  x="1175.51" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::free_buckets (4 samples, 0.01%)</title><rect x="658.6" y="485" width="0.1" height="15.0" fill="rgb(239,140,13)" rx="2" ry="2" />
<text  x="661.59" y="495.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (15 samples, 0.05%)</title><rect x="116.9" y="1061" width="0.5" height="15.0" fill="rgb(214,170,23)" rx="2" ry="2" />
<text  x="119.88" y="1071.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as http..header..map..into_header_name..Sealed&gt;::insert (26 samples, 0.08%)</title><rect x="835.0" y="869" width="1.0" height="15.0" fill="rgb(228,19,52)" rx="2" ry="2" />
<text  x="838.00" y="879.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (19 samples, 0.06%)</title><rect x="1075.1" y="789" width="0.7" height="15.0" fill="rgb(245,180,4)" rx="2" ry="2" />
<text  x="1078.08" y="799.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner (24 samples, 0.08%)</title><rect x="231.3" y="629" width="0.9" height="15.0" fill="rgb(205,61,44)" rx="2" ry="2" />
<text  x="234.28" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="287.0" y="149" width="0.1" height="15.0" fill="rgb(251,216,49)" rx="2" ry="2" />
<text  x="289.95" y="159.5" ></text>
</g>
<g >
<title>_&lt;deno_core..module_specifier..ModuleSpecifier as core..fmt..Display&gt;::fmt (12 samples, 0.04%)</title><rect x="260.2" y="613" width="0.4" height="15.0" fill="rgb(248,143,33)" rx="2" ry="2" />
<text  x="263.18" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="25.7" y="1029" width="0.1" height="15.0" fill="rgb(217,68,8)" rx="2" ry="2" />
<text  x="28.66" y="1039.5" ></text>
</g>
<g >
<title>_&lt;core..pin..Pin&lt;P&gt; as core..future..future..Future&gt;::poll (26,168 samples, 83.26%)</title><rect x="207.2" y="981" width="982.4" height="15.0" fill="rgb(213,24,10)" rx="2" ry="2" />
<text  x="210.21" y="991.5" >_&lt;core..pin..Pin&lt;P&gt; as core..future..future..Future&gt;::poll</text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::set_slot (11 samples, 0.03%)</title><rect x="1089.5" y="837" width="0.4" height="15.0" fill="rgb(235,63,53)" rx="2" ry="2" />
<text  x="1092.54" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="88.5" y="1077" width="0.2" height="15.0" fill="rgb(218,159,52)" rx="2" ry="2" />
<text  x="91.50" y="1087.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next (21 samples, 0.07%)</title><rect x="231.4" y="581" width="0.8" height="15.0" fill="rgb(244,222,3)" rx="2" ry="2" />
<text  x="234.39" y="591.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (302 samples, 0.96%)</title><rect x="338.0" y="245" width="11.3" height="15.0" fill="rgb(246,93,41)" rx="2" ry="2" />
<text  x="341.01" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="1177.2" y="789" width="0.3" height="15.0" fill="rgb(225,77,36)" rx="2" ry="2" />
<text  x="1180.20" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (50 samples, 0.16%)</title><rect x="639.9" y="661" width="1.9" height="15.0" fill="rgb(253,12,42)" rx="2" ry="2" />
<text  x="642.93" y="671.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (8 samples, 0.03%)</title><rect x="192.7" y="1013" width="0.3" height="15.0" fill="rgb(207,13,0)" rx="2" ry="2" />
<text  x="195.68" y="1023.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="114.9" y="1077" width="0.3" height="15.0" fill="rgb(241,52,8)" rx="2" ry="2" />
<text  x="117.93" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="836.9" y="805" width="0.1" height="15.0" fill="rgb(211,110,41)" rx="2" ry="2" />
<text  x="839.87" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.07%)</title><rect x="192.3" y="1157" width="0.8" height="15.0" fill="rgb(251,212,47)" rx="2" ry="2" />
<text  x="195.34" y="1167.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap::new (3 samples, 0.01%)</title><rect x="663.8" y="885" width="0.1" height="15.0" fill="rgb(250,214,52)" rx="2" ry="2" />
<text  x="666.77" y="895.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="208.2" y="805" width="0.2" height="15.0" fill="rgb(205,142,53)" rx="2" ry="2" />
<text  x="211.22" y="815.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (91 samples, 0.29%)</title><rect x="1126.6" y="565" width="3.4" height="15.0" fill="rgb(246,27,28)" rx="2" ry="2" />
<text  x="1129.63" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="836.6" y="837" width="0.2" height="15.0" fill="rgb(248,168,5)" rx="2" ry="2" />
<text  x="839.65" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (10 samples, 0.03%)</title><rect x="219.0" y="613" width="0.4" height="15.0" fill="rgb(210,37,17)" rx="2" ry="2" />
<text  x="222.04" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="16.1" y="1013" width="0.1" height="15.0" fill="rgb(218,56,23)" rx="2" ry="2" />
<text  x="19.08" y="1023.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (33 samples, 0.10%)</title><rect x="102.1" y="1109" width="1.2" height="15.0" fill="rgb(234,139,15)" rx="2" ry="2" />
<text  x="105.05" y="1119.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_try_fold::_{{closure}} (5 samples, 0.02%)</title><rect x="1099.8" y="565" width="0.2" height="15.0" fill="rgb(210,184,40)" rx="2" ry="2" />
<text  x="1102.82" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (74 samples, 0.24%)</title><rect x="639.0" y="837" width="2.8" height="15.0" fill="rgb(241,32,33)" rx="2" ry="2" />
<text  x="642.03" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="180.2" y="1045" width="0.2" height="15.0" fill="rgb(227,96,40)" rx="2" ry="2" />
<text  x="183.22" y="1055.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (9 samples, 0.03%)</title><rect x="19.2" y="949" width="0.3" height="15.0" fill="rgb(214,126,21)" rx="2" ry="2" />
<text  x="22.20" y="959.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="634.8" y="869" width="0.2" height="15.0" fill="rgb(236,46,15)" rx="2" ry="2" />
<text  x="637.78" y="879.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (432 samples, 1.37%)</title><rect x="363.9" y="229" width="16.2" height="15.0" fill="rgb(253,48,43)" rx="2" ry="2" />
<text  x="366.88" y="239.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="98.0" y="1109" width="0.3" height="15.0" fill="rgb(206,204,48)" rx="2" ry="2" />
<text  x="101.00" y="1119.5" ></text>
</g>
<g >
<title>_&lt;mio..sys..unix..awakener..pipe..Awakener as mio..event_imp..Evented&gt;::register (4 samples, 0.01%)</title><rect x="203.2" y="1093" width="0.2" height="15.0" fill="rgb(223,227,36)" rx="2" ry="2" />
<text  x="206.23" y="1103.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="263.5" y="549" width="0.1" height="15.0" fill="rgb(225,18,52)" rx="2" ry="2" />
<text  x="266.49" y="559.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::values_of (5 samples, 0.02%)</title><rect x="197.6" y="1125" width="0.2" height="15.0" fill="rgb(254,13,4)" rx="2" ry="2" />
<text  x="200.60" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (35 samples, 0.11%)</title><rect x="656.7" y="213" width="1.4" height="15.0" fill="rgb(211,159,4)" rx="2" ry="2" />
<text  x="659.75" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="758.1" y="773" width="0.1" height="15.0" fill="rgb(233,118,33)" rx="2" ry="2" />
<text  x="761.07" y="783.5" ></text>
</g>
<g >
<title>encoding_rs::Encoding::for_label (8 samples, 0.03%)</title><rect x="615.1" y="533" width="0.3" height="15.0" fill="rgb(206,41,3)" rx="2" ry="2" />
<text  x="618.11" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (554 samples, 1.76%)</title><rect x="907.6" y="533" width="20.8" height="15.0" fill="rgb(211,13,53)" rx="2" ry="2" />
<text  x="910.64" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1088.5" y="773" width="0.1" height="15.0" fill="rgb(238,86,45)" rx="2" ry="2" />
<text  x="1091.52" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="65.2" y="1125" width="0.3" height="15.0" fill="rgb(219,136,34)" rx="2" ry="2" />
<text  x="68.15" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (75 samples, 0.24%)</title><rect x="281.6" y="197" width="2.8" height="15.0" fill="rgb(219,77,0)" rx="2" ry="2" />
<text  x="284.58" y="207.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (11,303 samples, 35.96%)</title><rect x="210.3" y="901" width="424.3" height="15.0" fill="rgb(238,148,32)" rx="2" ry="2" />
<text  x="213.25" y="911.5" >_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..fut..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="187.3" y="1029" width="0.1" height="15.0" fill="rgb(233,205,46)" rx="2" ry="2" />
<text  x="190.31" y="1039.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.04%)</title><rect x="132.1" y="997" width="0.4" height="15.0" fill="rgb(242,94,40)" rx="2" ry="2" />
<text  x="135.09" y="1007.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileFetcher::fetch_cached_source_file (46 samples, 0.15%)</title><rect x="260.0" y="677" width="1.8" height="15.0" fill="rgb(254,52,39)" rx="2" ry="2" />
<text  x="263.03" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (14 samples, 0.04%)</title><rect x="73.6" y="1157" width="0.6" height="15.0" fill="rgb(212,23,24)" rx="2" ry="2" />
<text  x="76.63" y="1167.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (6 samples, 0.02%)</title><rect x="619.8" y="805" width="0.3" height="15.0" fill="rgb(246,164,5)" rx="2" ry="2" />
<text  x="622.84" y="815.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (8 samples, 0.03%)</title><rect x="1005.7" y="853" width="0.3" height="15.0" fill="rgb(223,46,0)" rx="2" ry="2" />
<text  x="1008.74" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="98.4" y="1077" width="0.1" height="15.0" fill="rgb(239,20,23)" rx="2" ry="2" />
<text  x="101.41" y="1087.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (26,171 samples, 83.26%)</title><rect x="207.1" y="1029" width="982.5" height="15.0" fill="rgb(211,172,48)" rx="2" ry="2" />
<text  x="210.10" y="1039.5" >std::thread::local::LocalKey&lt;T&gt;::try_with</text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (16 samples, 0.05%)</title><rect x="548.4" y="245" width="0.6" height="15.0" fill="rgb(248,56,21)" rx="2" ry="2" />
<text  x="551.40" y="255.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (9 samples, 0.03%)</title><rect x="160.4" y="1061" width="0.3" height="15.0" fill="rgb(234,182,45)" rx="2" ry="2" />
<text  x="163.40" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="260.5" y="485" width="0.1" height="15.0" fill="rgb(237,133,30)" rx="2" ry="2" />
<text  x="263.48" y="495.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="622.9" y="773" width="0.2" height="15.0" fill="rgb(253,93,25)" rx="2" ry="2" />
<text  x="625.92" y="783.5" ></text>
</g>
<g >
<title>_&lt;alloc..raw_vec..RawVec&lt;T,A&gt; as core..ops..drop..Drop&gt;::drop (7 samples, 0.02%)</title><rect x="644.7" y="501" width="0.3" height="15.0" fill="rgb(205,20,41)" rx="2" ry="2" />
<text  x="647.73" y="511.5" ></text>
</g>
<g >
<title>clap::app::App::arg (67 samples, 0.21%)</title><rect x="188.5" y="1141" width="2.5" height="15.0" fill="rgb(250,162,15)" rx="2" ry="2" />
<text  x="191.48" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="210.8" y="677" width="0.2" height="15.0" fill="rgb(212,225,31)" rx="2" ry="2" />
<text  x="213.78" y="687.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend::_{{closure}} (25 samples, 0.08%)</title><rect x="1188.3" y="805" width="1.0" height="15.0" fill="rgb(212,19,32)" rx="2" ry="2" />
<text  x="1191.35" y="815.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (14 samples, 0.04%)</title><rect x="262.0" y="629" width="0.5" height="15.0" fill="rgb(209,139,47)" rx="2" ry="2" />
<text  x="265.02" y="639.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for std..collections..hash..map..HashMap&lt;K,V,H&gt;&gt;::serialize (856 samples, 2.72%)</title><rect x="1138.9" y="661" width="32.1" height="15.0" fill="rgb(245,202,19)" rx="2" ry="2" />
<text  x="1141.87" y="671.5" >se..</text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (10 samples, 0.03%)</title><rect x="1086.9" y="709" width="0.3" height="15.0" fill="rgb(238,52,10)" rx="2" ry="2" />
<text  x="1089.87" y="719.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (11,370 samples, 36.17%)</title><rect x="210.2" y="933" width="426.8" height="15.0" fill="rgb(223,128,50)" rx="2" ry="2" />
<text  x="213.18" y="943.5" >_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..futu..</text>
</g>
<g >
<title>clap::app::App::arg (48 samples, 0.15%)</title><rect x="137.3" y="1141" width="1.8" height="15.0" fill="rgb(249,133,32)" rx="2" ry="2" />
<text  x="140.34" y="1151.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (36 samples, 0.11%)</title><rect x="176.0" y="1045" width="1.4" height="15.0" fill="rgb(208,47,24)" rx="2" ry="2" />
<text  x="179.01" y="1055.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (3 samples, 0.01%)</title><rect x="585.9" y="693" width="0.1" height="15.0" fill="rgb(234,63,7)" rx="2" ry="2" />
<text  x="588.90" y="703.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (14 samples, 0.04%)</title><rect x="140.1" y="1109" width="0.5" height="15.0" fill="rgb(228,50,23)" rx="2" ry="2" />
<text  x="143.12" y="1119.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.02%)</title><rect x="1063.8" y="853" width="0.3" height="15.0" fill="rgb(222,197,46)" rx="2" ry="2" />
<text  x="1066.82" y="863.5" ></text>
</g>
<g >
<title>deno_core::modules::ModuleNameMap::insert (16 samples, 0.05%)</title><rect x="620.7" y="789" width="0.6" height="15.0" fill="rgb(226,143,10)" rx="2" ry="2" />
<text  x="623.67" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="1024.0" y="805" width="0.1" height="15.0" fill="rgb(232,54,24)" rx="2" ry="2" />
<text  x="1026.99" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (42 samples, 0.13%)</title><rect x="41.3" y="1061" width="1.5" height="15.0" fill="rgb(243,44,51)" rx="2" ry="2" />
<text  x="44.27" y="1071.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="138.4" y="1029" width="0.3" height="15.0" fill="rgb(211,41,40)" rx="2" ry="2" />
<text  x="141.43" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (79 samples, 0.25%)</title><rect x="1020.8" y="741" width="3.0" height="15.0" fill="rgb(220,172,9)" rx="2" ry="2" />
<text  x="1023.80" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="104.9" y="997" width="0.1" height="15.0" fill="rgb(239,26,41)" rx="2" ry="2" />
<text  x="107.87" y="1007.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (8 samples, 0.03%)</title><rect x="600.7" y="645" width="0.3" height="15.0" fill="rgb(233,226,19)" rx="2" ry="2" />
<text  x="603.69" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="265.8" y="485" width="0.1" height="15.0" fill="rgb(244,45,0)" rx="2" ry="2" />
<text  x="268.81" y="495.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (30 samples, 0.10%)</title><rect x="1176.4" y="901" width="1.1" height="15.0" fill="rgb(229,40,51)" rx="2" ry="2" />
<text  x="1179.41" y="911.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_file_host (12 samples, 0.04%)</title><rect x="623.3" y="725" width="0.5" height="15.0" fill="rgb(243,127,24)" rx="2" ry="2" />
<text  x="626.33" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="104.1" y="1109" width="0.2" height="15.0" fill="rgb(242,127,48)" rx="2" ry="2" />
<text  x="107.12" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="757.9" y="517" width="0.2" height="15.0" fill="rgb(248,16,16)" rx="2" ry="2" />
<text  x="760.92" y="527.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend::_{{closure}} (11 samples, 0.03%)</title><rect x="607.8" y="581" width="0.4" height="15.0" fill="rgb(234,28,19)" rx="2" ry="2" />
<text  x="610.75" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="226.7" y="613" width="0.3" height="15.0" fill="rgb(209,62,1)" rx="2" ry="2" />
<text  x="229.66" y="623.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (53 samples, 0.17%)</title><rect x="1059.4" y="869" width="2.0" height="15.0" fill="rgb(208,86,45)" rx="2" ry="2" />
<text  x="1062.43" y="879.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for &amp;T&gt;::serialize (64 samples, 0.20%)</title><rect x="1135.5" y="581" width="2.4" height="15.0" fill="rgb(221,132,9)" rx="2" ry="2" />
<text  x="1138.53" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 0.05%)</title><rect x="1078.6" y="757" width="0.6" height="15.0" fill="rgb(228,180,10)" rx="2" ry="2" />
<text  x="1081.57" y="767.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy::_{{closure}} (3 samples, 0.01%)</title><rect x="267.7" y="565" width="0.1" height="15.0" fill="rgb(206,168,2)" rx="2" ry="2" />
<text  x="270.73" y="575.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="260.4" y="533" width="0.2" height="15.0" fill="rgb(244,97,42)" rx="2" ry="2" />
<text  x="263.37" y="543.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..slice..Join&lt;&amp;str&gt; for [S]&gt;::join (10 samples, 0.03%)</title><rect x="267.5" y="613" width="0.3" height="15.0" fill="rgb(244,141,49)" rx="2" ry="2" />
<text  x="270.47" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="835.1" y="821" width="0.2" height="15.0" fill="rgb(238,173,9)" rx="2" ry="2" />
<text  x="838.11" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="668.0" y="597" width="0.3" height="15.0" fill="rgb(229,122,35)" rx="2" ry="2" />
<text  x="671.05" y="607.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (9 samples, 0.03%)</title><rect x="1093.9" y="613" width="0.3" height="15.0" fill="rgb(226,2,26)" rx="2" ry="2" />
<text  x="1096.89" y="623.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_path (252 samples, 0.80%)</title><rect x="602.0" y="661" width="9.5" height="15.0" fill="rgb(252,152,4)" rx="2" ry="2" />
<text  x="605.01" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (19 samples, 0.06%)</title><rect x="225.7" y="581" width="0.7" height="15.0" fill="rgb(243,121,23)" rx="2" ry="2" />
<text  x="228.68" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="836.9" y="789" width="0.1" height="15.0" fill="rgb(248,67,9)" rx="2" ry="2" />
<text  x="839.91" y="799.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="96.3" y="1061" width="0.1" height="15.0" fill="rgb(205,23,23)" rx="2" ry="2" />
<text  x="99.27" y="1071.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::get (16 samples, 0.05%)</title><rect x="837.4" y="853" width="0.6" height="15.0" fill="rgb(253,44,32)" rx="2" ry="2" />
<text  x="840.36" y="863.5" ></text>
</g>
<g >
<title>swc_ecma_visit::Visit::visit_module (23 samples, 0.07%)</title><rect x="239.8" y="661" width="0.9" height="15.0" fill="rgb(236,175,20)" rx="2" ry="2" />
<text  x="242.80" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (3 samples, 0.01%)</title><rect x="574.1" y="501" width="0.1" height="15.0" fill="rgb(240,85,31)" rx="2" ry="2" />
<text  x="577.08" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (41 samples, 0.13%)</title><rect x="1183.9" y="789" width="1.5" height="15.0" fill="rgb(246,178,25)" rx="2" ry="2" />
<text  x="1186.88" y="799.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="1063.2" y="821" width="0.6" height="15.0" fill="rgb(236,98,20)" rx="2" ry="2" />
<text  x="1066.22" y="831.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="321.5" y="261" width="0.2" height="15.0" fill="rgb(239,14,30)" rx="2" ry="2" />
<text  x="324.53" y="271.5" ></text>
</g>
<g >
<title>_&lt;core..str..pattern..CharPredicateSearcher&lt;F&gt; as core..str..pattern..Searcher&gt;::next_reject (3 samples, 0.01%)</title><rect x="186.9" y="1061" width="0.1" height="15.0" fill="rgb(225,223,17)" rx="2" ry="2" />
<text  x="189.86" y="1071.5" ></text>
</g>
<g >
<title>deno::flags::reload_arg (10 samples, 0.03%)</title><rect x="119.7" y="1141" width="0.3" height="15.0" fill="rgb(213,26,28)" rx="2" ry="2" />
<text  x="122.66" y="1151.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once::_{{closure}} (111 samples, 0.35%)</title><rect x="1090.3" y="821" width="4.2" height="15.0" fill="rgb(237,54,35)" rx="2" ry="2" />
<text  x="1093.32" y="831.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (7 samples, 0.02%)</title><rect x="634.7" y="885" width="0.3" height="15.0" fill="rgb(249,68,33)" rx="2" ry="2" />
<text  x="637.75" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (9 samples, 0.03%)</title><rect x="1110.9" y="517" width="0.4" height="15.0" fill="rgb(252,20,53)" rx="2" ry="2" />
<text  x="1113.94" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="88.6" y="1045" width="0.1" height="15.0" fill="rgb(238,52,7)" rx="2" ry="2" />
<text  x="91.58" y="1055.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="100.2" y="1061" width="0.1" height="15.0" fill="rgb(253,20,0)" rx="2" ry="2" />
<text  x="103.21" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="216.1" y="469" width="0.2" height="15.0" fill="rgb(206,79,30)" rx="2" ry="2" />
<text  x="219.15" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.01%)</title><rect x="241.4" y="629" width="0.2" height="15.0" fill="rgb(252,91,24)" rx="2" ry="2" />
<text  x="244.45" y="639.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_token (6 samples, 0.02%)</title><rect x="236.3" y="325" width="0.2" height="15.0" fill="rgb(213,106,0)" rx="2" ry="2" />
<text  x="239.31" y="335.5" ></text>
</g>
<g >
<title>deno::flags::reload_arg (10 samples, 0.03%)</title><rect x="187.1" y="1125" width="0.3" height="15.0" fill="rgb(210,2,6)" rx="2" ry="2" />
<text  x="190.05" y="1135.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11 samples, 0.03%)</title><rect x="16.3" y="1029" width="0.4" height="15.0" fill="rgb(226,159,50)" rx="2" ry="2" />
<text  x="19.27" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1098.2" y="725" width="0.2" height="15.0" fill="rgb(227,93,15)" rx="2" ry="2" />
<text  x="1101.25" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="1185.2" y="693" width="0.2" height="15.0" fill="rgb(209,169,41)" rx="2" ry="2" />
<text  x="1188.23" y="703.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="110.8" y="997" width="0.1" height="15.0" fill="rgb(225,156,23)" rx="2" ry="2" />
<text  x="113.76" y="1007.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (8 samples, 0.03%)</title><rect x="262.2" y="533" width="0.3" height="15.0" fill="rgb(227,100,6)" rx="2" ry="2" />
<text  x="265.25" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="1185.7" y="821" width="0.2" height="15.0" fill="rgb(247,143,48)" rx="2" ry="2" />
<text  x="1188.72" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="660.8" y="789" width="0.2" height="15.0" fill="rgb(218,72,37)" rx="2" ry="2" />
<text  x="663.80" y="799.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="261.6" y="565" width="0.1" height="15.0" fill="rgb(232,182,46)" rx="2" ry="2" />
<text  x="264.57" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="81.7" y="1045" width="0.2" height="15.0" fill="rgb(220,129,43)" rx="2" ry="2" />
<text  x="84.74" y="1055.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="1098.8" y="741" width="0.2" height="15.0" fill="rgb(244,18,16)" rx="2" ry="2" />
<text  x="1101.77" y="751.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as core..hash..Hash&gt;::hash (11 samples, 0.03%)</title><rect x="837.6" y="773" width="0.4" height="15.0" fill="rgb(228,89,5)" rx="2" ry="2" />
<text  x="840.55" y="783.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="197.2" y="1093" width="0.4" height="15.0" fill="rgb(205,171,16)" rx="2" ry="2" />
<text  x="200.22" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="243.1" y="565" width="0.3" height="15.0" fill="rgb(227,197,53)" rx="2" ry="2" />
<text  x="246.06" y="575.5" ></text>
</g>
<g >
<title>reqwest::connect::Connector::new_rustls_tls (2,432 samples, 7.74%)</title><rect x="838.0" y="869" width="91.3" height="15.0" fill="rgb(232,89,48)" rx="2" ry="2" />
<text  x="840.96" y="879.5" >reqwest::c..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (3 samples, 0.01%)</title><rect x="1185.3" y="661" width="0.1" height="15.0" fill="rgb(213,219,36)" rx="2" ry="2" />
<text  x="1188.31" y="671.5" ></text>
</g>
<g >
<title>swc_ecma_visit::visit_expr_stmt (12 samples, 0.04%)</title><rect x="240.2" y="485" width="0.5" height="15.0" fill="rgb(254,212,27)" rx="2" ry="2" />
<text  x="243.21" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="89.2" y="1045" width="0.1" height="15.0" fill="rgb(234,156,27)" rx="2" ry="2" />
<text  x="92.21" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (18 samples, 0.06%)</title><rect x="1004.9" y="837" width="0.7" height="15.0" fill="rgb(227,45,46)" rx="2" ry="2" />
<text  x="1007.88" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="139.4" y="1013" width="0.2" height="15.0" fill="rgb(243,223,43)" rx="2" ry="2" />
<text  x="142.45" y="1023.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="1095.7" y="805" width="0.2" height="15.0" fill="rgb(223,2,11)" rx="2" ry="2" />
<text  x="1098.69" y="815.5" ></text>
</g>
<g >
<title>url::Url::from_file_path (79 samples, 0.25%)</title><rect x="1186.5" y="901" width="3.0" height="15.0" fill="rgb(239,73,46)" rx="2" ry="2" />
<text  x="1189.55" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="259.8" y="661" width="0.2" height="15.0" fill="rgb(233,208,24)" rx="2" ry="2" />
<text  x="262.85" y="671.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_file (265 samples, 0.84%)</title><rect x="601.5" y="677" width="10.0" height="15.0" fill="rgb(212,0,18)" rx="2" ry="2" />
<text  x="604.52" y="687.5" ></text>
</g>
<g >
<title>deno::flags::reload_arg (10 samples, 0.03%)</title><rect x="162.5" y="1125" width="0.4" height="15.0" fill="rgb(229,207,24)" rx="2" ry="2" />
<text  x="165.50" y="1135.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (4 samples, 0.01%)</title><rect x="590.6" y="629" width="0.2" height="15.0" fill="rgb(215,159,6)" rx="2" ry="2" />
<text  x="593.63" y="639.5" ></text>
</g>
<g >
<title>_&lt;siphasher..sip128..SipHasher13 as siphasher..sip128..Hasher128&gt;::finish128 (3 samples, 0.01%)</title><rect x="231.8" y="405" width="0.1" height="15.0" fill="rgb(236,123,31)" rx="2" ry="2" />
<text  x="234.80" y="415.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (284 samples, 0.90%)</title><rect x="1044.4" y="869" width="10.6" height="15.0" fill="rgb(208,39,7)" rx="2" ry="2" />
<text  x="1047.37" y="879.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.02%)</title><rect x="95.7" y="1029" width="0.2" height="15.0" fill="rgb(224,152,30)" rx="2" ry="2" />
<text  x="98.67" y="1039.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="118.4" y="1077" width="0.2" height="15.0" fill="rgb(214,161,23)" rx="2" ry="2" />
<text  x="121.42" y="1087.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="665.4" y="741" width="0.1" height="15.0" fill="rgb(243,193,24)" rx="2" ry="2" />
<text  x="668.42" y="751.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 0.05%)</title><rect x="1071.4" y="837" width="0.6" height="15.0" fill="rgb(216,149,44)" rx="2" ry="2" />
<text  x="1074.37" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="832.4" y="805" width="0.1" height="15.0" fill="rgb(218,80,0)" rx="2" ry="2" />
<text  x="835.37" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (30 samples, 0.10%)</title><rect x="214.6" y="469" width="1.1" height="15.0" fill="rgb(236,153,45)" rx="2" ry="2" />
<text  x="217.61" y="479.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_reqs (6 samples, 0.02%)</title><rect x="106.6" y="1109" width="0.2" height="15.0" fill="rgb(223,165,4)" rx="2" ry="2" />
<text  x="109.60" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="266.1" y="549" width="0.1" height="15.0" fill="rgb(217,136,1)" rx="2" ry="2" />
<text  x="269.12" y="559.5" ></text>
</g>
<g >
<title>clap::app::App::arg (17 samples, 0.05%)</title><rect x="154.5" y="1109" width="0.7" height="15.0" fill="rgb(246,218,27)" rx="2" ry="2" />
<text  x="157.54" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="109.9" y="1077" width="0.2" height="15.0" fill="rgb(218,187,44)" rx="2" ry="2" />
<text  x="112.94" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1000.3" y="629" width="0.1" height="15.0" fill="rgb(224,16,42)" rx="2" ry="2" />
<text  x="1003.30" y="639.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (4 samples, 0.01%)</title><rect x="1094.3" y="741" width="0.2" height="15.0" fill="rgb(217,182,14)" rx="2" ry="2" />
<text  x="1097.30" y="751.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="96.9" y="1109" width="0.3" height="15.0" fill="rgb(213,218,16)" rx="2" ry="2" />
<text  x="99.95" y="1119.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (3 samples, 0.01%)</title><rect x="102.6" y="1045" width="0.1" height="15.0" fill="rgb(210,61,14)" rx="2" ry="2" />
<text  x="105.62" y="1055.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (3 samples, 0.01%)</title><rect x="157.3" y="1077" width="0.1" height="15.0" fill="rgb(214,155,24)" rx="2" ry="2" />
<text  x="160.28" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="1063.4" y="773" width="0.4" height="15.0" fill="rgb(207,196,29)" rx="2" ry="2" />
<text  x="1066.44" y="783.5" ></text>
</g>
<g >
<title>_&lt;&amp;http..header..name..HeaderName as http..header..map..into_header_name..Sealed&gt;::insert (15 samples, 0.05%)</title><rect x="1000.7" y="853" width="0.5" height="15.0" fill="rgb(209,78,6)" rx="2" ry="2" />
<text  x="1003.67" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (68 samples, 0.22%)</title><rect x="1103.8" y="549" width="2.6" height="15.0" fill="rgb(238,216,38)" rx="2" ry="2" />
<text  x="1106.84" y="559.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (104 samples, 0.33%)</title><rect x="1126.1" y="581" width="3.9" height="15.0" fill="rgb(211,223,43)" rx="2" ry="2" />
<text  x="1129.14" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="1065.2" y="741" width="0.3" height="15.0" fill="rgb(253,161,29)" rx="2" ry="2" />
<text  x="1068.25" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="91.2" y="1045" width="0.1" height="15.0" fill="rgb(208,199,21)" rx="2" ry="2" />
<text  x="94.17" y="1055.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..StandardHeader as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="836.3" y="757" width="0.2" height="15.0" fill="rgb(210,168,3)" rx="2" ry="2" />
<text  x="839.27" y="767.5" ></text>
</g>
<g >
<title>reqwest::async_impl::client::ClientBuilder::new (27 samples, 0.09%)</title><rect x="836.0" y="869" width="1.0" height="15.0" fill="rgb(224,129,6)" rx="2" ry="2" />
<text  x="839.01" y="879.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..HashMap&lt;K,V,S&gt; as core..default..Default&gt;::default (5 samples, 0.02%)</title><rect x="829.0" y="805" width="0.2" height="15.0" fill="rgb(248,76,8)" rx="2" ry="2" />
<text  x="831.99" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="15.0" y="1061" width="0.1" height="15.0" fill="rgb(213,49,37)" rx="2" ry="2" />
<text  x="17.96" y="1071.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="162.6" y="1093" width="0.3" height="15.0" fill="rgb(249,67,43)" rx="2" ry="2" />
<text  x="165.61" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="235.3" y="213" width="0.3" height="15.0" fill="rgb(238,15,13)" rx="2" ry="2" />
<text  x="238.33" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1123.8" y="437" width="0.2" height="15.0" fill="rgb(206,189,8)" rx="2" ry="2" />
<text  x="1126.81" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="180.3" y="1029" width="0.1" height="15.0" fill="rgb(248,16,30)" rx="2" ry="2" />
<text  x="183.26" y="1039.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::state (6 samples, 0.02%)</title><rect x="620.1" y="805" width="0.2" height="15.0" fill="rgb(216,213,34)" rx="2" ry="2" />
<text  x="623.07" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (281 samples, 0.89%)</title><rect x="817.4" y="757" width="10.5" height="15.0" fill="rgb(233,58,25)" rx="2" ry="2" />
<text  x="820.39" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="210.9" y="645" width="0.1" height="15.0" fill="rgb(217,211,20)" rx="2" ry="2" />
<text  x="213.85" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1087.0" y="661" width="0.1" height="15.0" fill="rgb(246,50,45)" rx="2" ry="2" />
<text  x="1089.98" y="671.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="23.3" y="1013" width="0.2" height="15.0" fill="rgb(217,117,6)" rx="2" ry="2" />
<text  x="26.25" y="1023.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="188.1" y="1077" width="0.3" height="15.0" fill="rgb(223,27,34)" rx="2" ry="2" />
<text  x="191.06" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (28 samples, 0.09%)</title><rect x="21.6" y="1013" width="1.1" height="15.0" fill="rgb(218,33,35)" rx="2" ry="2" />
<text  x="24.60" y="1023.5" ></text>
</g>
<g >
<title>_&lt;deno_core..core_isolate..CoreIsolate as core..future..future..Future&gt;::poll (64 samples, 0.20%)</title><rect x="207.8" y="853" width="2.4" height="15.0" fill="rgb(229,37,40)" rx="2" ry="2" />
<text  x="210.77" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="104.8" y="1045" width="0.2" height="15.0" fill="rgb(254,168,31)" rx="2" ry="2" />
<text  x="107.76" y="1055.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="1087.4" y="773" width="0.3" height="15.0" fill="rgb(237,72,28)" rx="2" ry="2" />
<text  x="1090.40" y="783.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="99.5" y="1093" width="0.2" height="15.0" fill="rgb(212,53,24)" rx="2" ry="2" />
<text  x="102.46" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="1172.8" y="693" width="0.1" height="15.0" fill="rgb(213,205,44)" rx="2" ry="2" />
<text  x="1175.81" y="703.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (117 samples, 0.37%)</title><rect x="592.7" y="661" width="4.4" height="15.0" fill="rgb(220,163,35)" rx="2" ry="2" />
<text  x="595.70" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (464 samples, 1.48%)</title><rect x="641.8" y="917" width="17.4" height="15.0" fill="rgb(243,59,24)" rx="2" ry="2" />
<text  x="644.80" y="927.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_with_scheme (262 samples, 0.83%)</title><rect x="590.4" y="725" width="9.8" height="15.0" fill="rgb(217,63,4)" rx="2" ry="2" />
<text  x="593.41" y="735.5" ></text>
</g>
<g >
<title>_&lt;swc_common..syntax_pos..FileName as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="229.4" y="597" width="0.2" height="15.0" fill="rgb(243,169,47)" rx="2" ry="2" />
<text  x="232.40" y="607.5" ></text>
</g>
<g >
<title>rusty_v8::script::_&lt;impl rusty_v8..data..Script&gt;::run (3 samples, 0.01%)</title><rect x="1096.4" y="837" width="0.1" height="15.0" fill="rgb(252,109,29)" rx="2" ry="2" />
<text  x="1099.41" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (14 samples, 0.04%)</title><rect x="620.7" y="757" width="0.6" height="15.0" fill="rgb(229,121,23)" rx="2" ry="2" />
<text  x="623.74" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="141.5" y="1077" width="0.2" height="15.0" fill="rgb(218,111,34)" rx="2" ry="2" />
<text  x="144.51" y="1087.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..ser..Serializer as serde..ser..Serializer&gt;::serialize_str (9 samples, 0.03%)</title><rect x="1112.5" y="533" width="0.3" height="15.0" fill="rgb(225,13,53)" rx="2" ry="2" />
<text  x="1115.47" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (56 samples, 0.18%)</title><rect x="36.8" y="997" width="2.1" height="15.0" fill="rgb(214,35,5)" rx="2" ry="2" />
<text  x="39.81" y="1007.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="261.3" y="517" width="0.1" height="15.0" fill="rgb(228,211,28)" rx="2" ry="2" />
<text  x="264.27" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="262.7" y="565" width="0.2" height="15.0" fill="rgb(252,79,13)" rx="2" ry="2" />
<text  x="265.74" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="244.2" y="565" width="0.1" height="15.0" fill="rgb(241,93,25)" rx="2" ry="2" />
<text  x="247.19" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1034.9" y="821" width="0.2" height="15.0" fill="rgb(213,117,3)" rx="2" ry="2" />
<text  x="1037.95" y="831.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="165.4" y="1045" width="0.1" height="15.0" fill="rgb(220,221,46)" rx="2" ry="2" />
<text  x="168.35" y="1055.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (4 samples, 0.01%)</title><rect x="108.5" y="1077" width="0.1" height="15.0" fill="rgb(209,75,21)" rx="2" ry="2" />
<text  x="111.47" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1066.4" y="789" width="0.2" height="15.0" fill="rgb(250,120,39)" rx="2" ry="2" />
<text  x="1069.45" y="799.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as http..header..map..into_header_name..Sealed&gt;::insert (26 samples, 0.08%)</title><rect x="663.9" y="869" width="1.0" height="15.0" fill="rgb(231,109,39)" rx="2" ry="2" />
<text  x="666.92" y="879.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="1089.8" y="757" width="0.1" height="15.0" fill="rgb(235,38,25)" rx="2" ry="2" />
<text  x="1092.76" y="767.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (10 samples, 0.03%)</title><rect x="1069.2" y="853" width="0.4" height="15.0" fill="rgb(226,81,6)" rx="2" ry="2" />
<text  x="1072.19" y="863.5" ></text>
</g>
<g >
<title>_&lt;&lt;alloc..vec..IntoIter&lt;T&gt; as core..ops..drop..Drop&gt;..drop..DropGuard&lt;T&gt; as core..ops..drop..Drop&gt;::drop (4 samples, 0.01%)</title><rect x="12.5" y="1029" width="0.2" height="15.0" fill="rgb(219,130,32)" rx="2" ry="2" />
<text  x="15.52" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (44 samples, 0.14%)</title><rect x="643.3" y="613" width="1.7" height="15.0" fill="rgb(232,5,30)" rx="2" ry="2" />
<text  x="646.34" y="623.5" ></text>
</g>
<g >
<title>encoding_rs::Encoding::for_label::_{{closure}} (7 samples, 0.02%)</title><rect x="224.1" y="597" width="0.3" height="15.0" fill="rgb(233,19,14)" rx="2" ry="2" />
<text  x="227.11" y="607.5" ></text>
</g>
<g >
<title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (7 samples, 0.02%)</title><rect x="209.7" y="805" width="0.3" height="15.0" fill="rgb(215,138,25)" rx="2" ry="2" />
<text  x="212.73" y="815.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="207.5" y="853" width="0.2" height="15.0" fill="rgb(227,79,14)" rx="2" ry="2" />
<text  x="210.51" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="97.8" y="1045" width="0.1" height="15.0" fill="rgb(240,46,50)" rx="2" ry="2" />
<text  x="100.81" y="1055.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..ser..Serializer as serde..ser..Serializer&gt;::serialize_seq (5 samples, 0.02%)</title><rect x="1114.4" y="565" width="0.2" height="15.0" fill="rgb(240,102,0)" rx="2" ry="2" />
<text  x="1117.43" y="575.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="17.3" y="1029" width="0.2" height="15.0" fill="rgb(213,118,41)" rx="2" ry="2" />
<text  x="20.32" y="1039.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="139.3" y="1077" width="0.3" height="15.0" fill="rgb(253,178,3)" rx="2" ry="2" />
<text  x="142.30" y="1087.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (44 samples, 0.14%)</title><rect x="272.0" y="405" width="1.7" height="15.0" fill="rgb(240,209,1)" rx="2" ry="2" />
<text  x="275.01" y="415.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="87.1" y="1029" width="0.2" height="15.0" fill="rgb(209,92,20)" rx="2" ry="2" />
<text  x="90.07" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.03%)</title><rect x="1114.0" y="453" width="0.4" height="15.0" fill="rgb(252,215,18)" rx="2" ry="2" />
<text  x="1117.01" y="463.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_assignment_expr (157 samples, 0.50%)</title><rect x="232.9" y="565" width="5.9" height="15.0" fill="rgb(248,117,36)" rx="2" ry="2" />
<text  x="235.93" y="575.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="623.5" y="645" width="0.3" height="15.0" fill="rgb(206,192,49)" rx="2" ry="2" />
<text  x="626.52" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="1068.9" y="757" width="0.1" height="15.0" fill="rgb(212,130,3)" rx="2" ry="2" />
<text  x="1071.89" y="767.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.02%)</title><rect x="206.6" y="1125" width="0.2" height="15.0" fill="rgb(222,166,3)" rx="2" ry="2" />
<text  x="209.61" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="106.4" y="1093" width="0.2" height="15.0" fill="rgb(206,84,12)" rx="2" ry="2" />
<text  x="109.45" y="1103.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (31 samples, 0.10%)</title><rect x="1056.0" y="853" width="1.1" height="15.0" fill="rgb(239,224,30)" rx="2" ry="2" />
<text  x="1058.97" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (3 samples, 0.01%)</title><rect x="550.5" y="213" width="0.1" height="15.0" fill="rgb(248,171,17)" rx="2" ry="2" />
<text  x="553.50" y="223.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (9 samples, 0.03%)</title><rect x="259.1" y="629" width="0.3" height="15.0" fill="rgb(213,188,15)" rx="2" ry="2" />
<text  x="262.09" y="639.5" ></text>
</g>
<g >
<title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::_{{closure}} (4 samples, 0.01%)</title><rect x="585.9" y="709" width="0.1" height="15.0" fill="rgb(225,88,19)" rx="2" ry="2" />
<text  x="588.87" y="719.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (5 samples, 0.02%)</title><rect x="615.4" y="565" width="0.2" height="15.0" fill="rgb(228,197,25)" rx="2" ry="2" />
<text  x="618.45" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::split_off (5 samples, 0.02%)</title><rect x="611.2" y="629" width="0.2" height="15.0" fill="rgb(231,147,4)" rx="2" ry="2" />
<text  x="614.17" y="639.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::is_present (6 samples, 0.02%)</title><rect x="195.6" y="1125" width="0.2" height="15.0" fill="rgb(225,207,4)" rx="2" ry="2" />
<text  x="198.61" y="1135.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (47 samples, 0.15%)</title><rect x="667.0" y="837" width="1.8" height="15.0" fill="rgb(222,65,27)" rx="2" ry="2" />
<text  x="670.03" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (41 samples, 0.13%)</title><rect x="656.5" y="245" width="1.6" height="15.0" fill="rgb(252,228,50)" rx="2" ry="2" />
<text  x="659.52" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (259 samples, 0.82%)</title><rect x="460.4" y="117" width="9.8" height="15.0" fill="rgb(209,158,42)" rx="2" ry="2" />
<text  x="463.44" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.09%)</title><rect x="37.9" y="965" width="1.0" height="15.0" fill="rgb(228,137,35)" rx="2" ry="2" />
<text  x="40.86" y="975.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (6 samples, 0.02%)</title><rect x="23.9" y="1045" width="0.2" height="15.0" fill="rgb(253,122,32)" rx="2" ry="2" />
<text  x="26.89" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (5 samples, 0.02%)</title><rect x="1094.0" y="549" width="0.2" height="15.0" fill="rgb(235,5,14)" rx="2" ry="2" />
<text  x="1097.04" y="559.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend::_{{closure}} (20 samples, 0.06%)</title><rect x="596.3" y="613" width="0.8" height="15.0" fill="rgb(236,101,24)" rx="2" ry="2" />
<text  x="599.34" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (19 samples, 0.06%)</title><rect x="78.3" y="1125" width="0.7" height="15.0" fill="rgb(236,163,26)" rx="2" ry="2" />
<text  x="81.33" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.03%)</title><rect x="1087.9" y="789" width="0.4" height="15.0" fill="rgb(218,136,3)" rx="2" ry="2" />
<text  x="1090.92" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (12 samples, 0.04%)</title><rect x="73.1" y="1141" width="0.5" height="15.0" fill="rgb(208,205,5)" rx="2" ry="2" />
<text  x="76.15" y="1151.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (10 samples, 0.03%)</title><rect x="116.0" y="1109" width="0.4" height="15.0" fill="rgb(226,58,1)" rx="2" ry="2" />
<text  x="118.98" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="216.1" y="485" width="0.2" height="15.0" fill="rgb(231,123,4)" rx="2" ry="2" />
<text  x="219.11" y="495.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="204.5" y="965" width="0.2" height="15.0" fill="rgb(247,163,2)" rx="2" ry="2" />
<text  x="207.51" y="975.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="1035.5" y="821" width="0.2" height="15.0" fill="rgb(252,197,7)" rx="2" ry="2" />
<text  x="1038.47" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend (115 samples, 0.37%)</title><rect x="1181.1" y="885" width="4.3" height="15.0" fill="rgb(218,183,20)" rx="2" ry="2" />
<text  x="1184.10" y="895.5" ></text>
</g>
<g >
<title>rusty_v8::scope::CallbackScope::new (3 samples, 0.01%)</title><rect x="636.5" y="805" width="0.2" height="15.0" fill="rgb(238,138,50)" rx="2" ry="2" />
<text  x="639.55" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="75.8" y="981" width="0.1" height="15.0" fill="rgb(231,51,3)" rx="2" ry="2" />
<text  x="78.81" y="991.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="264.0" y="565" width="0.2" height="15.0" fill="rgb(238,36,17)" rx="2" ry="2" />
<text  x="267.01" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (35 samples, 0.11%)</title><rect x="1092.9" y="709" width="1.3" height="15.0" fill="rgb(210,146,37)" rx="2" ry="2" />
<text  x="1095.91" y="719.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="177.7" y="1109" width="0.3" height="15.0" fill="rgb(227,193,23)" rx="2" ry="2" />
<text  x="180.70" y="1119.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileFetcher::fetch_cached_source_file (46 samples, 0.15%)</title><rect x="587.4" y="725" width="1.8" height="15.0" fill="rgb(229,172,44)" rx="2" ry="2" />
<text  x="590.44" y="735.5" ></text>
</g>
<g >
<title>deno::flags::flags_from_vec_safe (4,936 samples, 15.70%)</title><rect x="13.0" y="1189" width="185.3" height="15.0" fill="rgb(214,158,2)" rx="2" ry="2" />
<text  x="15.97" y="1199.5" >deno::flags::flags_from_..</text>
</g>
<g >
<title>std::rt::lang_start::_{{closure}} (31,423 samples, 99.97%)</title><rect x="10.0" y="1269" width="1179.7" height="15.0" fill="rgb(209,158,25)" rx="2" ry="2" />
<text  x="13.04" y="1279.5" >std::rt::lang_start::_{{closure}}</text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (3 samples, 0.01%)</title><rect x="94.1" y="1045" width="0.1" height="15.0" fill="rgb(247,175,32)" rx="2" ry="2" />
<text  x="97.13" y="1055.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (209 samples, 0.66%)</title><rect x="1015.9" y="821" width="7.9" height="15.0" fill="rgb(206,146,50)" rx="2" ry="2" />
<text  x="1018.92" y="831.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..Repr&lt;T&gt; as core..hash..Hash&gt;::hash (10 samples, 0.03%)</title><rect x="830.8" y="773" width="0.4" height="15.0" fill="rgb(222,140,53)" rx="2" ry="2" />
<text  x="833.83" y="783.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (6 samples, 0.02%)</title><rect x="14.5" y="1109" width="0.2" height="15.0" fill="rgb(228,134,4)" rx="2" ry="2" />
<text  x="17.51" y="1119.5" ></text>
</g>
<g >
<title>deno::flags::cache_subcommand (251 samples, 0.80%)</title><rect x="89.6" y="1157" width="9.4" height="15.0" fill="rgb(212,14,29)" rx="2" ry="2" />
<text  x="92.59" y="1167.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.03%)</title><rect x="79.3" y="1141" width="0.3" height="15.0" fill="rgb(212,211,29)" rx="2" ry="2" />
<text  x="82.30" y="1151.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="600.8" y="581" width="0.2" height="15.0" fill="rgb(219,133,40)" rx="2" ry="2" />
<text  x="603.84" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::resize (17 samples, 0.05%)</title><rect x="1088.4" y="821" width="0.6" height="15.0" fill="rgb(229,209,27)" rx="2" ry="2" />
<text  x="1091.37" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..IntoIter&lt;T&gt; as core..ops..drop..Drop&gt;::drop (7 samples, 0.02%)</title><rect x="65.2" y="1109" width="0.3" height="15.0" fill="rgb(240,28,6)" rx="2" ry="2" />
<text  x="68.23" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="831.9" y="853" width="0.2" height="15.0" fill="rgb(228,178,44)" rx="2" ry="2" />
<text  x="834.92" y="863.5" ></text>
</g>
<g >
<title>_&lt;char as unicode_xid..UnicodeXID&gt;::is_xid_continue (4 samples, 0.01%)</title><rect x="232.0" y="421" width="0.2" height="15.0" fill="rgb(205,22,1)" rx="2" ry="2" />
<text  x="235.03" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="608.1" y="501" width="0.1" height="15.0" fill="rgb(208,185,52)" rx="2" ry="2" />
<text  x="611.05" y="511.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="154.2" y="1109" width="0.3" height="15.0" fill="rgb(218,58,37)" rx="2" ry="2" />
<text  x="157.20" y="1119.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::short (12 samples, 0.04%)</title><rect x="79.6" y="1157" width="0.5" height="15.0" fill="rgb(244,10,4)" rx="2" ry="2" />
<text  x="82.64" y="1167.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="547.9" y="85" width="0.3" height="15.0" fill="rgb(229,69,36)" rx="2" ry="2" />
<text  x="550.95" y="95.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="128.7" y="1045" width="0.1" height="15.0" fill="rgb(224,104,44)" rx="2" ry="2" />
<text  x="131.71" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (4 samples, 0.01%)</title><rect x="1076.1" y="805" width="0.2" height="15.0" fill="rgb(250,218,34)" rx="2" ry="2" />
<text  x="1079.13" y="815.5" ></text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="261.0" y="629" width="0.4" height="15.0" fill="rgb(227,165,6)" rx="2" ry="2" />
<text  x="264.01" y="639.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="188.0" y="1125" width="0.4" height="15.0" fill="rgb(228,14,26)" rx="2" ry="2" />
<text  x="190.95" y="1135.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (119 samples, 0.38%)</title><rect x="578.0" y="565" width="4.5" height="15.0" fill="rgb(228,208,43)" rx="2" ry="2" />
<text  x="581.02" y="575.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="263.1" y="549" width="0.2" height="15.0" fill="rgb(252,86,42)" rx="2" ry="2" />
<text  x="266.07" y="559.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (71 samples, 0.23%)</title><rect x="1073.7" y="885" width="2.7" height="15.0" fill="rgb(215,28,51)" rx="2" ry="2" />
<text  x="1076.73" y="895.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="831.8" y="885" width="0.3" height="15.0" fill="rgb(238,5,5)" rx="2" ry="2" />
<text  x="834.84" y="895.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (3 samples, 0.01%)</title><rect x="612.0" y="565" width="0.1" height="15.0" fill="rgb(205,35,25)" rx="2" ry="2" />
<text  x="615.03" y="575.5" ></text>
</g>
<g >
<title>_&lt;deno..state..State as deno_core..modules..ModuleLoader&gt;::load (16 samples, 0.05%)</title><rect x="600.4" y="773" width="0.6" height="15.0" fill="rgb(245,26,28)" rx="2" ry="2" />
<text  x="603.39" y="783.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::trim_left_matches (6 samples, 0.02%)</title><rect x="105.5" y="1109" width="0.2" height="15.0" fill="rgb(249,141,35)" rx="2" ry="2" />
<text  x="108.51" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="1176.2" y="853" width="0.1" height="15.0" fill="rgb(230,172,10)" rx="2" ry="2" />
<text  x="1179.18" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (6 samples, 0.02%)</title><rect x="1111.0" y="501" width="0.3" height="15.0" fill="rgb(210,26,39)" rx="2" ry="2" />
<text  x="1114.05" y="511.5" ></text>
</g>
<g >
<title>std::collections::hash::map::RandomState::new (3 samples, 0.01%)</title><rect x="831.4" y="837" width="0.1" height="15.0" fill="rgb(223,133,44)" rx="2" ry="2" />
<text  x="834.39" y="847.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (12 samples, 0.04%)</title><rect x="1064.2" y="869" width="0.4" height="15.0" fill="rgb(235,137,3)" rx="2" ry="2" />
<text  x="1067.19" y="879.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="588.5" y="645" width="0.3" height="15.0" fill="rgb(240,139,8)" rx="2" ry="2" />
<text  x="591.49" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="1115.1" y="597" width="0.3" height="15.0" fill="rgb(240,134,4)" rx="2" ry="2" />
<text  x="1118.10" y="607.5" ></text>
</g>
<g >
<title>clap::args::arg_builder::base::Base::unset (3 samples, 0.01%)</title><rect x="104.4" y="1093" width="0.1" height="15.0" fill="rgb(220,131,39)" rx="2" ry="2" />
<text  x="107.42" y="1103.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (107 samples, 0.34%)</title><rect x="1102.4" y="597" width="4.0" height="15.0" fill="rgb(246,57,12)" rx="2" ry="2" />
<text  x="1105.38" y="607.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (15 samples, 0.05%)</title><rect x="546.3" y="309" width="0.6" height="15.0" fill="rgb(237,171,35)" rx="2" ry="2" />
<text  x="549.33" y="319.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next (40 samples, 0.13%)</title><rect x="234.4" y="405" width="1.5" height="15.0" fill="rgb(221,157,12)" rx="2" ry="2" />
<text  x="237.39" y="415.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..RandomState as core..default..Default&gt;::default (4 samples, 0.01%)</title><rect x="663.1" y="837" width="0.2" height="15.0" fill="rgb(231,4,32)" rx="2" ry="2" />
<text  x="666.13" y="847.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (23 samples, 0.07%)</title><rect x="189.6" y="1093" width="0.9" height="15.0" fill="rgb(244,134,18)" rx="2" ry="2" />
<text  x="192.60" y="1103.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (32 samples, 0.10%)</title><rect x="547.0" y="277" width="1.2" height="15.0" fill="rgb(235,64,2)" rx="2" ry="2" />
<text  x="550.05" y="287.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="1032.3" y="837" width="0.1" height="15.0" fill="rgb(208,197,12)" rx="2" ry="2" />
<text  x="1035.32" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..collections..btree..map..BTreeMap&lt;K,V&gt; as core..iter..traits..collect..Extend&lt;(K,V)&gt;&gt;::extend (26 samples, 0.08%)</title><rect x="21.7" y="981" width="1.0" height="15.0" fill="rgb(227,203,3)" rx="2" ry="2" />
<text  x="24.68" y="991.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve_exact (4 samples, 0.01%)</title><rect x="550.7" y="213" width="0.1" height="15.0" fill="rgb(214,136,11)" rx="2" ry="2" />
<text  x="553.65" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="596.9" y="549" width="0.1" height="15.0" fill="rgb(251,168,19)" rx="2" ry="2" />
<text  x="599.87" y="559.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (5 samples, 0.02%)</title><rect x="90.5" y="1109" width="0.2" height="15.0" fill="rgb(211,117,39)" rx="2" ry="2" />
<text  x="93.53" y="1119.5" ></text>
</g>
<g >
<title>_&lt;serde_json..ser..MapKeySerializer&lt;W,F&gt; as serde..ser..Serializer&gt;::serialize_str (388 samples, 1.23%)</title><rect x="1151.7" y="565" width="14.6" height="15.0" fill="rgb(220,179,29)" rx="2" ry="2" />
<text  x="1154.71" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="119.8" y="1093" width="0.2" height="15.0" fill="rgb(240,113,32)" rx="2" ry="2" />
<text  x="122.81" y="1103.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..string..ToString&gt;::to_string (15 samples, 0.05%)</title><rect x="260.1" y="661" width="0.5" height="15.0" fill="rgb(236,68,44)" rx="2" ry="2" />
<text  x="263.07" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.02%)</title><rect x="1040.7" y="709" width="0.3" height="15.0" fill="rgb(228,124,47)" rx="2" ry="2" />
<text  x="1043.73" y="719.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::util::CharExt::is_ident_part (6 samples, 0.02%)</title><rect x="237.4" y="197" width="0.2" height="15.0" fill="rgb(233,26,31)" rx="2" ry="2" />
<text  x="240.40" y="207.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (30 samples, 0.10%)</title><rect x="1037.4" y="853" width="1.1" height="15.0" fill="rgb(223,208,16)" rx="2" ry="2" />
<text  x="1040.35" y="863.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="21.0" y="949" width="0.2" height="15.0" fill="rgb(247,174,2)" rx="2" ry="2" />
<text  x="24.04" y="959.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (3 samples, 0.01%)</title><rect x="1041.6" y="805" width="0.1" height="15.0" fill="rgb(220,94,12)" rx="2" ry="2" />
<text  x="1044.63" y="815.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (16 samples, 0.05%)</title><rect x="1079.3" y="837" width="0.6" height="15.0" fill="rgb(245,152,39)" rx="2" ry="2" />
<text  x="1082.32" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::find (3 samples, 0.01%)</title><rect x="228.9" y="597" width="0.2" height="15.0" fill="rgb(229,58,45)" rx="2" ry="2" />
<text  x="231.95" y="607.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="178.1" y="1093" width="0.3" height="15.0" fill="rgb(215,68,28)" rx="2" ry="2" />
<text  x="181.12" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (5 samples, 0.02%)</title><rect x="574.0" y="517" width="0.2" height="15.0" fill="rgb(222,150,32)" rx="2" ry="2" />
<text  x="577.00" y="527.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (1,328 samples, 4.23%)</title><rect x="271.1" y="501" width="49.9" height="15.0" fill="rgb(234,153,32)" rx="2" ry="2" />
<text  x="274.11" y="511.5" >serde..</text>
</g>
<g >
<title>_&lt;deno..file_fetcher..TextDocument as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="588.1" y="677" width="0.3" height="15.0" fill="rgb(249,196,39)" rx="2" ry="2" />
<text  x="591.12" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="230.7" y="549" width="0.2" height="15.0" fill="rgb(225,199,23)" rx="2" ry="2" />
<text  x="233.68" y="559.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (216 samples, 0.69%)</title><rect x="462.0" y="101" width="8.2" height="15.0" fill="rgb(233,111,11)" rx="2" ry="2" />
<text  x="465.05" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="103.6" y="1045" width="0.1" height="15.0" fill="rgb(231,68,43)" rx="2" ry="2" />
<text  x="106.56" y="1055.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="64.4" y="1093" width="0.3" height="15.0" fill="rgb(210,51,35)" rx="2" ry="2" />
<text  x="67.36" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="621.4" y="741" width="0.2" height="15.0" fill="rgb(223,106,10)" rx="2" ry="2" />
<text  x="624.42" y="751.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_str_lit (32 samples, 0.10%)</title><rect x="234.5" y="357" width="1.2" height="15.0" fill="rgb(251,170,28)" rx="2" ry="2" />
<text  x="237.50" y="367.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (10 samples, 0.03%)</title><rect x="77.6" y="1109" width="0.4" height="15.0" fill="rgb(215,11,23)" rx="2" ry="2" />
<text  x="80.61" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity_zeroed (3 samples, 0.01%)</title><rect x="235.0" y="149" width="0.1" height="15.0" fill="rgb(244,207,31)" rx="2" ry="2" />
<text  x="237.99" y="159.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_reqs (6 samples, 0.02%)</title><rect x="99.1" y="1109" width="0.3" height="15.0" fill="rgb(233,192,22)" rx="2" ry="2" />
<text  x="102.13" y="1119.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (2,371 samples, 7.54%)</title><rect x="669.1" y="725" width="89.0" height="15.0" fill="rgb(223,194,24)" rx="2" ry="2" />
<text  x="672.06" y="735.5" >core::iter..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.08%)</title><rect x="1099.1" y="757" width="0.9" height="15.0" fill="rgb(247,44,25)" rx="2" ry="2" />
<text  x="1102.11" y="767.5" ></text>
</g>
<g >
<title>unicode_xid::tables::derived_property::XID_Start (3 samples, 0.01%)</title><rect x="234.2" y="149" width="0.1" height="15.0" fill="rgb(242,63,19)" rx="2" ry="2" />
<text  x="237.17" y="159.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::VacantEntry&lt;K,V&gt;::insert (5 samples, 0.02%)</title><rect x="22.5" y="725" width="0.2" height="15.0" fill="rgb(229,39,17)" rx="2" ry="2" />
<text  x="25.46" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.02%)</title><rect x="1036.6" y="837" width="0.3" height="15.0" fill="rgb(225,160,3)" rx="2" ry="2" />
<text  x="1039.60" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1186.2" y="789" width="0.1" height="15.0" fill="rgb(240,162,52)" rx="2" ry="2" />
<text  x="1189.21" y="799.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="600.8" y="597" width="0.2" height="15.0" fill="rgb(240,201,23)" rx="2" ry="2" />
<text  x="603.81" y="607.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.02%)</title><rect x="1177.9" y="869" width="0.2" height="15.0" fill="rgb(221,186,48)" rx="2" ry="2" />
<text  x="1180.87" y="879.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="88.1" y="1093" width="0.3" height="15.0" fill="rgb(254,83,43)" rx="2" ry="2" />
<text  x="91.13" y="1103.5" ></text>
</g>
<g >
<title>tokio::runtime::builder::Builder::build_basic_runtime (94 samples, 0.30%)</title><rect x="202.2" y="1157" width="3.5" height="15.0" fill="rgb(254,0,7)" rx="2" ry="2" />
<text  x="205.18" y="1167.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="1175.7" y="693" width="0.1" height="15.0" fill="rgb(251,48,27)" rx="2" ry="2" />
<text  x="1178.70" y="703.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (82 samples, 0.26%)</title><rect x="638.7" y="917" width="3.1" height="15.0" fill="rgb(216,118,46)" rx="2" ry="2" />
<text  x="641.73" y="927.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="620.1" y="773" width="0.2" height="15.0" fill="rgb(249,62,2)" rx="2" ry="2" />
<text  x="623.14" y="783.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..string..ToString&gt;::to_string (60 samples, 0.19%)</title><rect x="220.1" y="677" width="2.3" height="15.0" fill="rgb(247,85,40)" rx="2" ry="2" />
<text  x="223.13" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="618.8" y="789" width="0.1" height="15.0" fill="rgb(220,11,37)" rx="2" ry="2" />
<text  x="621.75" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1138.7" y="661" width="0.1" height="15.0" fill="rgb(252,195,15)" rx="2" ry="2" />
<text  x="1141.72" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="128.3" y="1045" width="0.1" height="15.0" fill="rgb(219,219,53)" rx="2" ry="2" />
<text  x="131.33" y="1055.5" ></text>
</g>
<g >
<title>serde::de::impls::_&lt;impl serde..de..Deserialize for alloc..string..String&gt;::deserialize (15 samples, 0.05%)</title><rect x="266.8" y="501" width="0.6" height="15.0" fill="rgb(214,91,33)" rx="2" ry="2" />
<text  x="269.79" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="88.8" y="1093" width="0.2" height="15.0" fill="rgb(254,145,29)" rx="2" ry="2" />
<text  x="91.80" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="119.9" y="1045" width="0.1" height="15.0" fill="rgb(235,51,34)" rx="2" ry="2" />
<text  x="122.92" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="97.7" y="1093" width="0.2" height="15.0" fill="rgb(220,47,29)" rx="2" ry="2" />
<text  x="100.70" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (178 samples, 0.57%)</title><rect x="252.3" y="245" width="6.7" height="15.0" fill="rgb(238,153,22)" rx="2" ry="2" />
<text  x="255.30" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (29 samples, 0.09%)</title><rect x="657.0" y="181" width="1.1" height="15.0" fill="rgb(221,81,36)" rx="2" ry="2" />
<text  x="659.97" y="191.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (947 samples, 3.01%)</title><rect x="400.8" y="197" width="35.5" height="15.0" fill="rgb(235,212,32)" rx="2" ry="2" />
<text  x="403.78" y="207.5" >_&lt;s..</text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (346 samples, 1.10%)</title><rect x="367.1" y="197" width="13.0" height="15.0" fill="rgb(210,152,50)" rx="2" ry="2" />
<text  x="370.10" y="207.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..fmt..Display&gt;::fmt (11 samples, 0.03%)</title><rect x="600.6" y="693" width="0.4" height="15.0" fill="rgb(231,106,34)" rx="2" ry="2" />
<text  x="603.58" y="703.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_ident (7 samples, 0.02%)</title><rect x="470.2" y="197" width="0.2" height="15.0" fill="rgb(209,176,35)" rx="2" ry="2" />
<text  x="473.16" y="207.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="1034.5" y="853" width="0.4" height="15.0" fill="rgb(205,136,10)" rx="2" ry="2" />
<text  x="1037.50" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="660.0" y="837" width="0.2" height="15.0" fill="rgb(233,59,5)" rx="2" ry="2" />
<text  x="662.97" y="847.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="104.5" y="1141" width="0.5" height="15.0" fill="rgb(217,168,5)" rx="2" ry="2" />
<text  x="107.53" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (10 samples, 0.03%)</title><rect x="201.5" y="1061" width="0.3" height="15.0" fill="rgb(229,156,8)" rx="2" ry="2" />
<text  x="204.47" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1005.4" y="725" width="0.2" height="15.0" fill="rgb(209,145,40)" rx="2" ry="2" />
<text  x="1008.40" y="735.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (40 samples, 0.13%)</title><rect x="84.1" y="1093" width="1.5" height="15.0" fill="rgb(234,174,23)" rx="2" ry="2" />
<text  x="87.07" y="1103.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (125 samples, 0.40%)</title><rect x="546.1" y="389" width="4.7" height="15.0" fill="rgb(232,145,35)" rx="2" ry="2" />
<text  x="549.15" y="399.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (6 samples, 0.02%)</title><rect x="1057.5" y="805" width="0.2" height="15.0" fill="rgb(208,126,15)" rx="2" ry="2" />
<text  x="1060.47" y="815.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..ser..Serializer&lt;W,F&gt; as serde..ser..Serializer&gt;::serialize_u64 (11 samples, 0.03%)</title><rect x="1123.5" y="533" width="0.5" height="15.0" fill="rgb(209,131,15)" rx="2" ry="2" />
<text  x="1126.55" y="543.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="222.6" y="597" width="0.2" height="15.0" fill="rgb(252,137,41)" rx="2" ry="2" />
<text  x="225.57" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (36 samples, 0.11%)</title><rect x="1083.8" y="837" width="1.4" height="15.0" fill="rgb(205,209,2)" rx="2" ry="2" />
<text  x="1086.83" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="836.7" y="821" width="0.1" height="15.0" fill="rgb(249,211,20)" rx="2" ry="2" />
<text  x="839.69" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="16.5" y="949" width="0.1" height="15.0" fill="rgb(234,181,10)" rx="2" ry="2" />
<text  x="19.46" y="959.5" ></text>
</g>
<g >
<title>_&lt;deno..state..State as deno_core..modules..ModuleLoader&gt;::prepare_load::_{{closure}} (10,086 samples, 32.09%)</title><rect x="211.1" y="773" width="378.7" height="15.0" fill="rgb(224,209,28)" rx="2" ry="2" />
<text  x="214.12" y="783.5" >_&lt;deno..state..State as deno_core..modules..ModuleL..</text>
</g>
<g >
<title>_&lt;serde..de..impls..StringVisitor as serde..de..Visitor&gt;::visit_str (18 samples, 0.06%)</title><rect x="547.5" y="181" width="0.7" height="15.0" fill="rgb(220,147,22)" rx="2" ry="2" />
<text  x="550.50" y="191.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_subscript (47 samples, 0.15%)</title><rect x="236.6" y="421" width="1.7" height="15.0" fill="rgb(248,19,29)" rx="2" ry="2" />
<text  x="239.57" y="431.5" ></text>
</g>
<g >
<title>_&lt;alloc..rc..Rc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (302 samples, 0.96%)</title><rect x="647.5" y="645" width="11.4" height="15.0" fill="rgb(250,173,29)" rx="2" ry="2" />
<text  x="650.55" y="655.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (3 samples, 0.01%)</title><rect x="590.7" y="613" width="0.1" height="15.0" fill="rgb(209,121,21)" rx="2" ry="2" />
<text  x="593.67" y="623.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (152 samples, 0.48%)</title><rect x="611.9" y="629" width="5.7" height="15.0" fill="rgb(231,142,8)" rx="2" ry="2" />
<text  x="614.88" y="639.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..valued..Valued as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="75.6" y="1077" width="0.3" height="15.0" fill="rgb(205,128,34)" rx="2" ry="2" />
<text  x="78.59" y="1087.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (6 samples, 0.02%)</title><rect x="108.4" y="1093" width="0.2" height="15.0" fill="rgb(228,40,24)" rx="2" ry="2" />
<text  x="111.40" y="1103.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="110.4" y="1141" width="0.5" height="15.0" fill="rgb(207,192,5)" rx="2" ry="2" />
<text  x="113.43" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1177.8" y="869" width="0.1" height="15.0" fill="rgb(245,3,26)" rx="2" ry="2" />
<text  x="1180.76" y="879.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (5 samples, 0.02%)</title><rect x="266.5" y="533" width="0.2" height="15.0" fill="rgb(239,76,27)" rx="2" ry="2" />
<text  x="269.49" y="543.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..raw..RawTable&lt;T&gt; as core..ops..drop..Drop&gt;::drop (7 samples, 0.02%)</title><rect x="241.4" y="645" width="0.3" height="15.0" fill="rgb(239,229,29)" rx="2" ry="2" />
<text  x="244.41" y="655.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (7 samples, 0.02%)</title><rect x="1066.3" y="805" width="0.3" height="15.0" fill="rgb(236,10,50)" rx="2" ry="2" />
<text  x="1069.33" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="205.0" y="1013" width="0.1" height="15.0" fill="rgb(229,144,7)" rx="2" ry="2" />
<text  x="207.96" y="1023.5" ></text>
</g>
<g >
<title>rustls::client::ClientConfig::set_protocols (30 samples, 0.10%)</title><rect x="999.3" y="869" width="1.1" height="15.0" fill="rgb(252,22,27)" rx="2" ry="2" />
<text  x="1002.32" y="879.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::get_mut (3 samples, 0.01%)</title><rect x="635.9" y="741" width="0.2" height="15.0" fill="rgb(246,37,46)" rx="2" ry="2" />
<text  x="638.95" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="1114.9" y="645" width="0.5" height="15.0" fill="rgb(208,168,27)" rx="2" ry="2" />
<text  x="1117.88" y="655.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..DeserializeSeed&gt;::deserialize (13 samples, 0.04%)</title><rect x="546.4" y="293" width="0.5" height="15.0" fill="rgb(208,8,17)" rx="2" ry="2" />
<text  x="549.37" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="660.0" y="805" width="0.2" height="15.0" fill="rgb(217,45,3)" rx="2" ry="2" />
<text  x="663.05" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="184.4" y="981" width="0.4" height="15.0" fill="rgb(240,76,12)" rx="2" ry="2" />
<text  x="187.42" y="991.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="192.8" y="981" width="0.2" height="15.0" fill="rgb(235,53,45)" rx="2" ry="2" />
<text  x="195.76" y="991.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="76.4" y="1045" width="0.1" height="15.0" fill="rgb(250,226,9)" rx="2" ry="2" />
<text  x="79.38" y="1055.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for alloc..vec..Vec&lt;T&gt;&gt;::serialize (7 samples, 0.02%)</title><rect x="1114.4" y="597" width="0.2" height="15.0" fill="rgb(224,51,49)" rx="2" ry="2" />
<text  x="1117.35" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::context::CONTEXT::__getit (3 samples, 0.01%)</title><rect x="206.6" y="1109" width="0.2" height="15.0" fill="rgb(211,111,47)" rx="2" ry="2" />
<text  x="209.65" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (5 samples, 0.02%)</title><rect x="570.0" y="277" width="0.2" height="15.0" fill="rgb(226,60,51)" rx="2" ry="2" />
<text  x="573.02" y="287.5" ></text>
</g>
<g >
<title>deno::tokio_util::create_basic_runtime (109 samples, 0.35%)</title><rect x="202.1" y="1189" width="4.1" height="15.0" fill="rgb(217,226,21)" rx="2" ry="2" />
<text  x="205.11" y="1199.5" ></text>
</g>
<g >
<title>deno::flags::ca_file_arg (9 samples, 0.03%)</title><rect x="153.5" y="1125" width="0.3" height="15.0" fill="rgb(215,163,38)" rx="2" ry="2" />
<text  x="156.45" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="226.1" y="421" width="0.3" height="15.0" fill="rgb(233,70,32)" rx="2" ry="2" />
<text  x="229.09" y="431.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="18.5" y="949" width="0.3" height="15.0" fill="rgb(207,60,4)" rx="2" ry="2" />
<text  x="21.52" y="959.5" ></text>
</g>
<g >
<title>_&lt;core..str..pattern..CharPredicateSearcher&lt;F&gt; as core..str..pattern..Searcher&gt;::next_reject (3 samples, 0.01%)</title><rect x="89.5" y="1077" width="0.1" height="15.0" fill="rgb(230,216,24)" rx="2" ry="2" />
<text  x="92.48" y="1087.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (117 samples, 0.37%)</title><rect x="91.5" y="1109" width="4.4" height="15.0" fill="rgb(245,228,0)" rx="2" ry="2" />
<text  x="94.50" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (364 samples, 1.16%)</title><rect x="245.3" y="389" width="13.7" height="15.0" fill="rgb(206,36,47)" rx="2" ry="2" />
<text  x="248.32" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="612.9" y="437" width="0.2" height="15.0" fill="rgb(230,39,48)" rx="2" ry="2" />
<text  x="615.86" y="447.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..TextDocument as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="260.7" y="629" width="0.3" height="15.0" fill="rgb(232,221,14)" rx="2" ry="2" />
<text  x="263.71" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (15 samples, 0.05%)</title><rect x="225.8" y="517" width="0.6" height="15.0" fill="rgb(240,0,27)" rx="2" ry="2" />
<text  x="228.83" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="270.8" y="389" width="0.3" height="15.0" fill="rgb(211,77,11)" rx="2" ry="2" />
<text  x="273.85" y="399.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (12 samples, 0.04%)</title><rect x="1178.7" y="869" width="0.4" height="15.0" fill="rgb(246,136,2)" rx="2" ry="2" />
<text  x="1181.66" y="879.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_map (510 samples, 1.62%)</title><rect x="274.3" y="405" width="19.1" height="15.0" fill="rgb(229,32,3)" rx="2" ry="2" />
<text  x="277.26" y="415.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (167 samples, 0.53%)</title><rect x="211.5" y="629" width="6.3" height="15.0" fill="rgb(223,117,2)" rx="2" ry="2" />
<text  x="214.53" y="639.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (21 samples, 0.07%)</title><rect x="164.1" y="1061" width="0.8" height="15.0" fill="rgb(214,162,20)" rx="2" ry="2" />
<text  x="167.11" y="1071.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..raw..RawTable&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="646.6" y="693" width="0.1" height="15.0" fill="rgb(242,14,20)" rx="2" ry="2" />
<text  x="649.57" y="703.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="24.8" y="1077" width="0.2" height="15.0" fill="rgb(239,84,44)" rx="2" ry="2" />
<text  x="27.79" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="119.5" y="1045" width="0.1" height="15.0" fill="rgb(209,207,33)" rx="2" ry="2" />
<text  x="122.51" y="1055.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.05%)</title><rect x="205.1" y="997" width="0.6" height="15.0" fill="rgb(238,105,25)" rx="2" ry="2" />
<text  x="208.15" y="1007.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (45 samples, 0.14%)</title><rect x="137.5" y="1125" width="1.6" height="15.0" fill="rgb(215,166,45)" rx="2" ry="2" />
<text  x="140.46" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="87.1" y="1013" width="0.2" height="15.0" fill="rgb(219,83,46)" rx="2" ry="2" />
<text  x="90.11" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="1116.0" y="597" width="0.4" height="15.0" fill="rgb(245,143,7)" rx="2" ry="2" />
<text  x="1119.00" y="607.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="153.9" y="1109" width="0.3" height="15.0" fill="rgb(221,221,16)" rx="2" ry="2" />
<text  x="156.86" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="588.2" y="661" width="0.2" height="15.0" fill="rgb(212,96,35)" rx="2" ry="2" />
<text  x="591.16" y="671.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (183 samples, 0.58%)</title><rect x="1016.9" y="805" width="6.9" height="15.0" fill="rgb(244,105,11)" rx="2" ry="2" />
<text  x="1019.89" y="815.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="286.7" y="213" width="0.4" height="15.0" fill="rgb(241,175,5)" rx="2" ry="2" />
<text  x="289.65" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (6 samples, 0.02%)</title><rect x="545.9" y="197" width="0.2" height="15.0" fill="rgb(221,178,36)" rx="2" ry="2" />
<text  x="548.88" y="207.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="1061.9" y="805" width="0.2" height="15.0" fill="rgb(216,223,23)" rx="2" ry="2" />
<text  x="1064.87" y="815.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_word_as_str::_{{closure}} (15 samples, 0.05%)</title><rect x="237.1" y="245" width="0.5" height="15.0" fill="rgb(205,227,37)" rx="2" ry="2" />
<text  x="240.06" y="255.5" ></text>
</g>
<g >
<title>deno::flags::run_test_args (532 samples, 1.69%)</title><rect x="143.0" y="1141" width="19.9" height="15.0" fill="rgb(214,39,45)" rx="2" ry="2" />
<text  x="145.98" y="1151.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next (21 samples, 0.07%)</title><rect x="236.8" y="341" width="0.8" height="15.0" fill="rgb(232,59,31)" rx="2" ry="2" />
<text  x="239.83" y="351.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (6 samples, 0.02%)</title><rect x="549.9" y="261" width="0.3" height="15.0" fill="rgb(215,146,5)" rx="2" ry="2" />
<text  x="552.94" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (7 samples, 0.02%)</title><rect x="607.9" y="549" width="0.3" height="15.0" fill="rgb(217,49,3)" rx="2" ry="2" />
<text  x="610.90" y="559.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..SourceFile as core..clone..Clone&gt;::clone (19 samples, 0.06%)</title><rect x="260.7" y="645" width="0.7" height="15.0" fill="rgb(211,214,49)" rx="2" ry="2" />
<text  x="263.67" y="655.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..fmt..Display&gt;::fmt (11 samples, 0.03%)</title><rect x="210.6" y="773" width="0.4" height="15.0" fill="rgb(230,42,29)" rx="2" ry="2" />
<text  x="213.55" y="783.5" ></text>
</g>
<g >
<title>deno::ops::process::init (75 samples, 0.24%)</title><rect x="1058.6" y="901" width="2.8" height="15.0" fill="rgb(236,168,43)" rx="2" ry="2" />
<text  x="1061.60" y="911.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="1176.1" y="901" width="0.2" height="15.0" fill="rgb(237,74,0)" rx="2" ry="2" />
<text  x="1179.07" y="911.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (33 samples, 0.10%)</title><rect x="183.6" y="1013" width="1.2" height="15.0" fill="rgb(232,199,5)" rx="2" ry="2" />
<text  x="186.60" y="1023.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="837.7" y="725" width="0.1" height="15.0" fill="rgb(228,101,54)" rx="2" ry="2" />
<text  x="840.66" y="735.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="114.4" y="1093" width="0.2" height="15.0" fill="rgb(217,120,48)" rx="2" ry="2" />
<text  x="117.37" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.04%)</title><rect x="1057.2" y="837" width="0.5" height="15.0" fill="rgb(206,226,3)" rx="2" ry="2" />
<text  x="1060.25" y="847.5" ></text>
</g>
<g >
<title>rusty_v8::V8::set_flags_from_command_line (51 samples, 0.16%)</title><rect x="1092.5" y="773" width="2.0" height="15.0" fill="rgb(213,158,49)" rx="2" ry="2" />
<text  x="1095.54" y="783.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (10 samples, 0.03%)</title><rect x="1001.5" y="853" width="0.3" height="15.0" fill="rgb(250,57,26)" rx="2" ry="2" />
<text  x="1004.46" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (129 samples, 0.41%)</title><rect x="375.3" y="117" width="4.8" height="15.0" fill="rgb(238,196,31)" rx="2" ry="2" />
<text  x="378.25" y="127.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="65.3" y="1093" width="0.2" height="15.0" fill="rgb(246,175,47)" rx="2" ry="2" />
<text  x="68.34" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (160 samples, 0.51%)</title><rect x="67.0" y="1045" width="6.0" height="15.0" fill="rgb(209,178,27)" rx="2" ry="2" />
<text  x="69.99" y="1055.5" ></text>
</g>
<g >
<title>_&lt;tokio..sync..mutex..MutexGuard&lt;T&gt; as core..ops..drop..Drop&gt;::drop (6 samples, 0.02%)</title><rect x="587.2" y="693" width="0.2" height="15.0" fill="rgb(207,21,47)" rx="2" ry="2" />
<text  x="590.18" y="703.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as core..fmt..Display&gt;::fmt (41 samples, 0.13%)</title><rect x="19.1" y="981" width="1.6" height="15.0" fill="rgb(227,150,31)" rx="2" ry="2" />
<text  x="22.12" y="991.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (22 samples, 0.07%)</title><rect x="667.5" y="741" width="0.8" height="15.0" fill="rgb(227,23,23)" rx="2" ry="2" />
<text  x="670.52" y="751.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (30 samples, 0.10%)</title><rect x="640.3" y="629" width="1.1" height="15.0" fill="rgb(248,228,45)" rx="2" ry="2" />
<text  x="643.26" y="639.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::had_line_break_before_cur (12 samples, 0.04%)</title><rect x="236.1" y="421" width="0.4" height="15.0" fill="rgb(205,205,12)" rx="2" ry="2" />
<text  x="239.08" y="431.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (10 samples, 0.03%)</title><rect x="1173.3" y="885" width="0.4" height="15.0" fill="rgb(221,7,47)" rx="2" ry="2" />
<text  x="1176.33" y="895.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="240.7" y="645" width="0.3" height="15.0" fill="rgb(233,133,37)" rx="2" ry="2" />
<text  x="243.74" y="655.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="100.0" y="1093" width="0.3" height="15.0" fill="rgb(246,102,29)" rx="2" ry="2" />
<text  x="102.99" y="1103.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="586.4" y="677" width="0.4" height="15.0" fill="rgb(244,86,7)" rx="2" ry="2" />
<text  x="589.43" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="64.8" y="1077" width="0.2" height="15.0" fill="rgb(234,166,27)" rx="2" ry="2" />
<text  x="67.81" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (2,368 samples, 7.53%)</title><rect x="840.1" y="677" width="88.9" height="15.0" fill="rgb(254,222,38)" rx="2" ry="2" />
<text  x="843.14" y="687.5" >core::iter..</text>
</g>
<g >
<title>_&lt;core..iter..adapters..Cloned&lt;I&gt; as core..iter..traits..iterator..Iterator&gt;::fold (2,370 samples, 7.54%)</title><rect x="669.1" y="709" width="89.0" height="15.0" fill="rgb(225,126,2)" rx="2" ry="2" />
<text  x="672.10" y="719.5" >_&lt;core..it..</text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (11 samples, 0.03%)</title><rect x="77.1" y="1109" width="0.4" height="15.0" fill="rgb(211,48,40)" rx="2" ry="2" />
<text  x="80.05" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::join (11 samples, 0.03%)</title><rect x="222.8" y="661" width="0.4" height="15.0" fill="rgb(250,122,45)" rx="2" ry="2" />
<text  x="225.79" y="671.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="837.9" y="725" width="0.1" height="15.0" fill="rgb(219,220,15)" rx="2" ry="2" />
<text  x="840.85" y="735.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="244.0" y="661" width="0.3" height="15.0" fill="rgb(248,92,36)" rx="2" ry="2" />
<text  x="246.97" y="671.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (348 samples, 1.11%)</title><rect x="1042.0" y="885" width="13.0" height="15.0" fill="rgb(220,84,24)" rx="2" ry="2" />
<text  x="1044.97" y="895.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (2,368 samples, 7.53%)</title><rect x="669.2" y="677" width="88.9" height="15.0" fill="rgb(248,77,32)" rx="2" ry="2" />
<text  x="672.17" y="687.5" >core::iter..</text>
</g>
<g >
<title>tokio::runtime::blocking::pool::BlockingPool::new (8 samples, 0.03%)</title><rect x="202.6" y="1125" width="0.3" height="15.0" fill="rgb(253,133,51)" rx="2" ry="2" />
<text  x="205.59" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1175.9" y="837" width="0.1" height="15.0" fill="rgb(206,184,11)" rx="2" ry="2" />
<text  x="1178.88" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="1060.7" y="853" width="0.2" height="15.0" fill="rgb(248,2,32)" rx="2" ry="2" />
<text  x="1063.67" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="119.0" y="1045" width="0.2" height="15.0" fill="rgb(229,190,49)" rx="2" ry="2" />
<text  x="122.02" y="1055.5" ></text>
</g>
<g >
<title>deno::flags::ca_file_arg (9 samples, 0.03%)</title><rect x="177.7" y="1125" width="0.3" height="15.0" fill="rgb(220,173,5)" rx="2" ry="2" />
<text  x="180.67" y="1135.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="618.2" y="789" width="0.2" height="15.0" fill="rgb(247,107,22)" rx="2" ry="2" />
<text  x="621.23" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1138.7" y="677" width="0.1" height="15.0" fill="rgb(235,42,29)" rx="2" ry="2" />
<text  x="1141.68" y="687.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="586.7" y="581" width="0.1" height="15.0" fill="rgb(235,102,41)" rx="2" ry="2" />
<text  x="589.65" y="591.5" ></text>
</g>
<g >
<title>deno::worker::Worker::execute_module::_{{closure}} (11,369 samples, 36.17%)</title><rect x="210.2" y="917" width="426.8" height="15.0" fill="rgb(233,180,54)" rx="2" ry="2" />
<text  x="213.21" y="927.5" >deno::worker::Worker::execute_module::_{{closure}}</text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="227.8" y="581" width="0.4" height="15.0" fill="rgb(235,84,54)" rx="2" ry="2" />
<text  x="230.78" y="591.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="1098.2" y="741" width="0.2" height="15.0" fill="rgb(208,167,20)" rx="2" ry="2" />
<text  x="1101.21" y="751.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="188.0" y="1093" width="0.4" height="15.0" fill="rgb(220,122,26)" rx="2" ry="2" />
<text  x="191.03" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (20 samples, 0.06%)</title><rect x="272.9" y="309" width="0.8" height="15.0" fill="rgb(212,9,22)" rx="2" ry="2" />
<text  x="275.91" y="319.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="118.4" y="1093" width="0.2" height="15.0" fill="rgb(218,167,27)" rx="2" ry="2" />
<text  x="121.39" y="1103.5" ></text>
</g>
<g >
<title>core::ops::function::impls::_&lt;impl core..ops..function..FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.04%)</title><rect x="192.5" y="1077" width="0.5" height="15.0" fill="rgb(207,14,3)" rx="2" ry="2" />
<text  x="195.53" y="1087.5" ></text>
</g>
<g >
<title>deno::file_fetcher::TextDocument::to_str (11 samples, 0.03%)</title><rect x="224.0" y="661" width="0.4" height="15.0" fill="rgb(216,53,27)" rx="2" ry="2" />
<text  x="226.96" y="671.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (11,301 samples, 35.95%)</title><rect x="210.3" y="869" width="424.3" height="15.0" fill="rgb(228,14,42)" rx="2" ry="2" />
<text  x="213.33" y="879.5" >_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..fut..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="1033.5" y="757" width="0.3" height="15.0" fill="rgb(250,57,7)" rx="2" ry="2" />
<text  x="1036.52" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="231.1" y="613" width="0.1" height="15.0" fill="rgb(236,30,25)" rx="2" ry="2" />
<text  x="234.05" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (3 samples, 0.01%)</title><rect x="1085.9" y="821" width="0.1" height="15.0" fill="rgb(219,93,31)" rx="2" ry="2" />
<text  x="1088.86" y="831.5" ></text>
</g>
<g >
<title>_&lt;futures_util..stream..futures_unordered..FuturesUnordered&lt;Fut&gt; as futures_core..stream..Stream&gt;::poll_next (9 samples, 0.03%)</title><rect x="209.7" y="821" width="0.3" height="15.0" fill="rgb(228,80,23)" rx="2" ry="2" />
<text  x="212.65" y="831.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::new (5 samples, 0.02%)</title><rect x="1089.3" y="837" width="0.2" height="15.0" fill="rgb(254,81,49)" rx="2" ry="2" />
<text  x="1092.35" y="847.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="191.2" y="1077" width="0.3" height="15.0" fill="rgb(253,100,20)" rx="2" ry="2" />
<text  x="194.22" y="1087.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..TextDocument as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="216.0" y="549" width="0.3" height="15.0" fill="rgb(224,40,26)" rx="2" ry="2" />
<text  x="218.96" y="559.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="1002.2" y="789" width="0.5" height="15.0" fill="rgb(231,178,35)" rx="2" ry="2" />
<text  x="1005.21" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1137.8" y="501" width="0.1" height="15.0" fill="rgb(251,151,15)" rx="2" ry="2" />
<text  x="1140.78" y="511.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="1064.9" y="821" width="0.6" height="15.0" fill="rgb(245,158,37)" rx="2" ry="2" />
<text  x="1067.87" y="831.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..DeserializeSeed&gt;::deserialize (561 samples, 1.78%)</title><rect x="359.0" y="277" width="21.1" height="15.0" fill="rgb(232,13,31)" rx="2" ry="2" />
<text  x="362.03" y="287.5" ></text>
</g>
<g >
<title>clap::app::validator::Validator::validate_blacklist (3 samples, 0.01%)</title><rect x="23.6" y="1077" width="0.1" height="15.0" fill="rgb(209,36,1)" rx="2" ry="2" />
<text  x="26.59" y="1087.5" ></text>
</g>
<g >
<title>_&lt;char as unicode_xid..UnicodeXID&gt;::is_xid_start (4 samples, 0.01%)</title><rect x="238.7" y="325" width="0.1" height="15.0" fill="rgb(227,131,45)" rx="2" ry="2" />
<text  x="241.67" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (26 samples, 0.08%)</title><rect x="1003.2" y="773" width="1.0" height="15.0" fill="rgb(247,97,53)" rx="2" ry="2" />
<text  x="1006.19" y="783.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (64 samples, 0.20%)</title><rect x="1066.6" y="869" width="2.4" height="15.0" fill="rgb(242,180,25)" rx="2" ry="2" />
<text  x="1069.60" y="879.5" ></text>
</g>
<g >
<title>hashbrown::rustc_entry::_&lt;impl hashbrown..map..HashMap&lt;K,V,S&gt;&gt;::rustc_entry (10 samples, 0.03%)</title><rect x="16.3" y="1013" width="0.4" height="15.0" fill="rgb(219,64,16)" rx="2" ry="2" />
<text  x="19.31" y="1023.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="268.9" y="469" width="0.3" height="15.0" fill="rgb(205,201,21)" rx="2" ry="2" />
<text  x="271.93" y="479.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1172.8" y="709" width="0.1" height="15.0" fill="rgb(228,143,43)" rx="2" ry="2" />
<text  x="1175.77" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.02%)</title><rect x="208.7" y="773" width="0.2" height="15.0" fill="rgb(234,187,41)" rx="2" ry="2" />
<text  x="211.68" y="783.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (48 samples, 0.15%)</title><rect x="171.7" y="1013" width="1.8" height="15.0" fill="rgb(222,198,19)" rx="2" ry="2" />
<text  x="174.73" y="1023.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::borrow (8 samples, 0.03%)</title><rect x="207.8" y="837" width="0.3" height="15.0" fill="rgb(210,52,48)" rx="2" ry="2" />
<text  x="210.81" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (360 samples, 1.15%)</title><rect x="245.5" y="357" width="13.5" height="15.0" fill="rgb(233,98,42)" rx="2" ry="2" />
<text  x="248.47" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.01%)</title><rect x="195.4" y="1093" width="0.2" height="15.0" fill="rgb(207,151,22)" rx="2" ry="2" />
<text  x="198.42" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend::_{{closure}} (24 samples, 0.08%)</title><rect x="1174.9" y="805" width="0.9" height="15.0" fill="rgb(254,89,51)" rx="2" ry="2" />
<text  x="1177.91" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve_exact (4 samples, 0.01%)</title><rect x="574.2" y="501" width="0.2" height="15.0" fill="rgb(220,182,35)" rx="2" ry="2" />
<text  x="577.23" y="511.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (6,668 samples, 21.21%)</title><rect x="321.0" y="469" width="250.4" height="15.0" fill="rgb(252,167,28)" rx="2" ry="2" />
<text  x="324.04" y="479.5" >_&lt;core..marker..PhantomData&lt;T&gt; as..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.02%)</title><rect x="78.8" y="1061" width="0.2" height="15.0" fill="rgb(230,4,28)" rx="2" ry="2" />
<text  x="81.78" y="1071.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as core..fmt..Display&gt;::fmt (13 samples, 0.04%)</title><rect x="600.5" y="725" width="0.5" height="15.0" fill="rgb(215,221,46)" rx="2" ry="2" />
<text  x="603.51" y="735.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.04%)</title><rect x="1082.0" y="853" width="0.4" height="15.0" fill="rgb(246,224,41)" rx="2" ry="2" />
<text  x="1084.99" y="863.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (5 samples, 0.02%)</title><rect x="1061.5" y="853" width="0.2" height="15.0" fill="rgb(212,44,29)" rx="2" ry="2" />
<text  x="1064.53" y="863.5" ></text>
</g>
<g >
<title>http::header::value::HeaderValue::from_str (10 samples, 0.03%)</title><rect x="834.6" y="853" width="0.4" height="15.0" fill="rgb(220,86,15)" rx="2" ry="2" />
<text  x="837.58" y="863.5" ></text>
</g>
<g >
<title>_&lt;alloc..collections..btree..map..BTreeMap&lt;K,V&gt; as core..ops..drop..Drop&gt;::drop (8 samples, 0.03%)</title><rect x="22.9" y="997" width="0.3" height="15.0" fill="rgb(240,22,53)" rx="2" ry="2" />
<text  x="25.91" y="1007.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (30 samples, 0.10%)</title><rect x="661.5" y="869" width="1.1" height="15.0" fill="rgb(217,201,13)" rx="2" ry="2" />
<text  x="664.51" y="879.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1080.6" y="789" width="0.2" height="15.0" fill="rgb(224,105,11)" rx="2" ry="2" />
<text  x="1083.64" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="621.0" y="725" width="0.3" height="15.0" fill="rgb(250,45,9)" rx="2" ry="2" />
<text  x="624.04" y="735.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as http..header..map..into_header_name..Sealed&gt;::insert (14 samples, 0.04%)</title><rect x="665.0" y="837" width="0.5" height="15.0" fill="rgb(232,1,5)" rx="2" ry="2" />
<text  x="668.00" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="1061.8" y="837" width="0.3" height="15.0" fill="rgb(225,29,36)" rx="2" ry="2" />
<text  x="1064.79" y="847.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="649.1" y="453" width="0.1" height="15.0" fill="rgb(213,156,34)" rx="2" ry="2" />
<text  x="652.12" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="86.3" y="1061" width="0.1" height="15.0" fill="rgb(254,49,16)" rx="2" ry="2" />
<text  x="89.29" y="1071.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (62 samples, 0.20%)</title><rect x="1001.8" y="869" width="2.4" height="15.0" fill="rgb(246,122,1)" rx="2" ry="2" />
<text  x="1004.84" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve_exact (20 samples, 0.06%)</title><rect x="570.4" y="309" width="0.7" height="15.0" fill="rgb(251,99,51)" rx="2" ry="2" />
<text  x="573.40" y="319.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="24.8" y="1093" width="0.2" height="15.0" fill="rgb(224,74,12)" rx="2" ry="2" />
<text  x="27.75" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="190.8" y="1061" width="0.2" height="15.0" fill="rgb(226,101,49)" rx="2" ry="2" />
<text  x="193.84" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (1,937 samples, 6.16%)</title><rect x="684.8" y="613" width="72.7" height="15.0" fill="rgb(209,41,34)" rx="2" ry="2" />
<text  x="687.75" y="623.5" >_&lt;alloc...</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="25.3" y="1077" width="0.2" height="15.0" fill="rgb(219,92,43)" rx="2" ry="2" />
<text  x="28.32" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="1001.7" y="805" width="0.1" height="15.0" fill="rgb(229,2,46)" rx="2" ry="2" />
<text  x="1004.69" y="815.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (3 samples, 0.01%)</title><rect x="106.2" y="1109" width="0.1" height="15.0" fill="rgb(233,146,34)" rx="2" ry="2" />
<text  x="109.22" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::find (4 samples, 0.01%)</title><rect x="73.4" y="1093" width="0.2" height="15.0" fill="rgb(207,76,46)" rx="2" ry="2" />
<text  x="76.45" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (308 samples, 0.98%)</title><rect x="647.3" y="693" width="11.6" height="15.0" fill="rgb(236,159,27)" rx="2" ry="2" />
<text  x="650.32" y="703.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="269.0" y="453" width="0.2" height="15.0" fill="rgb(219,126,47)" rx="2" ry="2" />
<text  x="271.97" y="463.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="1121.9" y="421" width="0.2" height="15.0" fill="rgb(253,174,33)" rx="2" ry="2" />
<text  x="1124.94" y="431.5" ></text>
</g>
<g >
<title>deno_core::bindings::print (20 samples, 0.06%)</title><rect x="635.7" y="789" width="0.8" height="15.0" fill="rgb(230,17,27)" rx="2" ry="2" />
<text  x="638.72" y="799.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (11 samples, 0.03%)</title><rect x="192.6" y="1061" width="0.4" height="15.0" fill="rgb(207,125,15)" rx="2" ry="2" />
<text  x="195.57" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (10 samples, 0.03%)</title><rect x="294.0" y="341" width="0.4" height="15.0" fill="rgb(217,35,32)" rx="2" ry="2" />
<text  x="297.01" y="351.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="17.7" y="1013" width="0.2" height="15.0" fill="rgb(210,26,36)" rx="2" ry="2" />
<text  x="20.73" y="1023.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="664.6" y="773" width="0.1" height="15.0" fill="rgb(216,166,11)" rx="2" ry="2" />
<text  x="667.59" y="783.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..fmt..Display&gt;::fmt (11 samples, 0.03%)</title><rect x="262.1" y="581" width="0.4" height="15.0" fill="rgb(206,21,38)" rx="2" ry="2" />
<text  x="265.14" y="591.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (50 samples, 0.16%)</title><rect x="583.6" y="533" width="1.9" height="15.0" fill="rgb(231,202,31)" rx="2" ry="2" />
<text  x="586.61" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="128.0" y="997" width="0.1" height="15.0" fill="rgb(247,57,13)" rx="2" ry="2" />
<text  x="130.96" y="1007.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (21 samples, 0.07%)</title><rect x="124.2" y="1077" width="0.8" height="15.0" fill="rgb(244,152,28)" rx="2" ry="2" />
<text  x="127.17" y="1087.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (14 samples, 0.04%)</title><rect x="212.3" y="437" width="0.5" height="15.0" fill="rgb(209,141,39)" rx="2" ry="2" />
<text  x="215.28" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (14 samples, 0.04%)</title><rect x="1115.9" y="629" width="0.5" height="15.0" fill="rgb(250,122,25)" rx="2" ry="2" />
<text  x="1118.85" y="639.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="1061.8" y="853" width="0.3" height="15.0" fill="rgb(208,41,11)" rx="2" ry="2" />
<text  x="1064.75" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (28 samples, 0.09%)</title><rect x="1078.1" y="805" width="1.1" height="15.0" fill="rgb(218,195,8)" rx="2" ry="2" />
<text  x="1081.12" y="815.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::trim_start_matches (4 samples, 0.01%)</title><rect x="186.8" y="1077" width="0.2" height="15.0" fill="rgb(222,105,27)" rx="2" ry="2" />
<text  x="189.83" y="1087.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_cond_expr (155 samples, 0.49%)</title><rect x="233.0" y="533" width="5.8" height="15.0" fill="rgb(209,184,10)" rx="2" ry="2" />
<text  x="236.00" y="543.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_file (261 samples, 0.83%)</title><rect x="590.4" y="709" width="9.8" height="15.0" fill="rgb(220,109,37)" rx="2" ry="2" />
<text  x="593.45" y="719.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (13 samples, 0.04%)</title><rect x="118.1" y="1109" width="0.5" height="15.0" fill="rgb(233,210,5)" rx="2" ry="2" />
<text  x="121.09" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="620.4" y="757" width="0.3" height="15.0" fill="rgb(210,43,33)" rx="2" ry="2" />
<text  x="623.40" y="767.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (16 samples, 0.05%)</title><rect x="838.7" y="661" width="0.6" height="15.0" fill="rgb(219,96,6)" rx="2" ry="2" />
<text  x="841.71" y="671.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (168 samples, 0.53%)</title><rect x="80.5" y="1125" width="6.3" height="15.0" fill="rgb(211,48,17)" rx="2" ry="2" />
<text  x="83.50" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (15 samples, 0.05%)</title><rect x="1072.6" y="773" width="0.6" height="15.0" fill="rgb(208,151,13)" rx="2" ry="2" />
<text  x="1075.64" y="783.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next (8 samples, 0.03%)</title><rect x="236.2" y="357" width="0.3" height="15.0" fill="rgb(208,73,42)" rx="2" ry="2" />
<text  x="239.23" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="136.3" y="1045" width="0.1" height="15.0" fill="rgb(244,167,21)" rx="2" ry="2" />
<text  x="139.26" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="195.2" y="1061" width="0.1" height="15.0" fill="rgb(217,183,33)" rx="2" ry="2" />
<text  x="198.16" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="267.2" y="341" width="0.2" height="15.0" fill="rgb(253,222,30)" rx="2" ry="2" />
<text  x="270.24" y="351.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="97.4" y="1077" width="0.2" height="15.0" fill="rgb(224,68,35)" rx="2" ry="2" />
<text  x="100.40" y="1087.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (14 samples, 0.04%)</title><rect x="173.7" y="1045" width="0.5" height="15.0" fill="rgb(212,6,19)" rx="2" ry="2" />
<text  x="176.69" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="162.8" y="1029" width="0.1" height="15.0" fill="rgb(237,13,52)" rx="2" ry="2" />
<text  x="165.76" y="1039.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg_ref (50 samples, 0.16%)</title><rect x="75.0" y="1125" width="1.9" height="15.0" fill="rgb(222,30,18)" rx="2" ry="2" />
<text  x="78.02" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="588.6" y="597" width="0.2" height="15.0" fill="rgb(224,171,44)" rx="2" ry="2" />
<text  x="591.61" y="607.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (105 samples, 0.33%)</title><rect x="560.7" y="309" width="4.0" height="15.0" fill="rgb(205,146,2)" rx="2" ry="2" />
<text  x="563.75" y="319.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (377 samples, 1.20%)</title><rect x="244.8" y="469" width="14.2" height="15.0" fill="rgb(253,12,54)" rx="2" ry="2" />
<text  x="247.83" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="25.6" y="1045" width="0.2" height="15.0" fill="rgb(246,39,10)" rx="2" ry="2" />
<text  x="28.62" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="233.2" y="437" width="0.2" height="15.0" fill="rgb(246,223,42)" rx="2" ry="2" />
<text  x="236.23" y="447.5" ></text>
</g>
<g >
<title>lazy_static::lazy::Lazy&lt;T&gt;::get::_{{closure}} (15 samples, 0.05%)</title><rect x="1086.7" y="789" width="0.5" height="15.0" fill="rgb(208,57,48)" rx="2" ry="2" />
<text  x="1089.68" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="201.2" y="1029" width="0.2" height="15.0" fill="rgb(235,95,47)" rx="2" ry="2" />
<text  x="204.17" y="1039.5" ></text>
</g>
<g >
<title>rusty_v8::module::_&lt;impl rusty_v8..data..Module&gt;::evaluate (31 samples, 0.10%)</title><rect x="635.5" y="885" width="1.2" height="15.0" fill="rgb(235,44,44)" rx="2" ry="2" />
<text  x="638.50" y="895.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert (16 samples, 0.05%)</title><rect x="1000.6" y="869" width="0.6" height="15.0" fill="rgb(249,1,6)" rx="2" ry="2" />
<text  x="1003.64" y="879.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (18 samples, 0.06%)</title><rect x="227.6" y="629" width="0.6" height="15.0" fill="rgb(205,73,33)" rx="2" ry="2" />
<text  x="230.56" y="639.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="1069.9" y="805" width="0.5" height="15.0" fill="rgb(211,145,11)" rx="2" ry="2" />
<text  x="1072.86" y="815.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="160.6" y="997" width="0.1" height="15.0" fill="rgb(254,158,35)" rx="2" ry="2" />
<text  x="163.58" y="1007.5" ></text>
</g>
<g >
<title>deno::ops::os::init (349 samples, 1.11%)</title><rect x="1041.9" y="901" width="13.1" height="15.0" fill="rgb(207,124,52)" rx="2" ry="2" />
<text  x="1044.93" y="911.5" ></text>
</g>
<g >
<title>clap::app::App::arg (177 samples, 0.56%)</title><rect x="80.2" y="1141" width="6.6" height="15.0" fill="rgb(215,135,20)" rx="2" ry="2" />
<text  x="83.17" y="1151.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (5 samples, 0.02%)</title><rect x="617.4" y="485" width="0.2" height="15.0" fill="rgb(248,141,41)" rx="2" ry="2" />
<text  x="620.40" y="495.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_path (254 samples, 0.81%)</title><rect x="623.8" y="725" width="9.5" height="15.0" fill="rgb(243,228,36)" rx="2" ry="2" />
<text  x="626.78" y="735.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (17 samples, 0.05%)</title><rect x="829.7" y="725" width="0.7" height="15.0" fill="rgb(221,112,33)" rx="2" ry="2" />
<text  x="832.74" y="735.5" ></text>
</g>
<g >
<title>rusty_v8::V8::initialize_platform (5 samples, 0.02%)</title><rect x="1092.4" y="773" width="0.1" height="15.0" fill="rgb(229,170,26)" rx="2" ry="2" />
<text  x="1095.35" y="783.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.04%)</title><rect x="1177.6" y="885" width="0.5" height="15.0" fill="rgb(232,160,24)" rx="2" ry="2" />
<text  x="1180.65" y="895.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="200.1" y="1061" width="0.1" height="15.0" fill="rgb(235,146,17)" rx="2" ry="2" />
<text  x="203.12" y="1071.5" ></text>
</g>
<g >
<title>http::header::map::hash_elem_using (12 samples, 0.04%)</title><rect x="666.5" y="789" width="0.5" height="15.0" fill="rgb(246,145,47)" rx="2" ry="2" />
<text  x="669.51" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (26 samples, 0.08%)</title><rect x="82.7" y="1077" width="1.0" height="15.0" fill="rgb(254,54,53)" rx="2" ry="2" />
<text  x="85.72" y="1087.5" ></text>
</g>
<g >
<title>tokio::runtime::context::enter (26,195 samples, 83.34%)</title><rect x="206.3" y="1157" width="983.4" height="15.0" fill="rgb(208,137,9)" rx="2" ry="2" />
<text  x="209.27" y="1167.5" >tokio::runtime::context::enter</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="613.9" y="549" width="0.3" height="15.0" fill="rgb(217,228,32)" rx="2" ry="2" />
<text  x="616.87" y="559.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="1106.4" y="629" width="0.3" height="15.0" fill="rgb(216,192,33)" rx="2" ry="2" />
<text  x="1109.39" y="639.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (30 samples, 0.10%)</title><rect x="549.7" y="293" width="1.1" height="15.0" fill="rgb(208,30,49)" rx="2" ry="2" />
<text  x="552.71" y="303.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_assignment_expr_base (156 samples, 0.50%)</title><rect x="233.0" y="549" width="5.8" height="15.0" fill="rgb(213,61,28)" rx="2" ry="2" />
<text  x="235.97" y="559.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (7 samples, 0.02%)</title><rect x="118.1" y="1093" width="0.3" height="15.0" fill="rgb(225,36,25)" rx="2" ry="2" />
<text  x="121.12" y="1103.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (3 samples, 0.01%)</title><rect x="230.1" y="581" width="0.1" height="15.0" fill="rgb(206,161,8)" rx="2" ry="2" />
<text  x="233.11" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="119.5" y="1061" width="0.1" height="15.0" fill="rgb(254,44,51)" rx="2" ry="2" />
<text  x="122.47" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="1058.2" y="805" width="0.2" height="15.0" fill="rgb(206,119,15)" rx="2" ry="2" />
<text  x="1061.15" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="130.2" y="1029" width="0.2" height="15.0" fill="rgb(253,58,43)" rx="2" ry="2" />
<text  x="133.25" y="1039.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="588.5" y="661" width="0.3" height="15.0" fill="rgb(250,219,9)" rx="2" ry="2" />
<text  x="591.46" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::calculate_layout (3 samples, 0.01%)</title><rect x="657.8" y="101" width="0.1" height="15.0" fill="rgb(228,64,53)" rx="2" ry="2" />
<text  x="660.80" y="111.5" ></text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for &amp;mut W&gt;::write_all (38 samples, 0.12%)</title><rect x="1164.8" y="485" width="1.5" height="15.0" fill="rgb(238,156,24)" rx="2" ry="2" />
<text  x="1167.85" y="495.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="154.3" y="1077" width="0.2" height="15.0" fill="rgb(227,220,40)" rx="2" ry="2" />
<text  x="157.28" y="1087.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner (19 samples, 0.06%)</title><rect x="237.6" y="405" width="0.7" height="15.0" fill="rgb(206,111,53)" rx="2" ry="2" />
<text  x="240.62" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1173.6" y="821" width="0.1" height="15.0" fill="rgb(215,101,45)" rx="2" ry="2" />
<text  x="1176.56" y="831.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="618.5" y="789" width="0.2" height="15.0" fill="rgb(227,12,12)" rx="2" ry="2" />
<text  x="621.49" y="799.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.03%)</title><rect x="201.5" y="1045" width="0.3" height="15.0" fill="rgb(237,60,30)" rx="2" ry="2" />
<text  x="204.50" y="1055.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="517.8" y="229" width="0.1" height="15.0" fill="rgb(225,213,35)" rx="2" ry="2" />
<text  x="520.80" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="193.0" y="1109" width="0.1" height="15.0" fill="rgb(250,222,0)" rx="2" ry="2" />
<text  x="195.98" y="1119.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="587.8" y="581" width="0.2" height="15.0" fill="rgb(234,22,26)" rx="2" ry="2" />
<text  x="590.78" y="591.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (14 samples, 0.04%)</title><rect x="612.6" y="565" width="0.5" height="15.0" fill="rgb(238,52,54)" rx="2" ry="2" />
<text  x="615.56" y="575.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::state (7 samples, 0.02%)</title><rect x="207.5" y="869" width="0.2" height="15.0" fill="rgb(246,62,45)" rx="2" ry="2" />
<text  x="210.47" y="879.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (18 samples, 0.06%)</title><rect x="1176.9" y="837" width="0.6" height="15.0" fill="rgb(237,48,51)" rx="2" ry="2" />
<text  x="1179.86" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::free_buckets (4 samples, 0.01%)</title><rect x="1028.3" y="709" width="0.2" height="15.0" fill="rgb(205,31,22)" rx="2" ry="2" />
<text  x="1031.30" y="719.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (7 samples, 0.02%)</title><rect x="1176.0" y="917" width="0.3" height="15.0" fill="rgb(222,102,32)" rx="2" ry="2" />
<text  x="1179.03" y="927.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope::with_context (5 samples, 0.02%)</title><rect x="1096.9" y="869" width="0.2" height="15.0" fill="rgb(228,33,37)" rx="2" ry="2" />
<text  x="1099.89" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="225.3" y="373" width="0.2" height="15.0" fill="rgb(205,188,51)" rx="2" ry="2" />
<text  x="228.34" y="383.5" ></text>
</g>
<g >
<title>tokio::util::wake::inc_ref_count (4 samples, 0.01%)</title><rect x="209.8" y="757" width="0.2" height="15.0" fill="rgb(241,198,50)" rx="2" ry="2" />
<text  x="212.84" y="767.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (20 samples, 0.06%)</title><rect x="1001.9" y="853" width="0.8" height="15.0" fill="rgb(212,229,40)" rx="2" ry="2" />
<text  x="1004.91" y="863.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (8 samples, 0.03%)</title><rect x="141.7" y="1109" width="0.3" height="15.0" fill="rgb(224,39,48)" rx="2" ry="2" />
<text  x="144.66" y="1119.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..vec..SpecFromElem&gt;::from_elem (5 samples, 0.02%)</title><rect x="836.8" y="821" width="0.2" height="15.0" fill="rgb(212,51,38)" rx="2" ry="2" />
<text  x="839.84" y="831.5" ></text>
</g>
<g >
<title>deno::ops::idna::init (26 samples, 0.08%)</title><rect x="1034.2" y="901" width="0.9" height="15.0" fill="rgb(205,146,47)" rx="2" ry="2" />
<text  x="1037.16" y="911.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.01%)</title><rect x="831.5" y="901" width="0.1" height="15.0" fill="rgb(245,64,25)" rx="2" ry="2" />
<text  x="834.51" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="115.1" y="997" width="0.1" height="15.0" fill="rgb(236,19,49)" rx="2" ry="2" />
<text  x="118.12" y="1007.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_string (14 samples, 0.04%)</title><rect x="266.8" y="485" width="0.6" height="15.0" fill="rgb(226,162,42)" rx="2" ry="2" />
<text  x="269.83" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="100.1" y="1045" width="0.1" height="15.0" fill="rgb(239,143,48)" rx="2" ry="2" />
<text  x="103.10" y="1055.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (11 samples, 0.03%)</title><rect x="269.9" y="501" width="0.5" height="15.0" fill="rgb(238,35,33)" rx="2" ry="2" />
<text  x="272.94" y="511.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (41 samples, 0.13%)</title><rect x="1092.7" y="741" width="1.5" height="15.0" fill="rgb(224,178,0)" rx="2" ry="2" />
<text  x="1095.69" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (29 samples, 0.09%)</title><rect x="637.5" y="885" width="1.1" height="15.0" fill="rgb(224,35,35)" rx="2" ry="2" />
<text  x="640.52" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="88.5" y="1061" width="0.2" height="15.0" fill="rgb(215,130,40)" rx="2" ry="2" />
<text  x="91.54" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="223.6" y="661" width="0.1" height="15.0" fill="rgb(240,213,33)" rx="2" ry="2" />
<text  x="226.62" y="671.5" ></text>
</g>
<g >
<title>deno::flags::importmap_arg_parse (6 samples, 0.02%)</title><rect x="194.1" y="1141" width="0.2" height="15.0" fill="rgb(219,19,31)" rx="2" ry="2" />
<text  x="197.11" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="212.6" y="373" width="0.2" height="15.0" fill="rgb(226,159,51)" rx="2" ry="2" />
<text  x="215.58" y="383.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (10 samples, 0.03%)</title><rect x="629.6" y="629" width="0.4" height="15.0" fill="rgb(244,135,3)" rx="2" ry="2" />
<text  x="632.64" y="639.5" ></text>
</g>
<g >
<title>deno::tsc::TsCompiler::new (8 samples, 0.03%)</title><rect x="831.8" y="917" width="0.3" height="15.0" fill="rgb(249,134,52)" rx="2" ry="2" />
<text  x="834.77" y="927.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (15 samples, 0.05%)</title><rect x="1110.7" y="549" width="0.6" height="15.0" fill="rgb(241,110,52)" rx="2" ry="2" />
<text  x="1113.71" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 0.01%)</title><rect x="1111.2" y="485" width="0.1" height="15.0" fill="rgb(226,162,9)" rx="2" ry="2" />
<text  x="1114.16" y="495.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (90 samples, 0.29%)</title><rect x="1044.7" y="853" width="3.4" height="15.0" fill="rgb(254,20,28)" rx="2" ry="2" />
<text  x="1047.71" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="20.3" y="901" width="0.1" height="15.0" fill="rgb(209,166,38)" rx="2" ry="2" />
<text  x="23.29" y="911.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..StandardHeader as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="830.9" y="757" width="0.2" height="15.0" fill="rgb(246,71,15)" rx="2" ry="2" />
<text  x="833.87" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (43 samples, 0.14%)</title><rect x="543.8" y="149" width="1.6" height="15.0" fill="rgb(231,167,6)" rx="2" ry="2" />
<text  x="546.82" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="1085.0" y="709" width="0.2" height="15.0" fill="rgb(237,150,49)" rx="2" ry="2" />
<text  x="1088.03" y="719.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.03%)</title><rect x="274.4" y="325" width="0.4" height="15.0" fill="rgb(223,211,11)" rx="2" ry="2" />
<text  x="277.45" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (11 samples, 0.03%)</title><rect x="168.6" y="1093" width="0.4" height="15.0" fill="rgb(246,189,3)" rx="2" ry="2" />
<text  x="171.62" y="1103.5" ></text>
</g>
<g >
<title>deno::global_state::GlobalState::prepare_module_load::_{{closure}} (10,084 samples, 32.08%)</title><rect x="211.2" y="741" width="378.6" height="15.0" fill="rgb(210,177,28)" rx="2" ry="2" />
<text  x="214.19" y="751.5" >deno::global_state::GlobalState::prepare_module_loa..</text>
</g>
<g >
<title>clap::app::App::arg (157 samples, 0.50%)</title><rect x="156.5" y="1109" width="5.9" height="15.0" fill="rgb(221,229,29)" rx="2" ry="2" />
<text  x="159.49" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="243.2" y="549" width="0.2" height="15.0" fill="rgb(231,228,3)" rx="2" ry="2" />
<text  x="246.18" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="1093.4" y="645" width="0.1" height="15.0" fill="rgb(238,170,53)" rx="2" ry="2" />
<text  x="1096.37" y="655.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="14.9" y="1077" width="0.2" height="15.0" fill="rgb(228,143,42)" rx="2" ry="2" />
<text  x="17.92" y="1087.5" ></text>
</g>
<g >
<title>rusty_v8::number::_&lt;impl rusty_v8..data..Integer&gt;::new (4 samples, 0.01%)</title><rect x="1095.0" y="853" width="0.2" height="15.0" fill="rgb(240,135,1)" rx="2" ry="2" />
<text  x="1098.02" y="863.5" ></text>
</g>
<g >
<title>serde_json::ser::to_vec (862 samples, 2.74%)</title><rect x="1138.6" y="693" width="32.4" height="15.0" fill="rgb(236,122,1)" rx="2" ry="2" />
<text  x="1141.64" y="703.5" >se..</text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="213.3" y="517" width="0.4" height="15.0" fill="rgb(211,120,14)" rx="2" ry="2" />
<text  x="216.29" y="527.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (314 samples, 1.00%)</title><rect x="275.4" y="373" width="11.8" height="15.0" fill="rgb(237,114,46)" rx="2" ry="2" />
<text  x="278.39" y="383.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (165 samples, 0.52%)</title><rect x="278.2" y="293" width="6.2" height="15.0" fill="rgb(252,76,43)" rx="2" ry="2" />
<text  x="281.20" y="303.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_new_expr (17 samples, 0.05%)</title><rect x="233.6" y="341" width="0.7" height="15.0" fill="rgb(247,227,44)" rx="2" ry="2" />
<text  x="236.64" y="351.5" ></text>
</g>
<g >
<title>_&lt;&amp;http..header..name..HeaderName as http..header..map..into_header_name..Sealed&gt;::insert (15 samples, 0.05%)</title><rect x="830.6" y="853" width="0.6" height="15.0" fill="rgb(254,96,4)" rx="2" ry="2" />
<text  x="833.64" y="863.5" ></text>
</g>
<g >
<title>serde_json::value::to_value (76 samples, 0.24%)</title><rect x="1135.1" y="613" width="2.8" height="15.0" fill="rgb(249,117,32)" rx="2" ry="2" />
<text  x="1138.08" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="664.1" y="805" width="0.1" height="15.0" fill="rgb(234,43,21)" rx="2" ry="2" />
<text  x="667.07" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_desugared (21 samples, 0.07%)</title><rect x="214.9" y="453" width="0.8" height="15.0" fill="rgb(246,107,28)" rx="2" ry="2" />
<text  x="217.94" y="463.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolateState::dispatch_op (1,868 samples, 5.94%)</title><rect x="1100.9" y="757" width="70.1" height="15.0" fill="rgb(236,193,28)" rx="2" ry="2" />
<text  x="1103.87" y="767.5" >deno_co..</text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="646.7" y="789" width="0.2" height="15.0" fill="rgb(253,156,52)" rx="2" ry="2" />
<text  x="649.72" y="799.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert2 (13 samples, 0.04%)</title><rect x="836.1" y="821" width="0.5" height="15.0" fill="rgb(228,30,3)" rx="2" ry="2" />
<text  x="839.12" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (20 samples, 0.06%)</title><rect x="658.1" y="533" width="0.8" height="15.0" fill="rgb(244,170,25)" rx="2" ry="2" />
<text  x="661.13" y="543.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (20 samples, 0.06%)</title><rect x="227.5" y="645" width="0.7" height="15.0" fill="rgb(205,150,52)" rx="2" ry="2" />
<text  x="230.48" y="655.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once::_{{closure}} (12 samples, 0.04%)</title><rect x="74.3" y="1125" width="0.4" height="15.0" fill="rgb(212,164,18)" rx="2" ry="2" />
<text  x="77.27" y="1135.5" ></text>
</g>
<g >
<title>rustls::anchors::RootCertStore::add_server_trust_anchors (1,855 samples, 5.90%)</title><rect x="929.3" y="869" width="69.6" height="15.0" fill="rgb(251,197,28)" rx="2" ry="2" />
<text  x="932.30" y="879.5" >rustls:..</text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="86.9" y="1109" width="0.4" height="15.0" fill="rgb(233,5,0)" rx="2" ry="2" />
<text  x="89.89" y="1119.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="119.7" y="1125" width="0.3" height="15.0" fill="rgb(238,207,37)" rx="2" ry="2" />
<text  x="122.74" y="1135.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_str (431 samples, 1.37%)</title><rect x="454.0" y="181" width="16.2" height="15.0" fill="rgb(226,162,24)" rx="2" ry="2" />
<text  x="456.98" y="191.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once::_{{closure}} (8 samples, 0.03%)</title><rect x="234.8" y="229" width="0.3" height="15.0" fill="rgb(238,147,27)" rx="2" ry="2" />
<text  x="237.80" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="243.5" y="597" width="0.1" height="15.0" fill="rgb(227,219,27)" rx="2" ry="2" />
<text  x="246.48" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="197.9" y="1077" width="0.2" height="15.0" fill="rgb(237,216,5)" rx="2" ry="2" />
<text  x="200.94" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="1175.6" y="709" width="0.2" height="15.0" fill="rgb(208,28,22)" rx="2" ry="2" />
<text  x="1178.58" y="719.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_map (8,070 samples, 25.68%)</title><rect x="270.5" y="517" width="303.0" height="15.0" fill="rgb(239,11,29)" rx="2" ry="2" />
<text  x="273.55" y="527.5" >_&lt;serde_json..value..de..&lt;impl serde..de..</text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::with_buf (16 samples, 0.05%)</title><rect x="231.6" y="501" width="0.6" height="15.0" fill="rgb(221,147,23)" rx="2" ry="2" />
<text  x="234.58" y="511.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.06%)</title><rect x="221.6" y="517" width="0.8" height="15.0" fill="rgb(211,25,34)" rx="2" ry="2" />
<text  x="224.63" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="222.9" y="597" width="0.2" height="15.0" fill="rgb(251,62,32)" rx="2" ry="2" />
<text  x="225.94" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (9 samples, 0.03%)</title><rect x="1121.8" y="485" width="0.3" height="15.0" fill="rgb(251,208,54)" rx="2" ry="2" />
<text  x="1124.79" y="495.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (29 samples, 0.09%)</title><rect x="829.3" y="837" width="1.1" height="15.0" fill="rgb(234,214,49)" rx="2" ry="2" />
<text  x="832.29" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="202.7" y="1077" width="0.1" height="15.0" fill="rgb(221,102,46)" rx="2" ry="2" />
<text  x="205.71" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.05%)</title><rect x="1165.6" y="437" width="0.7" height="15.0" fill="rgb(224,50,7)" rx="2" ry="2" />
<text  x="1168.63" y="447.5" ></text>
</g>
<g >
<title>deno_core::shared_queue::SharedQueue::new (20 samples, 0.06%)</title><rect x="1088.3" y="837" width="0.8" height="15.0" fill="rgb(227,148,29)" rx="2" ry="2" />
<text  x="1091.33" y="847.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (475 samples, 1.51%)</title><rect x="362.3" y="245" width="17.8" height="15.0" fill="rgb(246,197,42)" rx="2" ry="2" />
<text  x="365.26" y="255.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="136.2" y="1077" width="0.2" height="15.0" fill="rgb(249,149,41)" rx="2" ry="2" />
<text  x="139.18" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="129.9" y="1077" width="0.5" height="15.0" fill="rgb(225,84,54)" rx="2" ry="2" />
<text  x="132.91" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (17 samples, 0.05%)</title><rect x="1184.8" y="725" width="0.6" height="15.0" fill="rgb(234,219,29)" rx="2" ry="2" />
<text  x="1187.78" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="575.3" y="629" width="0.1" height="15.0" fill="rgb(246,216,3)" rx="2" ry="2" />
<text  x="578.28" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (24 samples, 0.08%)</title><rect x="164.0" y="1077" width="0.9" height="15.0" fill="rgb(237,155,46)" rx="2" ry="2" />
<text  x="167.00" y="1087.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (56 samples, 0.18%)</title><rect x="546.9" y="309" width="2.1" height="15.0" fill="rgb(236,152,46)" rx="2" ry="2" />
<text  x="549.90" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="88.8" y="1077" width="0.2" height="15.0" fill="rgb(248,136,50)" rx="2" ry="2" />
<text  x="91.84" y="1087.5" ></text>
</g>
<g >
<title>url::ParseOptions::parse (276 samples, 0.88%)</title><rect x="601.1" y="725" width="10.4" height="15.0" fill="rgb(226,198,35)" rx="2" ry="2" />
<text  x="604.11" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1112.7" y="437" width="0.1" height="15.0" fill="rgb(247,28,29)" rx="2" ry="2" />
<text  x="1115.70" y="447.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::get (10 samples, 0.03%)</title><rect x="63.9" y="1093" width="0.4" height="15.0" fill="rgb(244,114,22)" rx="2" ry="2" />
<text  x="66.91" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..collections..btree..map..Values&lt;K,V&gt; as core..iter..traits..iterator..Iterator&gt;::next (6 samples, 0.02%)</title><rect x="20.7" y="1013" width="0.2" height="15.0" fill="rgb(251,183,23)" rx="2" ry="2" />
<text  x="23.66" y="1023.5" ></text>
</g>
<g >
<title>url::Url::to_file_path (50 samples, 0.16%)</title><rect x="264.4" y="613" width="1.8" height="15.0" fill="rgb(211,7,4)" rx="2" ry="2" />
<text  x="267.35" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="139.8" y="1093" width="0.2" height="15.0" fill="rgb(207,187,18)" rx="2" ry="2" />
<text  x="142.78" y="1103.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::entry (9 samples, 0.03%)</title><rect x="15.6" y="1045" width="0.3" height="15.0" fill="rgb(222,157,33)" rx="2" ry="2" />
<text  x="18.56" y="1055.5" ></text>
</g>
<g >
<title>rusty_v8::uint8_array::_&lt;impl rusty_v8..data..Uint8Array&gt;::new (3 samples, 0.01%)</title><rect x="1100.2" y="741" width="0.1" height="15.0" fill="rgb(210,224,47)" rx="2" ry="2" />
<text  x="1103.24" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="111.1" y="1045" width="0.2" height="15.0" fill="rgb(209,37,8)" rx="2" ry="2" />
<text  x="114.14" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="77.9" y="1029" width="0.1" height="15.0" fill="rgb(231,4,25)" rx="2" ry="2" />
<text  x="80.88" y="1039.5" ></text>
</g>
<g >
<title>_&lt;std..sync..mutex..Mutex&lt;T&gt; as core..default..Default&gt;::default (6 samples, 0.02%)</title><rect x="663.1" y="869" width="0.2" height="15.0" fill="rgb(233,156,17)" rx="2" ry="2" />
<text  x="666.05" y="879.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (50 samples, 0.16%)</title><rect x="1133.2" y="549" width="1.9" height="15.0" fill="rgb(237,188,41)" rx="2" ry="2" />
<text  x="1136.20" y="559.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="1062.9" y="773" width="0.1" height="15.0" fill="rgb(240,182,7)" rx="2" ry="2" />
<text  x="1065.88" y="783.5" ></text>
</g>
<g >
<title>_&lt;tokio..runtime..blocking..pool..BlockingPool as core..ops..drop..Drop&gt;::drop (26 samples, 0.08%)</title><rect x="198.5" y="1157" width="0.9" height="15.0" fill="rgb(236,121,9)" rx="2" ry="2" />
<text  x="201.46" y="1167.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="660.7" y="837" width="0.3" height="15.0" fill="rgb(245,191,28)" rx="2" ry="2" />
<text  x="663.69" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="12.5" y="1045" width="0.2" height="15.0" fill="rgb(217,224,49)" rx="2" ry="2" />
<text  x="15.48" y="1055.5" ></text>
</g>
<g >
<title>deno::ops::net::init (135 samples, 0.43%)</title><rect x="1036.9" y="901" width="5.0" height="15.0" fill="rgb(206,189,14)" rx="2" ry="2" />
<text  x="1039.86" y="911.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_str (12 samples, 0.04%)</title><rect x="274.4" y="357" width="0.4" height="15.0" fill="rgb(227,91,21)" rx="2" ry="2" />
<text  x="277.37" y="367.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="139.8" y="1077" width="0.2" height="15.0" fill="rgb(214,180,53)" rx="2" ry="2" />
<text  x="142.82" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="259.6" y="581" width="0.1" height="15.0" fill="rgb(242,76,47)" rx="2" ry="2" />
<text  x="262.62" y="591.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (12 samples, 0.04%)</title><rect x="173.8" y="1029" width="0.4" height="15.0" fill="rgb(210,28,3)" rx="2" ry="2" />
<text  x="176.76" y="1039.5" ></text>
</g>
<g >
<title>deno::ops::dispatch_json::json_op::_{{closure}}::_{{closure}} (356 samples, 1.13%)</title><rect x="1101.2" y="693" width="13.4" height="15.0" fill="rgb(252,161,39)" rx="2" ry="2" />
<text  x="1104.25" y="703.5" ></text>
</g>
<g >
<title>_&lt;swc_ecma_parser..parser..expr..verifier..Verifier as swc_ecma_visit..Visit&gt;::visit_expr (7 samples, 0.02%)</title><rect x="238.9" y="565" width="0.2" height="15.0" fill="rgb(225,78,45)" rx="2" ry="2" />
<text  x="241.86" y="575.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (42 samples, 0.13%)</title><rect x="19.1" y="997" width="1.6" height="15.0" fill="rgb(254,91,10)" rx="2" ry="2" />
<text  x="22.09" y="1007.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="273.4" y="261" width="0.3" height="15.0" fill="rgb(241,96,25)" rx="2" ry="2" />
<text  x="276.36" y="271.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (16 samples, 0.05%)</title><rect x="596.5" y="597" width="0.6" height="15.0" fill="rgb(210,107,1)" rx="2" ry="2" />
<text  x="599.49" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (36 samples, 0.11%)</title><rect x="1046.7" y="757" width="1.4" height="15.0" fill="rgb(233,193,45)" rx="2" ry="2" />
<text  x="1049.74" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (80 samples, 0.25%)</title><rect x="1010.0" y="821" width="3.0" height="15.0" fill="rgb(245,157,32)" rx="2" ry="2" />
<text  x="1012.98" y="831.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..ser..SerializeMap as serde..ser..SerializeMap&gt;::serialize_value (210 samples, 0.67%)</title><rect x="1130.0" y="629" width="7.9" height="15.0" fill="rgb(217,73,30)" rx="2" ry="2" />
<text  x="1133.04" y="639.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (82 samples, 0.26%)</title><rect x="163.5" y="1125" width="3.1" height="15.0" fill="rgb(243,121,14)" rx="2" ry="2" />
<text  x="166.47" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (6 samples, 0.02%)</title><rect x="665.7" y="837" width="0.2" height="15.0" fill="rgb(214,38,1)" rx="2" ry="2" />
<text  x="668.72" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="218.6" y="581" width="0.2" height="15.0" fill="rgb(235,190,5)" rx="2" ry="2" />
<text  x="221.59" y="591.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (18 samples, 0.06%)</title><rect x="116.8" y="1077" width="0.6" height="15.0" fill="rgb(244,167,20)" rx="2" ry="2" />
<text  x="119.77" y="1087.5" ></text>
</g>
<g >
<title>core::iter::adapters::process_results (20 samples, 0.06%)</title><rect x="1099.3" y="725" width="0.7" height="15.0" fill="rgb(235,59,44)" rx="2" ry="2" />
<text  x="1102.26" y="735.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (20 samples, 0.06%)</title><rect x="1033.1" y="853" width="0.7" height="15.0" fill="rgb(238,53,34)" rx="2" ry="2" />
<text  x="1036.07" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (59 samples, 0.19%)</title><rect x="608.9" y="613" width="2.2" height="15.0" fill="rgb(218,145,54)" rx="2" ry="2" />
<text  x="611.92" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1086.3" y="837" width="0.1" height="15.0" fill="rgb(241,116,41)" rx="2" ry="2" />
<text  x="1089.27" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="24.0" y="997" width="0.1" height="15.0" fill="rgb(230,160,10)" rx="2" ry="2" />
<text  x="27.00" y="1007.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (4 samples, 0.01%)</title><rect x="76.7" y="1093" width="0.2" height="15.0" fill="rgb(251,198,8)" rx="2" ry="2" />
<text  x="79.71" y="1103.5" ></text>
</g>
<g >
<title>_&lt;serde..de..impls..StringVisitor as serde..de..Visitor&gt;::visit_str (36 samples, 0.11%)</title><rect x="272.3" y="373" width="1.4" height="15.0" fill="rgb(240,192,39)" rx="2" ry="2" />
<text  x="275.31" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="548.8" y="101" width="0.2" height="15.0" fill="rgb(233,19,34)" rx="2" ry="2" />
<text  x="551.81" y="111.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner (11 samples, 0.03%)</title><rect x="238.4" y="437" width="0.4" height="15.0" fill="rgb(208,89,43)" rx="2" ry="2" />
<text  x="241.41" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="1068.4" y="757" width="0.2" height="15.0" fill="rgb(224,74,33)" rx="2" ry="2" />
<text  x="1071.44" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="20.5" y="885" width="0.2" height="15.0" fill="rgb(230,114,12)" rx="2" ry="2" />
<text  x="23.55" y="895.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope&lt;()&gt;::cast_local (4 samples, 0.01%)</title><rect x="1179.8" y="869" width="0.2" height="15.0" fill="rgb(239,122,37)" rx="2" ry="2" />
<text  x="1182.83" y="879.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (24 samples, 0.08%)</title><rect x="1176.6" y="869" width="0.9" height="15.0" fill="rgb(237,37,32)" rx="2" ry="2" />
<text  x="1179.63" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="136.6" y="1109" width="0.2" height="15.0" fill="rgb(218,156,40)" rx="2" ry="2" />
<text  x="139.63" y="1119.5" ></text>
</g>
<g >
<title>deno_core::bindings::recv (9 samples, 0.03%)</title><rect x="1098.7" y="773" width="0.3" height="15.0" fill="rgb(213,80,22)" rx="2" ry="2" />
<text  x="1101.70" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1189.4" y="821" width="0.1" height="15.0" fill="rgb(243,186,3)" rx="2" ry="2" />
<text  x="1192.40" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (30 samples, 0.10%)</title><rect x="616.2" y="485" width="1.2" height="15.0" fill="rgb(223,57,12)" rx="2" ry="2" />
<text  x="619.24" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="1003.2" y="757" width="0.3" height="15.0" fill="rgb(242,175,3)" rx="2" ry="2" />
<text  x="1006.23" y="767.5" ></text>
</g>
<g >
<title>tokio::fs::file::File::from_std (18 samples, 0.06%)</title><rect x="833.6" y="885" width="0.7" height="15.0" fill="rgb(248,36,53)" rx="2" ry="2" />
<text  x="836.65" y="895.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.02%)</title><rect x="1058.4" y="853" width="0.2" height="15.0" fill="rgb(239,5,23)" rx="2" ry="2" />
<text  x="1061.41" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="206.1" y="1045" width="0.1" height="15.0" fill="rgb(216,203,0)" rx="2" ry="2" />
<text  x="209.08" y="1055.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (18 samples, 0.06%)</title><rect x="1080.1" y="869" width="0.7" height="15.0" fill="rgb(218,205,47)" rx="2" ry="2" />
<text  x="1083.08" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="321.6" y="229" width="0.1" height="15.0" fill="rgb(246,170,47)" rx="2" ry="2" />
<text  x="324.60" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="617.9" y="821" width="0.1" height="15.0" fill="rgb(223,22,14)" rx="2" ry="2" />
<text  x="620.85" y="831.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (38 samples, 0.12%)</title><rect x="1002.7" y="837" width="1.5" height="15.0" fill="rgb(228,99,25)" rx="2" ry="2" />
<text  x="1005.74" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="121.2" y="1093" width="0.2" height="15.0" fill="rgb(215,183,34)" rx="2" ry="2" />
<text  x="124.20" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="634.3" y="789" width="0.2" height="15.0" fill="rgb(210,209,30)" rx="2" ry="2" />
<text  x="637.30" y="799.5" ></text>
</g>
<g >
<title>_&lt;rusty_v8..isolate..OwnedIsolate as core..ops..drop..Drop&gt;::drop (337 samples, 1.07%)</title><rect x="646.2" y="837" width="12.7" height="15.0" fill="rgb(226,105,21)" rx="2" ry="2" />
<text  x="649.23" y="847.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (24 samples, 0.08%)</title><rect x="175.1" y="1045" width="0.9" height="15.0" fill="rgb(224,93,54)" rx="2" ry="2" />
<text  x="178.11" y="1055.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (6,667 samples, 21.21%)</title><rect x="321.1" y="453" width="250.3" height="15.0" fill="rgb(210,208,49)" rx="2" ry="2" />
<text  x="324.08" y="463.5" >serde_json::value::de::_&lt;impl ser..</text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="166.4" y="1061" width="0.2" height="15.0" fill="rgb(243,27,30)" rx="2" ry="2" />
<text  x="169.44" y="1071.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="110.5" y="1109" width="0.4" height="15.0" fill="rgb(245,59,45)" rx="2" ry="2" />
<text  x="113.50" y="1119.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (12 samples, 0.04%)</title><rect x="114.1" y="1109" width="0.5" height="15.0" fill="rgb(217,26,30)" rx="2" ry="2" />
<text  x="117.11" y="1119.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.05%)</title><rect x="1099.4" y="693" width="0.6" height="15.0" fill="rgb(241,221,9)" rx="2" ry="2" />
<text  x="1102.41" y="703.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (9 samples, 0.03%)</title><rect x="587.7" y="613" width="0.3" height="15.0" fill="rgb(205,220,5)" rx="2" ry="2" />
<text  x="590.70" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="97.7" y="1077" width="0.2" height="15.0" fill="rgb(252,128,40)" rx="2" ry="2" />
<text  x="100.74" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1096.7" y="821" width="0.2" height="15.0" fill="rgb(230,167,2)" rx="2" ry="2" />
<text  x="1099.74" y="831.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (108 samples, 0.34%)</title><rect x="169.5" y="1077" width="4.0" height="15.0" fill="rgb(207,205,49)" rx="2" ry="2" />
<text  x="172.48" y="1087.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="261.1" y="597" width="0.3" height="15.0" fill="rgb(238,218,17)" rx="2" ry="2" />
<text  x="264.08" y="607.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..raw..RawTable&lt;T&gt; as core..ops..drop..Drop&gt;::drop (9 samples, 0.03%)</title><rect x="657.6" y="133" width="0.3" height="15.0" fill="rgb(241,220,23)" rx="2" ry="2" />
<text  x="660.57" y="143.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (9 samples, 0.03%)</title><rect x="1041.4" y="821" width="0.3" height="15.0" fill="rgb(240,107,11)" rx="2" ry="2" />
<text  x="1044.41" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="91.4" y="1077" width="0.1" height="15.0" fill="rgb(222,41,33)" rx="2" ry="2" />
<text  x="94.35" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="834.2" y="805" width="0.1" height="15.0" fill="rgb(244,109,4)" rx="2" ry="2" />
<text  x="837.21" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::find (3 samples, 0.01%)</title><rect x="217.0" y="501" width="0.2" height="15.0" fill="rgb(223,95,27)" rx="2" ry="2" />
<text  x="220.05" y="511.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_map_fold::_{{closure}} (16 samples, 0.05%)</title><rect x="22.1" y="837" width="0.6" height="15.0" fill="rgb(218,23,35)" rx="2" ry="2" />
<text  x="25.05" y="847.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (15 samples, 0.05%)</title><rect x="166.0" y="1109" width="0.6" height="15.0" fill="rgb(219,126,18)" rx="2" ry="2" />
<text  x="168.99" y="1119.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (10 samples, 0.03%)</title><rect x="193.3" y="1125" width="0.4" height="15.0" fill="rgb(214,39,28)" rx="2" ry="2" />
<text  x="196.28" y="1135.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (59 samples, 0.19%)</title><rect x="163.7" y="1109" width="2.3" height="15.0" fill="rgb(251,159,46)" rx="2" ry="2" />
<text  x="166.74" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="103.5" y="1061" width="0.2" height="15.0" fill="rgb(223,132,42)" rx="2" ry="2" />
<text  x="106.52" y="1071.5" ></text>
</g>
<g >
<title>ring::digest::Context::new (3 samples, 0.01%)</title><rect x="223.8" y="661" width="0.1" height="15.0" fill="rgb(221,162,32)" rx="2" ry="2" />
<text  x="226.80" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="829.4" y="789" width="0.1" height="15.0" fill="rgb(211,7,24)" rx="2" ry="2" />
<text  x="832.40" y="799.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..DeserializeSeed&gt;::deserialize (13 samples, 0.04%)</title><rect x="321.2" y="389" width="0.5" height="15.0" fill="rgb(251,37,17)" rx="2" ry="2" />
<text  x="324.23" y="399.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..Visitor&gt;::visit_str (389 samples, 1.24%)</title><rect x="365.5" y="213" width="14.6" height="15.0" fill="rgb(211,149,1)" rx="2" ry="2" />
<text  x="368.49" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="1070.1" y="757" width="0.3" height="15.0" fill="rgb(250,61,14)" rx="2" ry="2" />
<text  x="1073.09" y="767.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Enumerate&lt;I&gt; as core..iter..traits..iterator..Iterator&gt;::next (3 samples, 0.01%)</title><rect x="1164.5" y="501" width="0.1" height="15.0" fill="rgb(218,212,22)" rx="2" ry="2" />
<text  x="1167.47" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="629.9" y="581" width="0.1" height="15.0" fill="rgb(253,68,30)" rx="2" ry="2" />
<text  x="632.87" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (197 samples, 0.63%)</title><rect x="65.6" y="1125" width="7.4" height="15.0" fill="rgb(233,123,47)" rx="2" ry="2" />
<text  x="68.60" y="1135.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="24.8" y="1061" width="0.2" height="15.0" fill="rgb(252,95,38)" rx="2" ry="2" />
<text  x="27.83" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="1186.1" y="821" width="0.2" height="15.0" fill="rgb(238,148,32)" rx="2" ry="2" />
<text  x="1189.13" y="831.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..fmt..Display&gt;::fmt (22 samples, 0.07%)</title><rect x="212.0" y="501" width="0.8" height="15.0" fill="rgb(227,0,34)" rx="2" ry="2" />
<text  x="214.98" y="511.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.03%)</title><rect x="268.0" y="581" width="0.3" height="15.0" fill="rgb(241,124,1)" rx="2" ry="2" />
<text  x="270.95" y="591.5" ></text>
</g>
<g >
<title>_&lt;deno..state..State as deno_core..modules..ModuleLoader&gt;::resolve (279 samples, 0.89%)</title><rect x="601.0" y="773" width="10.5" height="15.0" fill="rgb(238,76,16)" rx="2" ry="2" />
<text  x="603.99" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="274.6" y="277" width="0.2" height="15.0" fill="rgb(208,28,48)" rx="2" ry="2" />
<text  x="277.56" y="287.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (604 samples, 1.92%)</title><rect x="473.7" y="261" width="22.6" height="15.0" fill="rgb(218,199,11)" rx="2" ry="2" />
<text  x="476.65" y="271.5" >_..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="634.4" y="741" width="0.1" height="15.0" fill="rgb(241,84,28)" rx="2" ry="2" />
<text  x="637.41" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (35 samples, 0.11%)</title><rect x="759.0" y="853" width="1.3" height="15.0" fill="rgb(248,201,37)" rx="2" ry="2" />
<text  x="761.97" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="226.0" y="453" width="0.4" height="15.0" fill="rgb(237,158,12)" rx="2" ry="2" />
<text  x="229.02" y="463.5" ></text>
</g>
<g >
<title>tokio::runtime::Runtime::block_on (26,197 samples, 83.35%)</title><rect x="206.2" y="1189" width="983.5" height="15.0" fill="rgb(245,180,21)" rx="2" ry="2" />
<text  x="209.20" y="1199.5" >tokio::runtime::Runtime::block_on</text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..ser..Serializer&lt;W,F&gt; as serde..ser..Serializer&gt;::serialize_u32 (13 samples, 0.04%)</title><rect x="1170.5" y="565" width="0.5" height="15.0" fill="rgb(236,97,26)" rx="2" ry="2" />
<text  x="1173.52" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (7 samples, 0.02%)</title><rect x="200.0" y="1125" width="0.2" height="15.0" fill="rgb(209,189,40)" rx="2" ry="2" />
<text  x="202.97" y="1135.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="21.2" y="1013" width="0.2" height="15.0" fill="rgb(217,68,51)" rx="2" ry="2" />
<text  x="24.19" y="1023.5" ></text>
</g>
<g >
<title>deno::flags::run_test_args_parse (136 samples, 0.43%)</title><rect x="193.2" y="1157" width="5.1" height="15.0" fill="rgb(210,17,7)" rx="2" ry="2" />
<text  x="196.17" y="1167.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (47 samples, 0.15%)</title><rect x="10.2" y="1189" width="1.8" height="15.0" fill="rgb(241,83,32)" rx="2" ry="2" />
<text  x="13.23" y="1199.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..SourceFileFetcher as core..clone..Clone&gt;::clone (20 samples, 0.06%)</title><rect x="586.0" y="725" width="0.8" height="15.0" fill="rgb(220,0,7)" rx="2" ry="2" />
<text  x="589.02" y="735.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (15 samples, 0.05%)</title><rect x="178.8" y="1093" width="0.6" height="15.0" fill="rgb(251,120,22)" rx="2" ry="2" />
<text  x="181.83" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (18 samples, 0.06%)</title><rect x="1040.3" y="741" width="0.7" height="15.0" fill="rgb(206,65,26)" rx="2" ry="2" />
<text  x="1043.28" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="665.6" y="837" width="0.1" height="15.0" fill="rgb(213,99,14)" rx="2" ry="2" />
<text  x="668.57" y="847.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="97.3" y="1125" width="0.3" height="15.0" fill="rgb(210,157,18)" rx="2" ry="2" />
<text  x="100.29" y="1135.5" ></text>
</g>
<g >
<title>url::parser::Parser::file_host (7 samples, 0.02%)</title><rect x="590.5" y="677" width="0.3" height="15.0" fill="rgb(240,96,14)" rx="2" ry="2" />
<text  x="593.52" y="687.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (9 samples, 0.03%)</title><rect x="77.1" y="1077" width="0.4" height="15.0" fill="rgb(253,48,14)" rx="2" ry="2" />
<text  x="80.13" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="623.7" y="581" width="0.1" height="15.0" fill="rgb(245,34,41)" rx="2" ry="2" />
<text  x="626.67" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (129 samples, 0.41%)</title><rect x="540.6" y="181" width="4.8" height="15.0" fill="rgb(217,160,35)" rx="2" ry="2" />
<text  x="543.59" y="191.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="831.9" y="869" width="0.2" height="15.0" fill="rgb(213,226,54)" rx="2" ry="2" />
<text  x="834.88" y="879.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="88.1" y="1125" width="0.3" height="15.0" fill="rgb(242,133,28)" rx="2" ry="2" />
<text  x="91.05" y="1135.5" ></text>
</g>
<g >
<title>deno::disk_cache::DiskCache::get_cache_filename_with_extension (50 samples, 0.16%)</title><rect x="615.7" y="565" width="1.9" height="15.0" fill="rgb(206,126,5)" rx="2" ry="2" />
<text  x="618.71" y="575.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::State::is_expr_allowed_on_next (7 samples, 0.02%)</title><rect x="237.8" y="325" width="0.3" height="15.0" fill="rgb(206,219,38)" rx="2" ry="2" />
<text  x="240.81" y="335.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (5 samples, 0.02%)</title><rect x="20.0" y="917" width="0.2" height="15.0" fill="rgb(250,196,27)" rx="2" ry="2" />
<text  x="22.99" y="927.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.04%)</title><rect x="176.9" y="1013" width="0.5" height="15.0" fill="rgb(210,190,5)" rx="2" ry="2" />
<text  x="179.91" y="1023.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="86.8" y="1125" width="0.5" height="15.0" fill="rgb(215,51,14)" rx="2" ry="2" />
<text  x="89.85" y="1135.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="662.5" y="805" width="0.1" height="15.0" fill="rgb(220,85,21)" rx="2" ry="2" />
<text  x="665.45" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="612.9" y="405" width="0.2" height="15.0" fill="rgb(224,130,12)" rx="2" ry="2" />
<text  x="615.93" y="415.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next (16 samples, 0.05%)</title><rect x="237.7" y="357" width="0.6" height="15.0" fill="rgb(213,198,5)" rx="2" ry="2" />
<text  x="240.73" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="1173.4" y="837" width="0.3" height="15.0" fill="rgb(215,137,39)" rx="2" ry="2" />
<text  x="1176.44" y="847.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::mod_evaluate (65 samples, 0.21%)</title><rect x="634.6" y="901" width="2.4" height="15.0" fill="rgb(247,74,12)" rx="2" ry="2" />
<text  x="637.60" y="911.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="118.5" y="1061" width="0.1" height="15.0" fill="rgb(243,215,22)" rx="2" ry="2" />
<text  x="121.46" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="999.1" y="789" width="0.1" height="15.0" fill="rgb(250,92,43)" rx="2" ry="2" />
<text  x="1002.13" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="106.4" y="1109" width="0.2" height="15.0" fill="rgb(227,86,10)" rx="2" ry="2" />
<text  x="109.41" y="1119.5" ></text>
</g>
<g >
<title>core::mem::swap (9 samples, 0.03%)</title><rect x="85.7" y="1077" width="0.4" height="15.0" fill="rgb(244,127,2)" rx="2" ry="2" />
<text  x="88.72" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="244.1" y="597" width="0.2" height="15.0" fill="rgb(213,140,28)" rx="2" ry="2" />
<text  x="247.12" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="21.5" y="965" width="0.1" height="15.0" fill="rgb(223,51,11)" rx="2" ry="2" />
<text  x="24.49" y="975.5" ></text>
</g>
<g >
<title>_&lt;percent_encoding..PercentEncode as core..iter..traits..iterator..Iterator&gt;::next (8 samples, 0.03%)</title><rect x="1187.9" y="821" width="0.3" height="15.0" fill="rgb(228,40,10)" rx="2" ry="2" />
<text  x="1190.94" y="831.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (59 samples, 0.19%)</title><rect x="630.8" y="677" width="2.2" height="15.0" fill="rgb(249,43,37)" rx="2" ry="2" />
<text  x="633.80" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="260.9" y="565" width="0.1" height="15.0" fill="rgb(241,97,8)" rx="2" ry="2" />
<text  x="263.86" y="575.5" ></text>
</g>
<g >
<title>_&lt;rustls..anchors..RootCertStore as core..clone..Clone&gt;::clone (2,382 samples, 7.58%)</title><rect x="839.8" y="837" width="89.4" height="15.0" fill="rgb(254,129,45)" rx="2" ry="2" />
<text  x="842.77" y="847.5" >_&lt;rustls....</text>
</g>
<g >
<title>_&lt;core..str..pattern..CharPredicateSearcher&lt;F&gt; as core..str..pattern..Searcher&gt;::next_reject (6 samples, 0.02%)</title><rect x="79.9" y="1109" width="0.2" height="15.0" fill="rgb(249,67,17)" rx="2" ry="2" />
<text  x="82.87" y="1119.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="155.8" y="1109" width="0.3" height="15.0" fill="rgb(223,142,40)" rx="2" ry="2" />
<text  x="158.82" y="1119.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileFetcher::check_if_supported_scheme (10 samples, 0.03%)</title><rect x="212.9" y="533" width="0.4" height="15.0" fill="rgb(245,183,8)" rx="2" ry="2" />
<text  x="215.88" y="543.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_cond_expr (21 samples, 0.07%)</title><rect x="233.5" y="405" width="0.8" height="15.0" fill="rgb(219,181,45)" rx="2" ry="2" />
<text  x="236.49" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.07%)</title><rect x="42.1" y="1045" width="0.7" height="15.0" fill="rgb(212,13,18)" rx="2" ry="2" />
<text  x="45.06" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="134.9" y="1061" width="0.1" height="15.0" fill="rgb(222,224,14)" rx="2" ry="2" />
<text  x="137.87" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="588.2" y="645" width="0.2" height="15.0" fill="rgb(242,126,16)" rx="2" ry="2" />
<text  x="591.19" y="655.5" ></text>
</g>
<g >
<title>_&lt;futures_channel..mpsc..Receiver&lt;T&gt; as core..ops..drop..Drop&gt;::drop (7 samples, 0.02%)</title><rect x="645.7" y="789" width="0.3" height="15.0" fill="rgb(226,29,11)" rx="2" ry="2" />
<text  x="648.71" y="799.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (7 samples, 0.02%)</title><rect x="618.2" y="821" width="0.2" height="15.0" fill="rgb(244,42,51)" rx="2" ry="2" />
<text  x="621.15" y="831.5" ></text>
</g>
<g >
<title>rusty_v8::script_compiler::compile_module (4 samples, 0.01%)</title><rect x="622.1" y="805" width="0.1" height="15.0" fill="rgb(222,69,8)" rx="2" ry="2" />
<text  x="625.06" y="815.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (21 samples, 0.07%)</title><rect x="1175.0" y="789" width="0.8" height="15.0" fill="rgb(245,185,25)" rx="2" ry="2" />
<text  x="1178.02" y="799.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::get (10 samples, 0.03%)</title><rect x="64.3" y="1109" width="0.4" height="15.0" fill="rgb(243,171,49)" rx="2" ry="2" />
<text  x="67.29" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="267.9" y="597" width="0.4" height="15.0" fill="rgb(209,76,21)" rx="2" ry="2" />
<text  x="270.92" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="260.4" y="501" width="0.2" height="15.0" fill="rgb(251,215,22)" rx="2" ry="2" />
<text  x="263.45" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="1000.1" y="661" width="0.3" height="15.0" fill="rgb(210,72,7)" rx="2" ry="2" />
<text  x="1003.15" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="87.5" y="1045" width="0.1" height="15.0" fill="rgb(221,62,14)" rx="2" ry="2" />
<text  x="90.53" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="81.6" y="1061" width="0.3" height="15.0" fill="rgb(239,168,25)" rx="2" ry="2" />
<text  x="84.63" y="1071.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (21 samples, 0.07%)</title><rect x="1116.5" y="661" width="0.8" height="15.0" fill="rgb(245,52,50)" rx="2" ry="2" />
<text  x="1119.53" y="671.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (235 samples, 0.75%)</title><rect x="1014.9" y="837" width="8.9" height="15.0" fill="rgb(231,40,17)" rx="2" ry="2" />
<text  x="1017.94" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (4 samples, 0.01%)</title><rect x="11.0" y="1125" width="0.1" height="15.0" fill="rgb(223,128,27)" rx="2" ry="2" />
<text  x="13.98" y="1135.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..Visitor&gt;::visit_str (9 samples, 0.03%)</title><rect x="274.5" y="309" width="0.3" height="15.0" fill="rgb(243,91,21)" rx="2" ry="2" />
<text  x="277.49" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (18 samples, 0.06%)</title><rect x="930.1" y="805" width="0.7" height="15.0" fill="rgb(229,160,30)" rx="2" ry="2" />
<text  x="933.13" y="815.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (696 samples, 2.21%)</title><rect x="1006.1" y="885" width="26.1" height="15.0" fill="rgb(226,95,34)" rx="2" ry="2" />
<text  x="1009.08" y="895.5" >d..</text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (164 samples, 0.52%)</title><rect x="211.6" y="597" width="6.2" height="15.0" fill="rgb(238,140,30)" rx="2" ry="2" />
<text  x="214.60" y="607.5" ></text>
</g>
<g >
<title>clap::app::usage::create_help_usage (14 samples, 0.04%)</title><rect x="25.5" y="1077" width="0.5" height="15.0" fill="rgb(225,197,29)" rx="2" ry="2" />
<text  x="28.51" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="204.9" y="1029" width="0.2" height="15.0" fill="rgb(235,88,35)" rx="2" ry="2" />
<text  x="207.92" y="1039.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.02%)</title><rect x="1089.7" y="789" width="0.2" height="15.0" fill="rgb(234,49,1)" rx="2" ry="2" />
<text  x="1092.69" y="799.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="263.9" y="613" width="0.3" height="15.0" fill="rgb(248,182,34)" rx="2" ry="2" />
<text  x="266.90" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="1063.5" y="757" width="0.3" height="15.0" fill="rgb(251,104,33)" rx="2" ry="2" />
<text  x="1066.52" y="767.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="838.9" y="629" width="0.4" height="15.0" fill="rgb(246,140,51)" rx="2" ry="2" />
<text  x="841.86" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (45 samples, 0.14%)</title><rect x="71.2" y="965" width="1.6" height="15.0" fill="rgb(205,44,28)" rx="2" ry="2" />
<text  x="74.16" y="975.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="1178.4" y="885" width="0.1" height="15.0" fill="rgb(230,44,42)" rx="2" ry="2" />
<text  x="1181.36" y="895.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (57 samples, 0.18%)</title><rect x="656.0" y="405" width="2.1" height="15.0" fill="rgb(254,37,4)" rx="2" ry="2" />
<text  x="658.99" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="243.4" y="629" width="0.2" height="15.0" fill="rgb(226,172,34)" rx="2" ry="2" />
<text  x="246.40" y="639.5" ></text>
</g>
<g >
<title>_&lt;deno..flags..LONG_VERSION as core..ops..deref..Deref&gt;::deref (16 samples, 0.05%)</title><rect x="74.2" y="1157" width="0.6" height="15.0" fill="rgb(243,34,54)" rx="2" ry="2" />
<text  x="77.20" y="1167.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (15 samples, 0.05%)</title><rect x="189.9" y="1061" width="0.6" height="15.0" fill="rgb(254,149,41)" rx="2" ry="2" />
<text  x="192.90" y="1071.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..SourceFile as core..clone..Clone&gt;::clone (19 samples, 0.06%)</title><rect x="588.1" y="693" width="0.7" height="15.0" fill="rgb(207,122,28)" rx="2" ry="2" />
<text  x="591.08" y="703.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (12 samples, 0.04%)</title><rect x="573.9" y="533" width="0.5" height="15.0" fill="rgb(251,140,7)" rx="2" ry="2" />
<text  x="576.93" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (10 samples, 0.03%)</title><rect x="582.1" y="485" width="0.4" height="15.0" fill="rgb(206,5,21)" rx="2" ry="2" />
<text  x="585.11" y="495.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="664.6" y="757" width="0.1" height="15.0" fill="rgb(231,155,34)" rx="2" ry="2" />
<text  x="667.63" y="767.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="633.8" y="725" width="0.1" height="15.0" fill="rgb(212,111,27)" rx="2" ry="2" />
<text  x="636.77" y="735.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (221 samples, 0.70%)</title><rect x="312.6" y="213" width="8.3" height="15.0" fill="rgb(235,79,30)" rx="2" ry="2" />
<text  x="315.63" y="223.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (3 samples, 0.01%)</title><rect x="199.3" y="981" width="0.1" height="15.0" fill="rgb(206,157,50)" rx="2" ry="2" />
<text  x="202.33" y="991.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="1171.2" y="693" width="0.1" height="15.0" fill="rgb(209,86,28)" rx="2" ry="2" />
<text  x="1174.19" y="703.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (23 samples, 0.07%)</title><rect x="12.1" y="1173" width="0.8" height="15.0" fill="rgb(243,111,7)" rx="2" ry="2" />
<text  x="15.06" y="1183.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="617.9" y="805" width="0.1" height="15.0" fill="rgb(242,95,44)" rx="2" ry="2" />
<text  x="620.89" y="815.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (11 samples, 0.03%)</title><rect x="269.4" y="501" width="0.4" height="15.0" fill="rgb(248,149,21)" rx="2" ry="2" />
<text  x="272.38" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="72.8" y="1029" width="0.2" height="15.0" fill="rgb(232,39,28)" rx="2" ry="2" />
<text  x="75.85" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="228.6" y="629" width="0.2" height="15.0" fill="rgb(244,67,41)" rx="2" ry="2" />
<text  x="231.65" y="639.5" ></text>
</g>
<g >
<title>core::mem::take (3 samples, 0.01%)</title><rect x="74.3" y="1093" width="0.2" height="15.0" fill="rgb(247,135,43)" rx="2" ry="2" />
<text  x="77.35" y="1103.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (12 samples, 0.04%)</title><rect x="142.0" y="1109" width="0.5" height="15.0" fill="rgb(218,143,29)" rx="2" ry="2" />
<text  x="145.00" y="1119.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.08%)</title><rect x="12.0" y="1205" width="0.9" height="15.0" fill="rgb(205,71,0)" rx="2" ry="2" />
<text  x="14.99" y="1215.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (16 samples, 0.05%)</title><rect x="125.6" y="1061" width="0.6" height="15.0" fill="rgb(248,60,7)" rx="2" ry="2" />
<text  x="128.56" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="665.6" y="821" width="0.1" height="15.0" fill="rgb(240,216,47)" rx="2" ry="2" />
<text  x="668.61" y="831.5" ></text>
</g>
<g >
<title>std::rt::lang_start (31,424 samples, 99.98%)</title><rect x="10.0" y="1285" width="1179.7" height="15.0" fill="rgb(233,73,26)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" >std::rt::lang_start</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="106.7" y="1077" width="0.1" height="15.0" fill="rgb(251,87,30)" rx="2" ry="2" />
<text  x="109.67" y="1087.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="102.5" y="1061" width="0.2" height="15.0" fill="rgb(221,189,45)" rx="2" ry="2" />
<text  x="105.54" y="1071.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (13 samples, 0.04%)</title><rect x="574.7" y="613" width="0.5" height="15.0" fill="rgb(215,121,38)" rx="2" ry="2" />
<text  x="577.68" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="660.2" y="901" width="0.3" height="15.0" fill="rgb(239,117,35)" rx="2" ry="2" />
<text  x="663.24" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="268.0" y="549" width="0.1" height="15.0" fill="rgb(213,97,37)" rx="2" ry="2" />
<text  x="271.03" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (86 samples, 0.27%)</title><rect x="493.1" y="69" width="3.2" height="15.0" fill="rgb(226,11,23)" rx="2" ry="2" />
<text  x="496.10" y="79.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="645.6" y="837" width="0.4" height="15.0" fill="rgb(218,114,28)" rx="2" ry="2" />
<text  x="648.60" y="847.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (14 samples, 0.04%)</title><rect x="112.1" y="1109" width="0.5" height="15.0" fill="rgb(205,171,54)" rx="2" ry="2" />
<text  x="115.08" y="1119.5" ></text>
</g>
<g >
<title>clap::app::App::new (13 samples, 0.04%)</title><rect x="100.4" y="1125" width="0.5" height="15.0" fill="rgb(223,201,23)" rx="2" ry="2" />
<text  x="103.36" y="1135.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="614.0" y="501" width="0.2" height="15.0" fill="rgb(225,184,26)" rx="2" ry="2" />
<text  x="616.98" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="1116.2" y="549" width="0.2" height="15.0" fill="rgb(253,84,52)" rx="2" ry="2" />
<text  x="1119.15" y="559.5" ></text>
</g>
<g >
<title>clap::app::App::new (16 samples, 0.05%)</title><rect x="77.5" y="1157" width="0.6" height="15.0" fill="rgb(216,183,14)" rx="2" ry="2" />
<text  x="80.50" y="1167.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="191.3" y="1061" width="0.2" height="15.0" fill="rgb(206,126,33)" rx="2" ry="2" />
<text  x="194.26" y="1071.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.02%)</title><rect x="133.8" y="1013" width="0.2" height="15.0" fill="rgb(219,62,46)" rx="2" ry="2" />
<text  x="136.82" y="1023.5" ></text>
</g>
<g >
<title>deno_core::bindings::script_origin (12 samples, 0.04%)</title><rect x="1095.0" y="869" width="0.4" height="15.0" fill="rgb(213,165,33)" rx="2" ry="2" />
<text  x="1097.98" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="113.2" y="1093" width="0.3" height="15.0" fill="rgb(235,98,28)" rx="2" ry="2" />
<text  x="116.20" y="1103.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (25 samples, 0.08%)</title><rect x="1034.2" y="885" width="0.9" height="15.0" fill="rgb(237,109,47)" rx="2" ry="2" />
<text  x="1037.20" y="895.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (6 samples, 0.02%)</title><rect x="237.1" y="229" width="0.2" height="15.0" fill="rgb(211,126,13)" rx="2" ry="2" />
<text  x="240.09" y="239.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (1,205 samples, 3.83%)</title><rect x="391.1" y="245" width="45.2" height="15.0" fill="rgb(241,1,50)" rx="2" ry="2" />
<text  x="394.09" y="255.5" >_&lt;co..</text>
</g>
<g >
<title>_&lt;T as alloc..string..ToString&gt;::to_string (15 samples, 0.05%)</title><rect x="262.0" y="645" width="0.5" height="15.0" fill="rgb(206,131,52)" rx="2" ry="2" />
<text  x="264.99" y="655.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for &amp;T&gt;::hash (12 samples, 0.04%)</title><rect x="830.8" y="805" width="0.4" height="15.0" fill="rgb(214,178,21)" rx="2" ry="2" />
<text  x="833.76" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="662.2" y="821" width="0.4" height="15.0" fill="rgb(222,113,28)" rx="2" ry="2" />
<text  x="665.23" y="831.5" ></text>
</g>
<g >
<title>deno::flags::unstable_arg_parse (7 samples, 0.02%)</title><rect x="197.8" y="1141" width="0.3" height="15.0" fill="rgb(249,70,30)" rx="2" ry="2" />
<text  x="200.79" y="1151.5" ></text>
</g>
<g >
<title>url::Url::from_file_path (147 samples, 0.47%)</title><rect x="1180.4" y="917" width="5.5" height="15.0" fill="rgb(220,84,29)" rx="2" ry="2" />
<text  x="1183.35" y="927.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::values_of (15 samples, 0.05%)</title><rect x="197.0" y="1125" width="0.6" height="15.0" fill="rgb(205,151,12)" rx="2" ry="2" />
<text  x="200.00" y="1135.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="88.4" y="1109" width="0.3" height="15.0" fill="rgb(236,184,22)" rx="2" ry="2" />
<text  x="91.43" y="1119.5" ></text>
</g>
<g >
<title>clap::app::App::arg (180 samples, 0.57%)</title><rect x="89.6" y="1141" width="6.8" height="15.0" fill="rgb(224,115,12)" rx="2" ry="2" />
<text  x="92.63" y="1151.5" ></text>
</g>
<g >
<title>deno::tsc::TsCompiler::compile::_{{closure}} (9,179 samples, 29.20%)</title><rect x="241.3" y="709" width="344.6" height="15.0" fill="rgb(248,144,52)" rx="2" ry="2" />
<text  x="244.26" y="719.5" >deno::tsc::TsCompiler::compile::_{{closure}}</text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="1058.0" y="853" width="0.4" height="15.0" fill="rgb(235,130,17)" rx="2" ry="2" />
<text  x="1061.04" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="231.1" y="597" width="0.1" height="15.0" fill="rgb(245,98,8)" rx="2" ry="2" />
<text  x="234.09" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="262.3" y="501" width="0.2" height="15.0" fill="rgb(226,131,1)" rx="2" ry="2" />
<text  x="265.32" y="511.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 0.07%)</title><rect x="667.5" y="757" width="0.8" height="15.0" fill="rgb(233,179,11)" rx="2" ry="2" />
<text  x="670.48" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="617.0" y="437" width="0.4" height="15.0" fill="rgb(250,56,32)" rx="2" ry="2" />
<text  x="620.03" y="447.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="274.6" y="261" width="0.2" height="15.0" fill="rgb(223,70,5)" rx="2" ry="2" />
<text  x="277.60" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="108.1" y="1013" width="0.3" height="15.0" fill="rgb(212,16,42)" rx="2" ry="2" />
<text  x="111.14" y="1023.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="589.0" y="613" width="0.1" height="15.0" fill="rgb(253,80,40)" rx="2" ry="2" />
<text  x="591.98" y="623.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (18 samples, 0.06%)</title><rect x="219.4" y="677" width="0.7" height="15.0" fill="rgb(245,97,21)" rx="2" ry="2" />
<text  x="222.41" y="687.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::create_blocking_pool (9 samples, 0.03%)</title><rect x="202.6" y="1141" width="0.3" height="15.0" fill="rgb(207,172,42)" rx="2" ry="2" />
<text  x="205.56" y="1151.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="163.1" y="1061" width="0.2" height="15.0" fill="rgb(240,56,53)" rx="2" ry="2" />
<text  x="166.14" y="1071.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="830.9" y="725" width="0.2" height="15.0" fill="rgb(247,32,49)" rx="2" ry="2" />
<text  x="833.94" y="735.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (7 samples, 0.02%)</title><rect x="83.8" y="1077" width="0.3" height="15.0" fill="rgb(247,67,6)" rx="2" ry="2" />
<text  x="86.81" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend (167 samples, 0.53%)</title><rect x="590.8" y="677" width="6.3" height="15.0" fill="rgb(246,94,9)" rx="2" ry="2" />
<text  x="593.82" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="228.7" y="613" width="0.1" height="15.0" fill="rgb(240,228,35)" rx="2" ry="2" />
<text  x="231.69" y="623.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="635.3" y="869" width="0.2" height="15.0" fill="rgb(242,203,54)" rx="2" ry="2" />
<text  x="638.31" y="879.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::new_handle_scope_data_with_context (3 samples, 0.01%)</title><rect x="1096.1" y="821" width="0.1" height="15.0" fill="rgb(243,17,54)" rx="2" ry="2" />
<text  x="1099.07" y="831.5" ></text>
</g>
<g >
<title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (4 samples, 0.01%)</title><rect x="612.3" y="533" width="0.1" height="15.0" fill="rgb(225,128,43)" rx="2" ry="2" />
<text  x="615.30" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (10 samples, 0.03%)</title><rect x="134.6" y="1109" width="0.4" height="15.0" fill="rgb(226,84,13)" rx="2" ry="2" />
<text  x="137.64" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="128.3" y="1077" width="0.1" height="15.0" fill="rgb(216,153,12)" rx="2" ry="2" />
<text  x="131.26" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1166.8" y="517" width="0.2" height="15.0" fill="rgb(238,112,8)" rx="2" ry="2" />
<text  x="1169.84" y="527.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="213.9" y="485" width="0.1" height="15.0" fill="rgb(218,68,6)" rx="2" ry="2" />
<text  x="216.86" y="495.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (6 samples, 0.02%)</title><rect x="1137.7" y="533" width="0.2" height="15.0" fill="rgb(231,191,24)" rx="2" ry="2" />
<text  x="1140.70" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="137.1" y="1013" width="0.1" height="15.0" fill="rgb(214,191,43)" rx="2" ry="2" />
<text  x="140.08" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="930.7" y="773" width="0.1" height="15.0" fill="rgb(215,22,42)" rx="2" ry="2" />
<text  x="933.66" y="783.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="642.5" y="709" width="0.1" height="15.0" fill="rgb(238,76,46)" rx="2" ry="2" />
<text  x="645.48" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="113.4" y="1061" width="0.1" height="15.0" fill="rgb(206,13,12)" rx="2" ry="2" />
<text  x="116.35" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="156.2" y="1077" width="0.2" height="15.0" fill="rgb(247,47,25)" rx="2" ry="2" />
<text  x="159.23" y="1087.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="614.1" y="469" width="0.1" height="15.0" fill="rgb(213,221,41)" rx="2" ry="2" />
<text  x="617.06" y="479.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (70 samples, 0.22%)</title><rect x="36.3" y="1013" width="2.6" height="15.0" fill="rgb(222,83,15)" rx="2" ry="2" />
<text  x="39.28" y="1023.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (10 samples, 0.03%)</title><rect x="168.0" y="1093" width="0.4" height="15.0" fill="rgb(218,128,49)" rx="2" ry="2" />
<text  x="170.98" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="21.5" y="981" width="0.1" height="15.0" fill="rgb(252,6,2)" rx="2" ry="2" />
<text  x="24.45" y="991.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (28 samples, 0.09%)</title><rect x="1087.3" y="821" width="1.0" height="15.0" fill="rgb(243,58,10)" rx="2" ry="2" />
<text  x="1090.28" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="1075.5" y="741" width="0.3" height="15.0" fill="rgb(245,13,21)" rx="2" ry="2" />
<text  x="1078.46" y="751.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="586.9" y="693" width="0.2" height="15.0" fill="rgb(220,163,44)" rx="2" ry="2" />
<text  x="589.92" y="703.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::util::CharExt::is_ident_start (5 samples, 0.02%)</title><rect x="238.6" y="341" width="0.2" height="15.0" fill="rgb(209,128,6)" rx="2" ry="2" />
<text  x="241.63" y="351.5" ></text>
</g>
<g >
<title>core::iter::range::_&lt;impl core..iter..traits..iterator..Iterator for core..ops..range..Range&lt;A&gt;&gt;::next (10 samples, 0.03%)</title><rect x="1088.6" y="789" width="0.4" height="15.0" fill="rgb(251,154,51)" rx="2" ry="2" />
<text  x="1091.64" y="799.5" ></text>
</g>
<g >
<title>deno::swc_util::AstParser::default (12 samples, 0.04%)</title><rect x="227.0" y="661" width="0.4" height="15.0" fill="rgb(231,86,33)" rx="2" ry="2" />
<text  x="230.00" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="267.2" y="357" width="0.2" height="15.0" fill="rgb(222,170,17)" rx="2" ry="2" />
<text  x="270.20" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (88 samples, 0.28%)</title><rect x="534.1" y="181" width="3.3" height="15.0" fill="rgb(238,171,19)" rx="2" ry="2" />
<text  x="537.06" y="191.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="1083.4" y="789" width="0.1" height="15.0" fill="rgb(227,124,4)" rx="2" ry="2" />
<text  x="1086.38" y="799.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::_{{closure}} (26,175 samples, 83.28%)</title><rect x="207.0" y="1061" width="982.7" height="15.0" fill="rgb(228,226,18)" rx="2" ry="2" />
<text  x="210.02" y="1071.5" >tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::_{{closure}}</text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (28 samples, 0.09%)</title><rect x="123.0" y="1029" width="1.1" height="15.0" fill="rgb(230,118,30)" rx="2" ry="2" />
<text  x="126.00" y="1039.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (26,172 samples, 83.27%)</title><rect x="207.1" y="1045" width="982.5" height="15.0" fill="rgb(209,45,33)" rx="2" ry="2" />
<text  x="210.06" y="1055.5" >std::thread::local::LocalKey&lt;T&gt;::with</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (114 samples, 0.36%)</title><rect x="1027.9" y="789" width="4.3" height="15.0" fill="rgb(223,33,2)" rx="2" ry="2" />
<text  x="1030.93" y="799.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="97.7" y="1109" width="0.2" height="15.0" fill="rgb(210,137,49)" rx="2" ry="2" />
<text  x="100.66" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (18 samples, 0.06%)</title><rect x="1175.1" y="773" width="0.7" height="15.0" fill="rgb(226,121,31)" rx="2" ry="2" />
<text  x="1178.13" y="783.5" ></text>
</g>
<g >
<title>all (31,431 samples, 100%)</title><rect x="10.0" y="1301" width="1180.0" height="15.0" fill="rgb(242,93,51)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="634.0" y="821" width="0.2" height="15.0" fill="rgb(243,56,8)" rx="2" ry="2" />
<text  x="636.96" y="831.5" ></text>
</g>
<g >
<title>deno::permissions::Permissions::query_read::_{{closure}} (3 samples, 0.01%)</title><rect x="213.9" y="469" width="0.1" height="15.0" fill="rgb(250,220,13)" rx="2" ry="2" />
<text  x="216.89" y="479.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::requires (6 samples, 0.02%)</title><rect x="136.6" y="1141" width="0.2" height="15.0" fill="rgb(210,124,53)" rx="2" ry="2" />
<text  x="139.56" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (6 samples, 0.02%)</title><rect x="86.6" y="1061" width="0.2" height="15.0" fill="rgb(228,156,45)" rx="2" ry="2" />
<text  x="89.59" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (12 samples, 0.04%)</title><rect x="1166.6" y="549" width="0.5" height="15.0" fill="rgb(253,118,47)" rx="2" ry="2" />
<text  x="1169.61" y="559.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="194.6" y="1077" width="0.2" height="15.0" fill="rgb(253,177,30)" rx="2" ry="2" />
<text  x="197.60" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.02%)</title><rect x="109.6" y="1029" width="0.2" height="15.0" fill="rgb(226,18,12)" rx="2" ry="2" />
<text  x="112.64" y="1039.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="1061.8" y="821" width="0.3" height="15.0" fill="rgb(245,145,16)" rx="2" ry="2" />
<text  x="1064.83" y="831.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (22 samples, 0.07%)</title><rect x="161.6" y="1029" width="0.8" height="15.0" fill="rgb(216,14,1)" rx="2" ry="2" />
<text  x="164.56" y="1039.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.02%)</title><rect x="1005.8" y="837" width="0.2" height="15.0" fill="rgb(207,152,28)" rx="2" ry="2" />
<text  x="1008.82" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="1000.2" y="645" width="0.2" height="15.0" fill="rgb(208,63,21)" rx="2" ry="2" />
<text  x="1003.22" y="655.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (28 samples, 0.09%)</title><rect x="1043.3" y="821" width="1.1" height="15.0" fill="rgb(246,27,38)" rx="2" ry="2" />
<text  x="1046.32" y="831.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (9 samples, 0.03%)</title><rect x="1044.0" y="789" width="0.3" height="15.0" fill="rgb(247,71,33)" rx="2" ry="2" />
<text  x="1047.00" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="223.5" y="597" width="0.1" height="15.0" fill="rgb(231,59,12)" rx="2" ry="2" />
<text  x="226.50" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (82 samples, 0.26%)</title><rect x="642.3" y="773" width="3.0" height="15.0" fill="rgb(234,64,41)" rx="2" ry="2" />
<text  x="645.25" y="783.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (13 samples, 0.04%)</title><rect x="179.5" y="1077" width="0.5" height="15.0" fill="rgb(211,109,50)" rx="2" ry="2" />
<text  x="182.54" y="1087.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (12 samples, 0.04%)</title><rect x="1116.8" y="629" width="0.4" height="15.0" fill="rgb(237,104,11)" rx="2" ry="2" />
<text  x="1119.75" y="639.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (3 samples, 0.01%)</title><rect x="190.5" y="1093" width="0.1" height="15.0" fill="rgb(218,89,35)" rx="2" ry="2" />
<text  x="193.47" y="1103.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (7 samples, 0.02%)</title><rect x="168.4" y="1093" width="0.2" height="15.0" fill="rgb(230,72,15)" rx="2" ry="2" />
<text  x="171.35" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="1005.1" y="789" width="0.5" height="15.0" fill="rgb(205,149,53)" rx="2" ry="2" />
<text  x="1008.10" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (22 samples, 0.07%)</title><rect x="838.5" y="741" width="0.8" height="15.0" fill="rgb(251,137,20)" rx="2" ry="2" />
<text  x="841.49" y="751.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (14 samples, 0.04%)</title><rect x="210.4" y="821" width="0.6" height="15.0" fill="rgb(239,220,52)" rx="2" ry="2" />
<text  x="213.44" y="831.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (72 samples, 0.23%)</title><rect x="170.8" y="1029" width="2.7" height="15.0" fill="rgb(216,175,18)" rx="2" ry="2" />
<text  x="173.83" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="228.7" y="597" width="0.1" height="15.0" fill="rgb(206,163,13)" rx="2" ry="2" />
<text  x="231.72" y="607.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (9 samples, 0.03%)</title><rect x="607.8" y="565" width="0.4" height="15.0" fill="rgb(254,47,22)" rx="2" ry="2" />
<text  x="610.83" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="178.5" y="1077" width="0.2" height="15.0" fill="rgb(247,224,54)" rx="2" ry="2" />
<text  x="181.49" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="137.0" y="1045" width="0.2" height="15.0" fill="rgb(216,17,24)" rx="2" ry="2" />
<text  x="140.01" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.04%)</title><rect x="38.4" y="949" width="0.5" height="15.0" fill="rgb(229,6,35)" rx="2" ry="2" />
<text  x="41.38" y="959.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="587.9" y="549" width="0.1" height="15.0" fill="rgb(219,133,0)" rx="2" ry="2" />
<text  x="590.85" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="832.0" y="837" width="0.1" height="15.0" fill="rgb(248,143,3)" rx="2" ry="2" />
<text  x="834.96" y="847.5" ></text>
</g>
<g >
<title>bytes::bytes::Bytes::copy_from_slice (7 samples, 0.02%)</title><rect x="663.5" y="805" width="0.3" height="15.0" fill="rgb(237,4,19)" rx="2" ry="2" />
<text  x="666.50" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="233.3" y="421" width="0.1" height="15.0" fill="rgb(235,10,37)" rx="2" ry="2" />
<text  x="236.27" y="431.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend (169 samples, 0.54%)</title><rect x="576.1" y="581" width="6.4" height="15.0" fill="rgb(251,29,32)" rx="2" ry="2" />
<text  x="579.14" y="591.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (13 samples, 0.04%)</title><rect x="659.3" y="901" width="0.5" height="15.0" fill="rgb(224,121,40)" rx="2" ry="2" />
<text  x="662.30" y="911.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..ser..Serializer&lt;W,F&gt; as serde..ser..Serializer&gt;::serialize_str (6 samples, 0.02%)</title><rect x="1117.9" y="581" width="0.2" height="15.0" fill="rgb(222,121,40)" rx="2" ry="2" />
<text  x="1120.88" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="12.7" y="1141" width="0.2" height="15.0" fill="rgb(233,62,38)" rx="2" ry="2" />
<text  x="15.74" y="1151.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (12 samples, 0.04%)</title><rect x="102.3" y="1093" width="0.4" height="15.0" fill="rgb(225,154,36)" rx="2" ry="2" />
<text  x="105.28" y="1103.5" ></text>
</g>
<g >
<title>swc_ecma_visit::Visit::visit_stmt (15 samples, 0.05%)</title><rect x="240.1" y="533" width="0.6" height="15.0" fill="rgb(216,87,11)" rx="2" ry="2" />
<text  x="243.10" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (8 samples, 0.03%)</title><rect x="219.1" y="597" width="0.3" height="15.0" fill="rgb(233,215,18)" rx="2" ry="2" />
<text  x="222.07" y="607.5" ></text>
</g>
<g >
<title>url::parser::Parser::file_host (11 samples, 0.03%)</title><rect x="623.4" y="709" width="0.4" height="15.0" fill="rgb(252,131,1)" rx="2" ry="2" />
<text  x="626.37" y="719.5" ></text>
</g>
<g >
<title>lazy_static::lazy::Lazy&lt;T&gt;::get::_{{closure}} (6 samples, 0.02%)</title><rect x="758.7" y="805" width="0.2" height="15.0" fill="rgb(211,146,0)" rx="2" ry="2" />
<text  x="761.67" y="815.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (22 samples, 0.07%)</title><rect x="1121.3" y="501" width="0.8" height="15.0" fill="rgb(213,59,15)" rx="2" ry="2" />
<text  x="1124.30" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (21 samples, 0.07%)</title><rect x="224.8" y="597" width="0.8" height="15.0" fill="rgb(252,139,24)" rx="2" ry="2" />
<text  x="227.78" y="607.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::long (6 samples, 0.02%)</title><rect x="89.4" y="1125" width="0.2" height="15.0" fill="rgb(249,164,20)" rx="2" ry="2" />
<text  x="92.36" y="1135.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="261.6" y="549" width="0.1" height="15.0" fill="rgb(235,167,8)" rx="2" ry="2" />
<text  x="264.61" y="559.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (4 samples, 0.01%)</title><rect x="662.7" y="885" width="0.2" height="15.0" fill="rgb(232,186,33)" rx="2" ry="2" />
<text  x="665.71" y="895.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (857 samples, 2.73%)</title><rect x="1138.8" y="677" width="32.2" height="15.0" fill="rgb(228,48,20)" rx="2" ry="2" />
<text  x="1141.83" y="687.5" >se..</text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::verifier::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::verify_expr (11 samples, 0.03%)</title><rect x="238.8" y="581" width="0.4" height="15.0" fill="rgb(248,175,49)" rx="2" ry="2" />
<text  x="241.82" y="591.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="19.3" y="917" width="0.2" height="15.0" fill="rgb(247,197,20)" rx="2" ry="2" />
<text  x="22.27" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (20 samples, 0.06%)</title><rect x="1136.9" y="469" width="0.8" height="15.0" fill="rgb(250,99,54)" rx="2" ry="2" />
<text  x="1139.91" y="479.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="244.0" y="629" width="0.3" height="15.0" fill="rgb(213,133,15)" rx="2" ry="2" />
<text  x="247.04" y="639.5" ></text>
</g>
<g >
<title>deno::permissions::Permissions::allow_all (3 samples, 0.01%)</title><rect x="263.7" y="661" width="0.1" height="15.0" fill="rgb(244,157,8)" rx="2" ry="2" />
<text  x="266.68" y="671.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert2 (14 samples, 0.04%)</title><rect x="1000.7" y="837" width="0.5" height="15.0" fill="rgb(248,177,0)" rx="2" ry="2" />
<text  x="1003.71" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="623.6" y="629" width="0.2" height="15.0" fill="rgb(230,206,16)" rx="2" ry="2" />
<text  x="626.56" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="137.7" y="1109" width="0.2" height="15.0" fill="rgb(236,70,5)" rx="2" ry="2" />
<text  x="140.68" y="1119.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::entry (12 samples, 0.04%)</title><rect x="16.2" y="1045" width="0.5" height="15.0" fill="rgb(236,18,24)" rx="2" ry="2" />
<text  x="19.23" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (375 samples, 1.19%)</title><rect x="244.9" y="437" width="14.1" height="15.0" fill="rgb(246,124,22)" rx="2" ry="2" />
<text  x="247.90" y="447.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::load_module::_{{closure}} (11,300 samples, 35.95%)</title><rect x="210.4" y="853" width="424.2" height="15.0" fill="rgb(231,190,29)" rx="2" ry="2" />
<text  x="213.36" y="863.5" >deno_core::es_isolate::EsIsolate::load_module::_{{closure}}</text>
</g>
<g >
<title>core::ptr::drop_in_place (19 samples, 0.06%)</title><rect x="224.9" y="565" width="0.7" height="15.0" fill="rgb(220,151,33)" rx="2" ry="2" />
<text  x="227.86" y="575.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="127.4" y="1077" width="0.1" height="15.0" fill="rgb(252,173,33)" rx="2" ry="2" />
<text  x="130.40" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="586.6" y="597" width="0.2" height="15.0" fill="rgb(224,54,20)" rx="2" ry="2" />
<text  x="589.62" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="1034.3" y="821" width="0.2" height="15.0" fill="rgb(233,71,10)" rx="2" ry="2" />
<text  x="1037.35" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="104.1" y="1125" width="0.2" height="15.0" fill="rgb(230,225,26)" rx="2" ry="2" />
<text  x="107.08" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="21.0" y="965" width="0.2" height="15.0" fill="rgb(230,80,45)" rx="2" ry="2" />
<text  x="24.00" y="975.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.03%)</title><rect x="259.5" y="613" width="0.3" height="15.0" fill="rgb(246,11,47)" rx="2" ry="2" />
<text  x="262.55" y="623.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="263.9" y="597" width="0.3" height="15.0" fill="rgb(205,95,42)" rx="2" ry="2" />
<text  x="266.94" y="607.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (5,934 samples, 18.88%)</title><rect x="323.3" y="389" width="222.8" height="15.0" fill="rgb(250,49,9)" rx="2" ry="2" />
<text  x="326.33" y="399.5" >serde::de::MapAccess::next_en..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="633.4" y="789" width="0.1" height="15.0" fill="rgb(250,113,20)" rx="2" ry="2" />
<text  x="636.39" y="799.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="217.3" y="485" width="0.2" height="15.0" fill="rgb(251,93,26)" rx="2" ry="2" />
<text  x="220.35" y="495.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once (9 samples, 0.03%)</title><rect x="234.8" y="245" width="0.3" height="15.0" fill="rgb(213,52,23)" rx="2" ry="2" />
<text  x="237.77" y="255.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="261.0" y="613" width="0.4" height="15.0" fill="rgb(210,21,23)" rx="2" ry="2" />
<text  x="264.05" y="623.5" ></text>
</g>
<g >
<title>_&lt;string_cache..atom..Atom&lt;Static&gt; as core..convert..From&lt;alloc..borrow..Cow&lt;str&gt;&gt;&gt;::from (4 samples, 0.01%)</title><rect x="237.2" y="197" width="0.1" height="15.0" fill="rgb(206,22,4)" rx="2" ry="2" />
<text  x="240.17" y="207.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (4 samples, 0.01%)</title><rect x="1002.9" y="805" width="0.1" height="15.0" fill="rgb(220,44,9)" rx="2" ry="2" />
<text  x="1005.89" y="815.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="166.6" y="1109" width="0.4" height="15.0" fill="rgb(218,38,10)" rx="2" ry="2" />
<text  x="169.63" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="101.9" y="1061" width="0.2" height="15.0" fill="rgb(214,110,37)" rx="2" ry="2" />
<text  x="104.90" y="1071.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="586.5" y="661" width="0.3" height="15.0" fill="rgb(247,147,1)" rx="2" ry="2" />
<text  x="589.47" y="671.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="666.7" y="725" width="0.1" height="15.0" fill="rgb(212,51,11)" rx="2" ry="2" />
<text  x="669.66" y="735.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (12 samples, 0.04%)</title><rect x="112.2" y="1093" width="0.4" height="15.0" fill="rgb(236,158,37)" rx="2" ry="2" />
<text  x="115.15" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="1115.0" y="613" width="0.4" height="15.0" fill="rgb(250,62,6)" rx="2" ry="2" />
<text  x="1118.03" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="79.5" y="1061" width="0.1" height="15.0" fill="rgb(241,59,23)" rx="2" ry="2" />
<text  x="82.49" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (22 samples, 0.07%)</title><rect x="224.7" y="613" width="0.9" height="15.0" fill="rgb(207,126,37)" rx="2" ry="2" />
<text  x="227.74" y="623.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (3 samples, 0.01%)</title><rect x="1138.2" y="677" width="0.1" height="15.0" fill="rgb(253,183,38)" rx="2" ry="2" />
<text  x="1141.15" y="687.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="197.6" y="1109" width="0.2" height="15.0" fill="rgb(236,7,32)" rx="2" ry="2" />
<text  x="200.64" y="1119.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_reqs (7 samples, 0.02%)</title><rect x="81.9" y="1109" width="0.2" height="15.0" fill="rgb(221,149,30)" rx="2" ry="2" />
<text  x="84.86" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (1,661 samples, 5.28%)</title><rect x="936.0" y="837" width="62.3" height="15.0" fill="rgb(218,70,34)" rx="2" ry="2" />
<text  x="938.99" y="847.5" >alloc:..</text>
</g>
<g >
<title>deno::text_encoding::convert_to_utf8 (11 samples, 0.03%)</title><rect x="615.0" y="549" width="0.4" height="15.0" fill="rgb(248,192,53)" rx="2" ry="2" />
<text  x="618.00" y="559.5" ></text>
</g>
<g >
<title>deno::ops::fetch::init (50 samples, 0.16%)</title><rect x="1004.2" y="901" width="1.8" height="15.0" fill="rgb(226,17,5)" rx="2" ry="2" />
<text  x="1007.16" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="1116.2" y="533" width="0.2" height="15.0" fill="rgb(253,197,32)" rx="2" ry="2" />
<text  x="1119.19" y="543.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="269.6" y="421" width="0.2" height="15.0" fill="rgb(206,114,51)" rx="2" ry="2" />
<text  x="272.57" y="431.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (39 samples, 0.12%)</title><rect x="214.3" y="485" width="1.4" height="15.0" fill="rgb(240,21,45)" rx="2" ry="2" />
<text  x="217.27" y="495.5" ></text>
</g>
<g >
<title>core::mem::swap (3 samples, 0.01%)</title><rect x="81.2" y="1077" width="0.1" height="15.0" fill="rgb(245,89,30)" rx="2" ry="2" />
<text  x="84.18" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (22 samples, 0.07%)</title><rect x="1075.0" y="805" width="0.8" height="15.0" fill="rgb(209,209,30)" rx="2" ry="2" />
<text  x="1077.97" y="815.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as core..hash..Hash&gt;::hash (11 samples, 0.03%)</title><rect x="836.2" y="789" width="0.4" height="15.0" fill="rgb(232,107,43)" rx="2" ry="2" />
<text  x="839.20" y="799.5" ></text>
</g>
<g >
<title>core::mem::replace (11 samples, 0.03%)</title><rect x="85.6" y="1093" width="0.5" height="15.0" fill="rgb(225,13,48)" rx="2" ry="2" />
<text  x="88.65" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="96.5" y="1093" width="0.3" height="15.0" fill="rgb(227,144,7)" rx="2" ry="2" />
<text  x="99.50" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="620.4" y="741" width="0.3" height="15.0" fill="rgb(233,185,8)" rx="2" ry="2" />
<text  x="623.44" y="751.5" ></text>
</g>
<g >
<title>alloc::string::String::split_off (6 samples, 0.02%)</title><rect x="585.5" y="581" width="0.2" height="15.0" fill="rgb(238,196,23)" rx="2" ry="2" />
<text  x="588.49" y="591.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (9 samples, 0.03%)</title><rect x="81.0" y="1109" width="0.3" height="15.0" fill="rgb(253,60,23)" rx="2" ry="2" />
<text  x="83.96" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="127.7" y="1093" width="0.4" height="15.0" fill="rgb(241,192,36)" rx="2" ry="2" />
<text  x="130.73" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="1057.9" y="821" width="0.1" height="15.0" fill="rgb(225,17,48)" rx="2" ry="2" />
<text  x="1060.89" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="1036.2" y="757" width="0.3" height="15.0" fill="rgb(210,126,30)" rx="2" ry="2" />
<text  x="1039.23" y="767.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (20 samples, 0.06%)</title><rect x="1063.1" y="853" width="0.7" height="15.0" fill="rgb(234,207,7)" rx="2" ry="2" />
<text  x="1066.07" y="863.5" ></text>
</g>
<g >
<title>deno_core::bindings::shared_getter (11 samples, 0.03%)</title><rect x="1172.6" y="773" width="0.4" height="15.0" fill="rgb(209,41,28)" rx="2" ry="2" />
<text  x="1175.62" y="783.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (45 samples, 0.14%)</title><rect x="1032.5" y="885" width="1.7" height="15.0" fill="rgb(224,33,48)" rx="2" ry="2" />
<text  x="1035.47" y="895.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="110.6" y="1061" width="0.3" height="15.0" fill="rgb(253,133,52)" rx="2" ry="2" />
<text  x="113.61" y="1071.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..set..HashSet&lt;T,S&gt; as core..default..Default&gt;::default (6 samples, 0.02%)</title><rect x="831.3" y="885" width="0.2" height="15.0" fill="rgb(223,18,49)" rx="2" ry="2" />
<text  x="834.28" y="895.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="166.8" y="1045" width="0.2" height="15.0" fill="rgb(220,23,13)" rx="2" ry="2" />
<text  x="169.78" y="1055.5" ></text>
</g>
<g >
<title>deno::flags::lock_arg (9 samples, 0.03%)</title><rect x="155.8" y="1125" width="0.3" height="15.0" fill="rgb(215,91,22)" rx="2" ry="2" />
<text  x="158.78" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (59 samples, 0.19%)</title><rect x="655.9" y="437" width="2.2" height="15.0" fill="rgb(206,204,17)" rx="2" ry="2" />
<text  x="658.92" y="447.5" ></text>
</g>
<g >
<title>_&lt;rustls..anchors..OwnedTrustAnchor as core..clone..Clone&gt;::clone (2,091 samples, 6.65%)</title><rect x="679.6" y="629" width="78.5" height="15.0" fill="rgb(244,16,51)" rx="2" ry="2" />
<text  x="682.57" y="639.5" >_&lt;rustls...</text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="226.1" y="405" width="0.3" height="15.0" fill="rgb(216,186,50)" rx="2" ry="2" />
<text  x="229.13" y="415.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="1035.4" y="837" width="0.3" height="15.0" fill="rgb(238,223,11)" rx="2" ry="2" />
<text  x="1038.40" y="847.5" ></text>
</g>
<g >
<title>_&lt;tokio..runtime..context..enter..DropGuard as core..ops..drop..Drop&gt;::drop::_{{closure}} (3 samples, 0.01%)</title><rect x="206.5" y="1077" width="0.1" height="15.0" fill="rgb(210,155,31)" rx="2" ry="2" />
<text  x="209.46" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.01%)</title><rect x="1087.1" y="677" width="0.1" height="15.0" fill="rgb(223,21,24)" rx="2" ry="2" />
<text  x="1090.10" y="687.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (8 samples, 0.03%)</title><rect x="205.9" y="1093" width="0.3" height="15.0" fill="rgb(213,181,18)" rx="2" ry="2" />
<text  x="208.90" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="20.0" y="901" width="0.2" height="15.0" fill="rgb(217,99,15)" rx="2" ry="2" />
<text  x="23.02" y="911.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.04%)</title><rect x="228.9" y="613" width="0.4" height="15.0" fill="rgb(245,16,44)" rx="2" ry="2" />
<text  x="231.87" y="623.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (21 samples, 0.07%)</title><rect x="1076.7" y="853" width="0.8" height="15.0" fill="rgb(254,88,26)" rx="2" ry="2" />
<text  x="1079.73" y="863.5" ></text>
</g>
<g >
<title>clap::app::App::arg (274 samples, 0.87%)</title><rect x="167.1" y="1125" width="10.3" height="15.0" fill="rgb(233,108,46)" rx="2" ry="2" />
<text  x="170.08" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="76.0" y="1093" width="0.5" height="15.0" fill="rgb(216,129,48)" rx="2" ry="2" />
<text  x="79.04" y="1103.5" ></text>
</g>
<g >
<title>_&lt;percent_encoding..PercentEncode as core..iter..traits..iterator..Iterator&gt;::next (14 samples, 0.04%)</title><rect x="1182.7" y="837" width="0.5" height="15.0" fill="rgb(238,181,27)" rx="2" ry="2" />
<text  x="1185.68" y="847.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_string (521 samples, 1.66%)</title><rect x="329.8" y="325" width="19.5" height="15.0" fill="rgb(248,79,0)" rx="2" ry="2" />
<text  x="332.79" y="335.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (6 samples, 0.02%)</title><rect x="1032.2" y="885" width="0.2" height="15.0" fill="rgb(213,63,36)" rx="2" ry="2" />
<text  x="1035.21" y="895.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="1186.6" y="885" width="0.3" height="15.0" fill="rgb(244,15,7)" rx="2" ry="2" />
<text  x="1189.58" y="895.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="1070.7" y="821" width="0.2" height="15.0" fill="rgb(253,38,11)" rx="2" ry="2" />
<text  x="1073.73" y="831.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="96.4" y="1141" width="0.5" height="15.0" fill="rgb(222,135,37)" rx="2" ry="2" />
<text  x="99.39" y="1151.5" ></text>
</g>
<g >
<title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (3 samples, 0.01%)</title><rect x="16.7" y="1029" width="0.1" height="15.0" fill="rgb(213,153,8)" rx="2" ry="2" />
<text  x="19.72" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="235.5" y="149" width="0.1" height="15.0" fill="rgb(243,71,50)" rx="2" ry="2" />
<text  x="238.48" y="159.5" ></text>
</g>
<g >
<title>serde_json::value::ser::_&lt;impl serde..ser..Serialize for serde_json..value..Value&gt;::serialize (39 samples, 0.12%)</title><rect x="1122.6" y="565" width="1.5" height="15.0" fill="rgb(222,179,0)" rx="2" ry="2" />
<text  x="1125.61" y="575.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Cloned&lt;I&gt; as core..iter..traits..iterator..Iterator&gt;::fold (2,370 samples, 7.54%)</title><rect x="840.1" y="709" width="88.9" height="15.0" fill="rgb(232,3,45)" rx="2" ry="2" />
<text  x="843.07" y="719.5" >_&lt;core..it..</text>
</g>
<g >
<title>core::iter::adapters::map_fold::_{{closure}} (11 samples, 0.03%)</title><rect x="1093.8" y="645" width="0.4" height="15.0" fill="rgb(237,145,17)" rx="2" ry="2" />
<text  x="1096.82" y="655.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (36 samples, 0.11%)</title><rect x="161.0" y="1045" width="1.4" height="15.0" fill="rgb(223,101,48)" rx="2" ry="2" />
<text  x="164.03" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (142 samples, 0.45%)</title><rect x="1049.7" y="773" width="5.3" height="15.0" fill="rgb(221,196,54)" rx="2" ry="2" />
<text  x="1052.70" y="783.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::end_string (4 samples, 0.01%)</title><rect x="1121.1" y="501" width="0.2" height="15.0" fill="rgb(220,81,28)" rx="2" ry="2" />
<text  x="1124.15" y="511.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_lhs_expr (18 samples, 0.06%)</title><rect x="233.6" y="357" width="0.7" height="15.0" fill="rgb(232,134,8)" rx="2" ry="2" />
<text  x="236.60" y="367.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="572.9" y="405" width="0.2" height="15.0" fill="rgb(244,129,3)" rx="2" ry="2" />
<text  x="575.91" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1063.7" y="725" width="0.1" height="15.0" fill="rgb(223,160,5)" rx="2" ry="2" />
<text  x="1066.67" y="735.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (20 samples, 0.06%)</title><rect x="1004.8" y="853" width="0.8" height="15.0" fill="rgb(232,96,38)" rx="2" ry="2" />
<text  x="1007.80" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="192.0" y="1125" width="0.1" height="15.0" fill="rgb(215,66,13)" rx="2" ry="2" />
<text  x="195.01" y="1135.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (8 samples, 0.03%)</title><rect x="614.6" y="485" width="0.3" height="15.0" fill="rgb(216,24,46)" rx="2" ry="2" />
<text  x="617.59" y="495.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (35 samples, 0.11%)</title><rect x="637.3" y="901" width="1.3" height="15.0" fill="rgb(232,84,44)" rx="2" ry="2" />
<text  x="640.30" y="911.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend (63 samples, 0.20%)</title><rect x="1186.9" y="869" width="2.4" height="15.0" fill="rgb(235,65,22)" rx="2" ry="2" />
<text  x="1189.92" y="879.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (3 samples, 0.01%)</title><rect x="1134.4" y="485" width="0.1" height="15.0" fill="rgb(224,219,51)" rx="2" ry="2" />
<text  x="1137.40" y="495.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (24 samples, 0.08%)</title><rect x="1072.3" y="821" width="0.9" height="15.0" fill="rgb(208,180,34)" rx="2" ry="2" />
<text  x="1075.30" y="831.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (302 samples, 0.96%)</title><rect x="458.8" y="133" width="11.4" height="15.0" fill="rgb(207,84,25)" rx="2" ry="2" />
<text  x="461.82" y="143.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (9,983 samples, 31.76%)</title><rect x="211.2" y="725" width="374.8" height="15.0" fill="rgb(208,106,0)" rx="2" ry="2" />
<text  x="214.23" y="735.5" >_&lt;core..future..from_generator..GenFuture&lt;T&gt; as co..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="244.2" y="581" width="0.1" height="15.0" fill="rgb(240,112,44)" rx="2" ry="2" />
<text  x="247.15" y="591.5" ></text>
</g>
<g >
<title>serde_json::ser::to_string (863 samples, 2.75%)</title><rect x="1138.6" y="709" width="32.4" height="15.0" fill="rgb(241,156,51)" rx="2" ry="2" />
<text  x="1141.60" y="719.5" >se..</text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert (15 samples, 0.05%)</title><rect x="665.0" y="853" width="0.5" height="15.0" fill="rgb(253,68,28)" rx="2" ry="2" />
<text  x="667.97" y="863.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (689 samples, 2.19%)</title><rect x="410.5" y="149" width="25.8" height="15.0" fill="rgb(222,9,42)" rx="2" ry="2" />
<text  x="413.47" y="159.5" >a..</text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (329 samples, 1.05%)</title><rect x="274.8" y="389" width="12.4" height="15.0" fill="rgb(207,210,4)" rx="2" ry="2" />
<text  x="277.83" y="399.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="1036.1" y="789" width="0.4" height="15.0" fill="rgb(253,13,43)" rx="2" ry="2" />
<text  x="1039.08" y="799.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (45 samples, 0.14%)</title><rect x="1046.4" y="773" width="1.7" height="15.0" fill="rgb(245,217,19)" rx="2" ry="2" />
<text  x="1049.40" y="783.5" ></text>
</g>
<g >
<title>_&lt;swc_common..input..StringInput as swc_common..input..Input&gt;::uncons_while (8 samples, 0.03%)</title><rect x="237.3" y="229" width="0.3" height="15.0" fill="rgb(211,40,13)" rx="2" ry="2" />
<text  x="240.32" y="239.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="17.0" y="997" width="0.1" height="15.0" fill="rgb(254,51,34)" rx="2" ry="2" />
<text  x="19.98" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="217.8" y="645" width="0.2" height="15.0" fill="rgb(223,27,9)" rx="2" ry="2" />
<text  x="220.80" y="655.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..Repr&lt;T&gt; as core..hash..Hash&gt;::hash (10 samples, 0.03%)</title><rect x="835.6" y="805" width="0.4" height="15.0" fill="rgb(244,176,33)" rx="2" ry="2" />
<text  x="838.60" y="815.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Cloned&lt;I&gt; as core..iter..traits..iterator..Iterator&gt;::fold (21 samples, 0.07%)</title><rect x="838.5" y="725" width="0.8" height="15.0" fill="rgb(211,185,27)" rx="2" ry="2" />
<text  x="841.53" y="735.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="1033.4" y="773" width="0.4" height="15.0" fill="rgb(221,8,44)" rx="2" ry="2" />
<text  x="1036.45" y="783.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..raw..RawTable&lt;T&gt; as core..ops..drop..Drop&gt;::drop (10 samples, 0.03%)</title><rect x="658.4" y="501" width="0.3" height="15.0" fill="rgb(210,106,5)" rx="2" ry="2" />
<text  x="661.36" y="511.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (72 samples, 0.23%)</title><rect x="174.7" y="1061" width="2.7" height="15.0" fill="rgb(212,89,37)" rx="2" ry="2" />
<text  x="177.66" y="1071.5" ></text>
</g>
<g >
<title>_&lt;&lt;futures_util..stream..futures_unordered..FuturesUnordered&lt;Fut&gt; as futures_core..stream..Stream&gt;..poll_next..Bomb&lt;Fut&gt; as core..ops..drop..Drop&gt;::drop (4 samples, 0.01%)</title><rect x="617.6" y="677" width="0.2" height="15.0" fill="rgb(209,115,5)" rx="2" ry="2" />
<text  x="620.63" y="687.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (6 samples, 0.02%)</title><rect x="1074.3" y="805" width="0.2" height="15.0" fill="rgb(209,215,19)" rx="2" ry="2" />
<text  x="1077.29" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="198.6" y="1093" width="0.1" height="15.0" fill="rgb(224,181,45)" rx="2" ry="2" />
<text  x="201.61" y="1103.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (46 samples, 0.15%)</title><rect x="1042.6" y="853" width="1.8" height="15.0" fill="rgb(207,132,38)" rx="2" ry="2" />
<text  x="1045.65" y="863.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..valued..Valued as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="75.2" y="1077" width="0.3" height="15.0" fill="rgb(243,67,1)" rx="2" ry="2" />
<text  x="78.17" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="98.8" y="1093" width="0.2" height="15.0" fill="rgb(213,26,54)" rx="2" ry="2" />
<text  x="101.75" y="1103.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="110.2" y="1077" width="0.1" height="15.0" fill="rgb(244,169,1)" rx="2" ry="2" />
<text  x="113.16" y="1087.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (31 samples, 0.10%)</title><rect x="1067.8" y="853" width="1.2" height="15.0" fill="rgb(236,227,7)" rx="2" ry="2" />
<text  x="1070.84" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (70 samples, 0.22%)</title><rect x="582.9" y="565" width="2.6" height="15.0" fill="rgb(237,154,43)" rx="2" ry="2" />
<text  x="585.86" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (237 samples, 0.75%)</title><rect x="649.2" y="533" width="8.9" height="15.0" fill="rgb(210,130,42)" rx="2" ry="2" />
<text  x="652.24" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="99.2" y="1077" width="0.2" height="15.0" fill="rgb(238,162,46)" rx="2" ry="2" />
<text  x="102.20" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (58 samples, 0.18%)</title><rect x="70.7" y="981" width="2.1" height="15.0" fill="rgb(239,55,33)" rx="2" ry="2" />
<text  x="73.67" y="991.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (18 samples, 0.06%)</title><rect x="1068.3" y="805" width="0.7" height="15.0" fill="rgb(243,68,0)" rx="2" ry="2" />
<text  x="1071.32" y="815.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope::new (3 samples, 0.01%)</title><rect x="1090.2" y="837" width="0.1" height="15.0" fill="rgb(253,148,43)" rx="2" ry="2" />
<text  x="1093.17" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (36 samples, 0.11%)</title><rect x="1039.6" y="789" width="1.4" height="15.0" fill="rgb(227,59,33)" rx="2" ry="2" />
<text  x="1042.60" y="799.5" ></text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for alloc..vec..Vec&lt;u8&gt;&gt;::write_all (5 samples, 0.02%)</title><rect x="1170.8" y="517" width="0.2" height="15.0" fill="rgb(214,131,54)" rx="2" ry="2" />
<text  x="1173.82" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (24 samples, 0.08%)</title><rect x="640.5" y="597" width="0.9" height="15.0" fill="rgb(253,153,13)" rx="2" ry="2" />
<text  x="643.49" y="607.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once (17 samples, 0.05%)</title><rect x="1086.6" y="821" width="0.6" height="15.0" fill="rgb(207,96,42)" rx="2" ry="2" />
<text  x="1089.61" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="633.1" y="677" width="0.1" height="15.0" fill="rgb(245,107,45)" rx="2" ry="2" />
<text  x="636.09" y="687.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="836.5" y="741" width="0.1" height="15.0" fill="rgb(233,226,25)" rx="2" ry="2" />
<text  x="839.50" y="751.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (153 samples, 0.49%)</title><rect x="45.9" y="1061" width="5.7" height="15.0" fill="rgb(220,99,46)" rx="2" ry="2" />
<text  x="48.89" y="1071.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner::_{{closure}} (9 samples, 0.03%)</title><rect x="233.9" y="245" width="0.4" height="15.0" fill="rgb(214,169,42)" rx="2" ry="2" />
<text  x="236.94" y="255.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="191.1" y="1141" width="0.5" height="15.0" fill="rgb(224,94,15)" rx="2" ry="2" />
<text  x="194.07" y="1151.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="659.1" y="805" width="0.1" height="15.0" fill="rgb(246,31,48)" rx="2" ry="2" />
<text  x="662.11" y="815.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="1186.0" y="885" width="0.3" height="15.0" fill="rgb(237,46,30)" rx="2" ry="2" />
<text  x="1188.98" y="895.5" ></text>
</g>
<g >
<title>rustls::client::ClientConfig::with_ciphersuites (9 samples, 0.03%)</title><rect x="999.0" y="853" width="0.3" height="15.0" fill="rgb(214,27,18)" rx="2" ry="2" />
<text  x="1001.98" y="863.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (14 samples, 0.04%)</title><rect x="1178.6" y="885" width="0.5" height="15.0" fill="rgb(205,173,0)" rx="2" ry="2" />
<text  x="1181.59" y="895.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="833.2" y="821" width="0.4" height="15.0" fill="rgb(213,203,1)" rx="2" ry="2" />
<text  x="836.20" y="831.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (16 samples, 0.05%)</title><rect x="1058.0" y="869" width="0.6" height="15.0" fill="rgb(233,75,50)" rx="2" ry="2" />
<text  x="1061.00" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (17 samples, 0.05%)</title><rect x="662.0" y="837" width="0.6" height="15.0" fill="rgb(234,31,41)" rx="2" ry="2" />
<text  x="665.00" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="225.3" y="405" width="0.2" height="15.0" fill="rgb(236,71,47)" rx="2" ry="2" />
<text  x="228.27" y="415.5" ></text>
</g>
<g >
<title>tokio::io::driver::Driver::new (46 samples, 0.15%)</title><rect x="202.9" y="1125" width="1.8" height="15.0" fill="rgb(225,23,37)" rx="2" ry="2" />
<text  x="205.93" y="1135.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map (3 samples, 0.01%)</title><rect x="1099.9" y="533" width="0.1" height="15.0" fill="rgb(232,104,8)" rx="2" ry="2" />
<text  x="1102.90" y="543.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.05%)</title><rect x="1076.9" y="837" width="0.6" height="15.0" fill="rgb(230,43,20)" rx="2" ry="2" />
<text  x="1079.88" y="847.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::find_equivalent (12 samples, 0.04%)</title><rect x="545.7" y="213" width="0.4" height="15.0" fill="rgb(235,168,10)" rx="2" ry="2" />
<text  x="548.66" y="223.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,385 samples, 4.41%)</title><rect x="876.4" y="581" width="52.0" height="15.0" fill="rgb(229,129,38)" rx="2" ry="2" />
<text  x="879.44" y="591.5" >alloc..</text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (81 samples, 0.26%)</title><rect x="1103.4" y="565" width="3.0" height="15.0" fill="rgb(213,143,14)" rx="2" ry="2" />
<text  x="1106.35" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 0.09%)</title><rect x="829.3" y="821" width="1.1" height="15.0" fill="rgb(215,6,35)" rx="2" ry="2" />
<text  x="832.33" y="831.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (8 samples, 0.03%)</title><rect x="15.6" y="1029" width="0.3" height="15.0" fill="rgb(207,9,33)" rx="2" ry="2" />
<text  x="18.59" y="1039.5" ></text>
</g>
<g >
<title>deno::flags::permission_args (138 samples, 0.44%)</title><rect x="128.9" y="1141" width="5.1" height="15.0" fill="rgb(221,96,46)" rx="2" ry="2" />
<text  x="131.86" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1171.2" y="709" width="0.1" height="15.0" fill="rgb(236,98,22)" rx="2" ry="2" />
<text  x="1174.15" y="719.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::drop_in_place (314 samples, 1.00%)</title><rect x="647.1" y="741" width="11.8" height="15.0" fill="rgb(235,21,7)" rx="2" ry="2" />
<text  x="650.10" y="751.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::util::CharExt::is_ident_start (5 samples, 0.02%)</title><rect x="234.1" y="181" width="0.2" height="15.0" fill="rgb(207,25,13)" rx="2" ry="2" />
<text  x="237.09" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.02%)</title><rect x="168.8" y="1045" width="0.2" height="15.0" fill="rgb(224,181,44)" rx="2" ry="2" />
<text  x="171.84" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (53 samples, 0.17%)</title><rect x="656.1" y="341" width="2.0" height="15.0" fill="rgb(226,148,38)" rx="2" ry="2" />
<text  x="659.14" y="351.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="87.4" y="1093" width="0.2" height="15.0" fill="rgb(206,213,31)" rx="2" ry="2" />
<text  x="90.41" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="77.8" y="1045" width="0.2" height="15.0" fill="rgb(207,139,34)" rx="2" ry="2" />
<text  x="80.84" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="105.3" y="1061" width="0.1" height="15.0" fill="rgb(226,36,26)" rx="2" ry="2" />
<text  x="108.28" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="187.7" y="1109" width="0.1" height="15.0" fill="rgb(228,72,34)" rx="2" ry="2" />
<text  x="190.65" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (16 samples, 0.05%)</title><rect x="1056.5" y="773" width="0.6" height="15.0" fill="rgb(249,67,10)" rx="2" ry="2" />
<text  x="1059.54" y="783.5" ></text>
</g>
<g >
<title>_&lt;string_cache..atom..Atom&lt;Static&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="226.2" y="357" width="0.2" height="15.0" fill="rgb(207,66,39)" rx="2" ry="2" />
<text  x="229.25" y="367.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (14 samples, 0.04%)</title><rect x="260.1" y="645" width="0.5" height="15.0" fill="rgb(239,127,50)" rx="2" ry="2" />
<text  x="263.11" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1070.2" y="725" width="0.2" height="15.0" fill="rgb(215,75,40)" rx="2" ry="2" />
<text  x="1073.24" y="735.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (42 samples, 0.13%)</title><rect x="1039.4" y="805" width="1.6" height="15.0" fill="rgb(251,53,28)" rx="2" ry="2" />
<text  x="1042.38" y="815.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::trim_left_matches (8 samples, 0.03%)</title><rect x="79.8" y="1141" width="0.3" height="15.0" fill="rgb(217,57,53)" rx="2" ry="2" />
<text  x="82.79" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (4 samples, 0.01%)</title><rect x="649.1" y="469" width="0.1" height="15.0" fill="rgb(232,40,19)" rx="2" ry="2" />
<text  x="652.09" y="479.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="127.9" y="1029" width="0.2" height="15.0" fill="rgb(233,120,49)" rx="2" ry="2" />
<text  x="130.88" y="1039.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="96.4" y="1125" width="0.5" height="15.0" fill="rgb(245,105,48)" rx="2" ry="2" />
<text  x="99.42" y="1135.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="613.7" y="437" width="0.1" height="15.0" fill="rgb(233,150,22)" rx="2" ry="2" />
<text  x="616.72" y="447.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (22 samples, 0.07%)</title><rect x="225.6" y="629" width="0.8" height="15.0" fill="rgb(238,19,13)" rx="2" ry="2" />
<text  x="228.57" y="639.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (97 samples, 0.31%)</title><rect x="130.4" y="1093" width="3.6" height="15.0" fill="rgb(236,40,46)" rx="2" ry="2" />
<text  x="133.36" y="1103.5" ></text>
</g>
<g >
<title>_&lt;http..header..value..HeaderValue as core..str..FromStr&gt;::from_str (11 samples, 0.03%)</title><rect x="834.5" y="869" width="0.5" height="15.0" fill="rgb(217,13,40)" rx="2" ry="2" />
<text  x="837.55" y="879.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (16 samples, 0.05%)</title><rect x="667.7" y="661" width="0.6" height="15.0" fill="rgb(242,212,44)" rx="2" ry="2" />
<text  x="670.75" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (8 samples, 0.03%)</title><rect x="1083.2" y="805" width="0.3" height="15.0" fill="rgb(209,184,48)" rx="2" ry="2" />
<text  x="1086.23" y="815.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (71 samples, 0.23%)</title><rect x="1071.0" y="885" width="2.7" height="15.0" fill="rgb(253,64,49)" rx="2" ry="2" />
<text  x="1074.03" y="895.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="1178.0" y="821" width="0.1" height="15.0" fill="rgb(209,85,1)" rx="2" ry="2" />
<text  x="1180.99" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="617.4" y="469" width="0.2" height="15.0" fill="rgb(205,2,33)" rx="2" ry="2" />
<text  x="620.44" y="479.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="612.8" y="453" width="0.3" height="15.0" fill="rgb(230,87,39)" rx="2" ry="2" />
<text  x="615.82" y="463.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (46 samples, 0.15%)</title><rect x="1072.0" y="869" width="1.7" height="15.0" fill="rgb(251,92,7)" rx="2" ry="2" />
<text  x="1074.97" y="879.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize::_{{closure}} (3 samples, 0.01%)</title><rect x="1068.5" y="725" width="0.1" height="15.0" fill="rgb(250,214,52)" rx="2" ry="2" />
<text  x="1071.51" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="13.5" y="1045" width="0.1" height="15.0" fill="rgb(228,110,30)" rx="2" ry="2" />
<text  x="16.49" y="1055.5" ></text>
</g>
<g >
<title>alloc::borrow::Cow&lt;B&gt;::into_owned (9 samples, 0.03%)</title><rect x="235.3" y="245" width="0.3" height="15.0" fill="rgb(250,92,53)" rx="2" ry="2" />
<text  x="238.26" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (15 samples, 0.05%)</title><rect x="73.6" y="1173" width="0.6" height="15.0" fill="rgb(234,145,8)" rx="2" ry="2" />
<text  x="76.60" y="1183.5" ></text>
</g>
<g >
<title>core::mem::replace (7 samples, 0.02%)</title><rect x="1088.7" y="773" width="0.3" height="15.0" fill="rgb(219,204,47)" rx="2" ry="2" />
<text  x="1091.75" y="783.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (14 samples, 0.04%)</title><rect x="659.3" y="917" width="0.5" height="15.0" fill="rgb(232,179,25)" rx="2" ry="2" />
<text  x="662.26" y="927.5" ></text>
</g>
<g >
<title>clap::app::App::arg (55 samples, 0.17%)</title><rect x="74.9" y="1157" width="2.0" height="15.0" fill="rgb(247,154,51)" rx="2" ry="2" />
<text  x="77.87" y="1167.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (25 samples, 0.08%)</title><rect x="1076.6" y="869" width="0.9" height="15.0" fill="rgb(221,64,39)" rx="2" ry="2" />
<text  x="1079.58" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="106.6" y="1093" width="0.2" height="15.0" fill="rgb(236,3,34)" rx="2" ry="2" />
<text  x="109.63" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="177.4" y="1093" width="0.3" height="15.0" fill="rgb(218,65,6)" rx="2" ry="2" />
<text  x="180.44" y="1103.5" ></text>
</g>
<g >
<title>swc_ecma_visit::visit_expr (5 samples, 0.02%)</title><rect x="238.9" y="533" width="0.2" height="15.0" fill="rgb(243,205,4)" rx="2" ry="2" />
<text  x="241.93" y="543.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_val_to_arg (48 samples, 0.15%)</title><rect x="15.3" y="1093" width="1.8" height="15.0" fill="rgb(223,147,52)" rx="2" ry="2" />
<text  x="18.29" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (18 samples, 0.06%)</title><rect x="1114.7" y="677" width="0.7" height="15.0" fill="rgb(226,49,11)" rx="2" ry="2" />
<text  x="1117.73" y="687.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (5,977 samples, 19.02%)</title><rect x="321.7" y="405" width="224.4" height="15.0" fill="rgb(244,197,29)" rx="2" ry="2" />
<text  x="324.72" y="415.5" >serde::de::MapAccess::next_en..</text>
</g>
<g >
<title>core::ptr::drop_in_place (68 samples, 0.22%)</title><rect x="224.4" y="661" width="2.6" height="15.0" fill="rgb(221,69,21)" rx="2" ry="2" />
<text  x="227.44" y="671.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="98.7" y="1125" width="0.3" height="15.0" fill="rgb(227,212,43)" rx="2" ry="2" />
<text  x="101.68" y="1135.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (108 samples, 0.34%)</title><rect x="1131.0" y="597" width="4.1" height="15.0" fill="rgb(228,60,39)" rx="2" ry="2" />
<text  x="1134.02" y="607.5" ></text>
</g>
<g >
<title>deno::disk_cache::DiskCache::get_cache_filename (48 samples, 0.15%)</title><rect x="241.8" y="677" width="1.8" height="15.0" fill="rgb(229,23,35)" rx="2" ry="2" />
<text  x="244.79" y="687.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (42 samples, 0.13%)</title><rect x="31.5" y="981" width="1.6" height="15.0" fill="rgb(225,54,50)" rx="2" ry="2" />
<text  x="34.55" y="991.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="585.6" y="549" width="0.1" height="15.0" fill="rgb(210,36,39)" rx="2" ry="2" />
<text  x="588.56" y="559.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="608.0" y="533" width="0.2" height="15.0" fill="rgb(217,7,52)" rx="2" ry="2" />
<text  x="610.98" y="543.5" ></text>
</g>
<g >
<title>_&lt;core..str..pattern..CharPredicateSearcher&lt;F&gt; as core..str..pattern..Searcher&gt;::next_reject (4 samples, 0.01%)</title><rect x="105.6" y="1077" width="0.1" height="15.0" fill="rgb(237,197,1)" rx="2" ry="2" />
<text  x="108.58" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (71 samples, 0.23%)</title><rect x="639.1" y="789" width="2.7" height="15.0" fill="rgb(217,71,45)" rx="2" ry="2" />
<text  x="642.14" y="799.5" ></text>
</g>
<g >
<title>clap::app::usage::create_help_usage (141 samples, 0.45%)</title><rect x="18.3" y="1045" width="5.3" height="15.0" fill="rgb(247,32,23)" rx="2" ry="2" />
<text  x="21.30" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (9 samples, 0.03%)</title><rect x="1003.7" y="741" width="0.4" height="15.0" fill="rgb(226,72,28)" rx="2" ry="2" />
<text  x="1006.71" y="751.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (116 samples, 0.37%)</title><rect x="1107.4" y="613" width="4.3" height="15.0" fill="rgb(214,84,35)" rx="2" ry="2" />
<text  x="1110.37" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1106.6" y="565" width="0.1" height="15.0" fill="rgb(213,6,51)" rx="2" ry="2" />
<text  x="1109.62" y="575.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::set_slot (5 samples, 0.02%)</title><rect x="1094.6" y="869" width="0.2" height="15.0" fill="rgb(234,58,17)" rx="2" ry="2" />
<text  x="1097.60" y="879.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (1,664 samples, 5.29%)</title><rect x="765.5" y="837" width="62.4" height="15.0" fill="rgb(208,87,38)" rx="2" ry="2" />
<text  x="768.47" y="847.5" >alloc:..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="575.3" y="613" width="0.1" height="15.0" fill="rgb(215,175,0)" rx="2" ry="2" />
<text  x="578.32" y="623.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (6 samples, 0.02%)</title><rect x="1057.8" y="869" width="0.2" height="15.0" fill="rgb(250,211,20)" rx="2" ry="2" />
<text  x="1060.78" y="879.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="290.0" y="309" width="0.2" height="15.0" fill="rgb(242,193,46)" rx="2" ry="2" />
<text  x="293.03" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="619.6" y="757" width="0.1" height="15.0" fill="rgb(216,6,27)" rx="2" ry="2" />
<text  x="622.58" y="767.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (22 samples, 0.07%)</title><rect x="159.6" y="997" width="0.8" height="15.0" fill="rgb(226,28,5)" rx="2" ry="2" />
<text  x="162.57" y="1007.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="274.6" y="245" width="0.2" height="15.0" fill="rgb(240,37,33)" rx="2" ry="2" />
<text  x="277.64" y="255.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (30 samples, 0.10%)</title><rect x="242.3" y="613" width="1.1" height="15.0" fill="rgb(228,136,4)" rx="2" ry="2" />
<text  x="245.28" y="623.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (8 samples, 0.03%)</title><rect x="117.1" y="1029" width="0.3" height="15.0" fill="rgb(230,191,5)" rx="2" ry="2" />
<text  x="120.15" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="645.7" y="805" width="0.3" height="15.0" fill="rgb(230,57,18)" rx="2" ry="2" />
<text  x="648.67" y="815.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="244.1" y="613" width="0.2" height="15.0" fill="rgb(211,220,4)" rx="2" ry="2" />
<text  x="247.08" y="623.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope&lt;()&gt;::cast_local (4 samples, 0.01%)</title><rect x="1180.1" y="869" width="0.1" height="15.0" fill="rgb(205,184,35)" rx="2" ry="2" />
<text  x="1183.05" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="582.3" y="437" width="0.1" height="15.0" fill="rgb(218,117,0)" rx="2" ry="2" />
<text  x="585.34" y="447.5" ></text>
</g>
<g >
<title>deno::module_graph::ModuleGraphLoader::download_module (54 samples, 0.17%)</title><rect x="218.1" y="693" width="2.0" height="15.0" fill="rgb(237,161,5)" rx="2" ry="2" />
<text  x="221.06" y="703.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (14 samples, 0.04%)</title><rect x="218.9" y="677" width="0.5" height="15.0" fill="rgb(233,164,5)" rx="2" ry="2" />
<text  x="221.89" y="687.5" ></text>
</g>
<g >
<title>_&lt;mio..sys..unix..io..Io as mio..event_imp..Evented&gt;::register (3 samples, 0.01%)</title><rect x="203.3" y="1077" width="0.1" height="15.0" fill="rgb(221,101,40)" rx="2" ry="2" />
<text  x="206.27" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="137.0" y="1061" width="0.2" height="15.0" fill="rgb(205,74,42)" rx="2" ry="2" />
<text  x="139.97" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="634.9" y="821" width="0.1" height="15.0" fill="rgb(245,56,33)" rx="2" ry="2" />
<text  x="637.90" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (12 samples, 0.04%)</title><rect x="292.7" y="277" width="0.5" height="15.0" fill="rgb(216,21,37)" rx="2" ry="2" />
<text  x="295.73" y="287.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (14 samples, 0.04%)</title><rect x="102.8" y="1093" width="0.5" height="15.0" fill="rgb(206,216,15)" rx="2" ry="2" />
<text  x="105.77" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="101.8" y="1093" width="0.3" height="15.0" fill="rgb(242,8,9)" rx="2" ry="2" />
<text  x="104.75" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="200.0" y="1093" width="0.2" height="15.0" fill="rgb(231,65,41)" rx="2" ry="2" />
<text  x="203.04" y="1103.5" ></text>
</g>
<g >
<title>_&lt;serde_json..ser..Compound&lt;W,F&gt; as serde..ser..SerializeMap&gt;::serialize_key (12 samples, 0.04%)</title><rect x="1117.7" y="629" width="0.4" height="15.0" fill="rgb(229,176,4)" rx="2" ry="2" />
<text  x="1120.66" y="639.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="227.6" y="613" width="0.6" height="15.0" fill="rgb(227,223,27)" rx="2" ry="2" />
<text  x="230.63" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.03%)</title><rect x="179.6" y="1061" width="0.4" height="15.0" fill="rgb(226,35,24)" rx="2" ry="2" />
<text  x="182.62" y="1071.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (16 samples, 0.05%)</title><rect x="126.5" y="1045" width="0.6" height="15.0" fill="rgb(209,187,31)" rx="2" ry="2" />
<text  x="129.46" y="1055.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (49 samples, 0.16%)</title><rect x="1004.2" y="885" width="1.8" height="15.0" fill="rgb(232,106,49)" rx="2" ry="2" />
<text  x="1007.20" y="895.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.05%)</title><rect x="204.1" y="997" width="0.6" height="15.0" fill="rgb(232,62,5)" rx="2" ry="2" />
<text  x="207.06" y="1007.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="619.9" y="773" width="0.2" height="15.0" fill="rgb(239,118,25)" rx="2" ry="2" />
<text  x="622.92" y="783.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (19 samples, 0.06%)</title><rect x="1065.9" y="869" width="0.7" height="15.0" fill="rgb(225,121,25)" rx="2" ry="2" />
<text  x="1068.88" y="879.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="601.1" y="709" width="0.2" height="15.0" fill="rgb(243,52,12)" rx="2" ry="2" />
<text  x="604.15" y="719.5" ></text>
</g>
<g >
<title>_&lt;char as unicode_xid..UnicodeXID&gt;::is_xid_continue (5 samples, 0.02%)</title><rect x="237.4" y="181" width="0.2" height="15.0" fill="rgb(243,122,54)" rx="2" ry="2" />
<text  x="240.43" y="191.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (16 samples, 0.05%)</title><rect x="1075.2" y="773" width="0.6" height="15.0" fill="rgb(220,186,25)" rx="2" ry="2" />
<text  x="1078.19" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.03%)</title><rect x="64.7" y="1141" width="0.4" height="15.0" fill="rgb(213,202,42)" rx="2" ry="2" />
<text  x="67.66" y="1151.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..hash..Hash&gt;::hash (6 samples, 0.02%)</title><rect x="219.6" y="597" width="0.2" height="15.0" fill="rgb(250,18,22)" rx="2" ry="2" />
<text  x="222.60" y="607.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::Parser&lt;I&gt;::parse_module (213 samples, 0.68%)</title><rect x="231.2" y="645" width="8.0" height="15.0" fill="rgb(250,196,17)" rx="2" ry="2" />
<text  x="234.24" y="655.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (9 samples, 0.03%)</title><rect x="83.7" y="1093" width="0.4" height="15.0" fill="rgb(205,57,33)" rx="2" ry="2" />
<text  x="86.73" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="270.0" y="469" width="0.4" height="15.0" fill="rgb(238,178,8)" rx="2" ry="2" />
<text  x="273.02" y="479.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="191.6" y="1109" width="0.3" height="15.0" fill="rgb(243,24,9)" rx="2" ry="2" />
<text  x="194.63" y="1119.5" ></text>
</g>
<g >
<title>rusty_v8::scope::TryCatch&lt;P&gt;::new (3 samples, 0.01%)</title><rect x="619.2" y="821" width="0.1" height="15.0" fill="rgb(211,39,6)" rx="2" ry="2" />
<text  x="622.17" y="831.5" ></text>
</g>
<g >
<title>core::ptr::non_null::NonNull&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="1095.3" y="789" width="0.1" height="15.0" fill="rgb(238,227,33)" rx="2" ry="2" />
<text  x="1098.32" y="799.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..Repr&lt;T&gt; as core..hash..Hash&gt;::hash (10 samples, 0.03%)</title><rect x="664.5" y="805" width="0.4" height="15.0" fill="rgb(230,24,11)" rx="2" ry="2" />
<text  x="667.52" y="815.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (20 samples, 0.06%)</title><rect x="1082.8" y="853" width="0.7" height="15.0" fill="rgb(248,26,35)" rx="2" ry="2" />
<text  x="1085.78" y="863.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="64.0" y="1077" width="0.3" height="15.0" fill="rgb(223,143,34)" rx="2" ry="2" />
<text  x="66.99" y="1087.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="1001.0" y="725" width="0.1" height="15.0" fill="rgb(249,107,33)" rx="2" ry="2" />
<text  x="1003.97" y="735.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="613.2" y="517" width="0.3" height="15.0" fill="rgb(253,134,11)" rx="2" ry="2" />
<text  x="616.23" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="261.2" y="533" width="0.2" height="15.0" fill="rgb(226,201,0)" rx="2" ry="2" />
<text  x="264.23" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.06%)</title><rect x="610.4" y="549" width="0.7" height="15.0" fill="rgb(249,124,35)" rx="2" ry="2" />
<text  x="613.42" y="559.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (22 samples, 0.07%)</title><rect x="1071.1" y="869" width="0.9" height="15.0" fill="rgb(250,140,24)" rx="2" ry="2" />
<text  x="1074.14" y="879.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as core..fmt..Display&gt;::fmt (12 samples, 0.04%)</title><rect x="614.4" y="549" width="0.5" height="15.0" fill="rgb(233,184,45)" rx="2" ry="2" />
<text  x="617.44" y="559.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="1138.4" y="693" width="0.2" height="15.0" fill="rgb(244,193,45)" rx="2" ry="2" />
<text  x="1141.38" y="703.5" ></text>
</g>
<g >
<title>encoding_rs::Encoding::for_label (9 samples, 0.03%)</title><rect x="224.0" y="629" width="0.4" height="15.0" fill="rgb(252,225,17)" rx="2" ry="2" />
<text  x="227.03" y="639.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2,373 samples, 7.55%)</title><rect x="669.0" y="757" width="89.1" height="15.0" fill="rgb(224,107,24)" rx="2" ry="2" />
<text  x="671.98" y="767.5" >_&lt;alloc..v..</text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="601.6" y="629" width="0.4" height="15.0" fill="rgb(207,171,18)" rx="2" ry="2" />
<text  x="604.63" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="828.2" y="773" width="0.3" height="15.0" fill="rgb(246,29,13)" rx="2" ry="2" />
<text  x="831.24" y="783.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (31 samples, 0.10%)</title><rect x="269.2" y="581" width="1.2" height="15.0" fill="rgb(232,124,43)" rx="2" ry="2" />
<text  x="272.19" y="591.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::fold (22 samples, 0.07%)</title><rect x="21.8" y="917" width="0.9" height="15.0" fill="rgb(211,214,28)" rx="2" ry="2" />
<text  x="24.83" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="263.1" y="517" width="0.2" height="15.0" fill="rgb(245,146,29)" rx="2" ry="2" />
<text  x="266.15" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="1088.1" y="741" width="0.2" height="15.0" fill="rgb(236,138,5)" rx="2" ry="2" />
<text  x="1091.15" y="751.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (76 samples, 0.24%)</title><rect x="1001.3" y="885" width="2.9" height="15.0" fill="rgb(222,19,42)" rx="2" ry="2" />
<text  x="1004.31" y="895.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="97.0" y="1077" width="0.2" height="15.0" fill="rgb(219,131,25)" rx="2" ry="2" />
<text  x="100.02" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="601.9" y="533" width="0.1" height="15.0" fill="rgb(242,84,27)" rx="2" ry="2" />
<text  x="604.86" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.03%)</title><rect x="219.0" y="629" width="0.4" height="15.0" fill="rgb(228,147,15)" rx="2" ry="2" />
<text  x="222.00" y="639.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="139.2" y="1109" width="0.4" height="15.0" fill="rgb(236,114,24)" rx="2" ry="2" />
<text  x="142.22" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="241.3" y="693" width="0.4" height="15.0" fill="rgb(240,156,3)" rx="2" ry="2" />
<text  x="244.30" y="703.5" ></text>
</g>
<g >
<title>unicode_xid::tables::derived_property::XID_Start (3 samples, 0.01%)</title><rect x="238.7" y="309" width="0.1" height="15.0" fill="rgb(227,206,45)" rx="2" ry="2" />
<text  x="241.71" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (66 samples, 0.21%)</title><rect x="224.5" y="645" width="2.5" height="15.0" fill="rgb(208,211,40)" rx="2" ry="2" />
<text  x="227.52" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="658.7" y="501" width="0.2" height="15.0" fill="rgb(220,142,15)" rx="2" ry="2" />
<text  x="661.74" y="511.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..Visitor&gt;::visit_str (9 samples, 0.03%)</title><rect x="268.8" y="517" width="0.4" height="15.0" fill="rgb(231,169,32)" rx="2" ry="2" />
<text  x="271.82" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (20 samples, 0.06%)</title><rect x="1041.2" y="837" width="0.7" height="15.0" fill="rgb(223,94,45)" rx="2" ry="2" />
<text  x="1044.18" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="621.5" y="725" width="0.1" height="15.0" fill="rgb(231,134,0)" rx="2" ry="2" />
<text  x="624.46" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1137.8" y="485" width="0.1" height="15.0" fill="rgb(230,165,9)" rx="2" ry="2" />
<text  x="1140.82" y="495.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as core..fmt..Display&gt;::fmt (13 samples, 0.04%)</title><rect x="587.6" y="677" width="0.4" height="15.0" fill="rgb(230,170,14)" rx="2" ry="2" />
<text  x="590.55" y="687.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_string (24 samples, 0.08%)</title><rect x="547.3" y="229" width="0.9" height="15.0" fill="rgb(208,207,25)" rx="2" ry="2" />
<text  x="550.27" y="239.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="162.6" y="1077" width="0.3" height="15.0" fill="rgb(212,78,3)" rx="2" ry="2" />
<text  x="165.65" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (13 samples, 0.04%)</title><rect x="607.7" y="597" width="0.5" height="15.0" fill="rgb(233,121,18)" rx="2" ry="2" />
<text  x="610.68" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 0.01%)</title><rect x="1117.1" y="581" width="0.1" height="15.0" fill="rgb(247,135,8)" rx="2" ry="2" />
<text  x="1120.09" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="268.0" y="565" width="0.1" height="15.0" fill="rgb(244,102,49)" rx="2" ry="2" />
<text  x="270.99" y="575.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (14 samples, 0.04%)</title><rect x="550.3" y="245" width="0.5" height="15.0" fill="rgb(240,91,36)" rx="2" ry="2" />
<text  x="553.27" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="130.0" y="1061" width="0.4" height="15.0" fill="rgb(247,95,38)" rx="2" ry="2" />
<text  x="133.02" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.14%)</title><rect x="347.7" y="149" width="1.6" height="15.0" fill="rgb(228,93,42)" rx="2" ry="2" />
<text  x="350.73" y="159.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::json_map (871 samples, 2.77%)</title><rect x="1138.3" y="725" width="32.7" height="15.0" fill="rgb(240,94,17)" rx="2" ry="2" />
<text  x="1141.30" y="735.5" >de..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="834.0" y="837" width="0.3" height="15.0" fill="rgb(205,56,20)" rx="2" ry="2" />
<text  x="836.98" y="847.5" ></text>
</g>
<g >
<title>_&lt;core..pin..Pin&lt;P&gt; as core..future..future..Future&gt;::poll (10,088 samples, 32.10%)</title><rect x="211.0" y="805" width="378.8" height="15.0" fill="rgb(212,155,14)" rx="2" ry="2" />
<text  x="214.04" y="815.5" >_&lt;core..pin..Pin&lt;P&gt; as core..future..future..Future..</text>
</g>
<g >
<title>_&lt;deno..tsc.._..&lt;impl serde..de..Deserialize for deno..tsc..CompiledFileMetadata&gt;..deserialize..__Visitor as serde..de..Visitor&gt;::visit_map (25 samples, 0.08%)</title><rect x="266.4" y="565" width="1.0" height="15.0" fill="rgb(228,149,39)" rx="2" ry="2" />
<text  x="269.42" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="613.7" y="453" width="0.1" height="15.0" fill="rgb(240,100,47)" rx="2" ry="2" />
<text  x="616.68" y="463.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (16 samples, 0.05%)</title><rect x="998.3" y="837" width="0.6" height="15.0" fill="rgb(225,98,44)" rx="2" ry="2" />
<text  x="1001.35" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.03%)</title><rect x="585.1" y="469" width="0.4" height="15.0" fill="rgb(236,119,26)" rx="2" ry="2" />
<text  x="588.11" y="479.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (8 samples, 0.03%)</title><rect x="19.2" y="933" width="0.3" height="15.0" fill="rgb(214,30,34)" rx="2" ry="2" />
<text  x="22.24" y="943.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (106 samples, 0.34%)</title><rect x="1009.0" y="837" width="4.0" height="15.0" fill="rgb(254,13,27)" rx="2" ry="2" />
<text  x="1012.01" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (24 samples, 0.08%)</title><rect x="272.8" y="325" width="0.9" height="15.0" fill="rgb(212,71,22)" rx="2" ry="2" />
<text  x="275.76" y="335.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.05%)</title><rect x="1188.7" y="757" width="0.6" height="15.0" fill="rgb(236,198,24)" rx="2" ry="2" />
<text  x="1191.69" y="767.5" ></text>
</g>
<g >
<title>_&lt;deno_core..modules..RecursiveModuleLoad as futures_core..stream..Stream&gt;::poll_next (166 samples, 0.53%)</title><rect x="611.6" y="757" width="6.2" height="15.0" fill="rgb(246,202,24)" rx="2" ry="2" />
<text  x="614.58" y="767.5" ></text>
</g>
<g >
<title>_&lt;futures_util..stream..futures_unordered..FuturesUnordered&lt;Fut&gt; as futures_core..stream..Stream&gt;::poll_next (176 samples, 0.56%)</title><rect x="211.5" y="661" width="6.6" height="15.0" fill="rgb(244,1,33)" rx="2" ry="2" />
<text  x="214.45" y="671.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Display&gt;::fmt (10 samples, 0.03%)</title><rect x="260.3" y="581" width="0.3" height="15.0" fill="rgb(206,47,9)" rx="2" ry="2" />
<text  x="263.26" y="591.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="13.3" y="1109" width="0.3" height="15.0" fill="rgb(227,225,51)" rx="2" ry="2" />
<text  x="16.34" y="1119.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="94.1" y="1061" width="0.1" height="15.0" fill="rgb(225,129,8)" rx="2" ry="2" />
<text  x="97.10" y="1071.5" ></text>
</g>
<g >
<title>clap::app::App::arg (86 samples, 0.27%)</title><rect x="163.3" y="1141" width="3.3" height="15.0" fill="rgb(221,228,47)" rx="2" ry="2" />
<text  x="166.32" y="1151.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (15 samples, 0.05%)</title><rect x="1067.3" y="773" width="0.5" height="15.0" fill="rgb(220,195,23)" rx="2" ry="2" />
<text  x="1070.27" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (1,661 samples, 5.28%)</title><rect x="695.1" y="597" width="62.4" height="15.0" fill="rgb(232,160,47)" rx="2" ry="2" />
<text  x="698.11" y="607.5" >alloc:..</text>
</g>
<g >
<title>_&lt;deno_core..bindings..EXTERNAL_REFERENCES as core..ops..deref..Deref&gt;::deref (18 samples, 0.06%)</title><rect x="1086.6" y="837" width="0.6" height="15.0" fill="rgb(229,44,15)" rx="2" ry="2" />
<text  x="1089.57" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1098.5" y="725" width="0.2" height="15.0" fill="rgb(246,194,27)" rx="2" ry="2" />
<text  x="1101.51" y="735.5" ></text>
</g>
<g >
<title>deno::tsc::TsCompiler::get_compiled_source_file (58 samples, 0.18%)</title><rect x="615.4" y="581" width="2.2" height="15.0" fill="rgb(250,152,17)" rx="2" ry="2" />
<text  x="618.41" y="591.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.03%)</title><rect x="100.0" y="1077" width="0.3" height="15.0" fill="rgb(249,58,34)" rx="2" ry="2" />
<text  x="103.03" y="1087.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="24.5" y="1077" width="0.2" height="15.0" fill="rgb(216,44,8)" rx="2" ry="2" />
<text  x="27.53" y="1087.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (7 samples, 0.02%)</title><rect x="1086.2" y="885" width="0.2" height="15.0" fill="rgb(249,111,15)" rx="2" ry="2" />
<text  x="1089.16" y="895.5" ></text>
</g>
<g >
<title>rusty_v8::scope::CallbackScope::new (19 samples, 0.06%)</title><rect x="1171.8" y="789" width="0.7" height="15.0" fill="rgb(233,183,49)" rx="2" ry="2" />
<text  x="1174.79" y="799.5" ></text>
</g>
<g >
<title>rustls::client::ClientConfig::set_protocols (31 samples, 0.10%)</title><rect x="829.2" y="869" width="1.2" height="15.0" fill="rgb(217,36,3)" rx="2" ry="2" />
<text  x="832.22" y="879.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.04%)</title><rect x="1074.1" y="837" width="0.4" height="15.0" fill="rgb(232,58,40)" rx="2" ry="2" />
<text  x="1077.07" y="847.5" ></text>
</g>
<g >
<title>unicode_xid::tables::derived_property::XID_Continue (4 samples, 0.01%)</title><rect x="237.5" y="165" width="0.1" height="15.0" fill="rgb(210,156,7)" rx="2" ry="2" />
<text  x="240.47" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="127.9" y="1013" width="0.2" height="15.0" fill="rgb(230,79,10)" rx="2" ry="2" />
<text  x="130.92" y="1023.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="269.5" y="437" width="0.3" height="15.0" fill="rgb(222,84,29)" rx="2" ry="2" />
<text  x="272.53" y="447.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (35 samples, 0.11%)</title><rect x="10.7" y="1157" width="1.3" height="15.0" fill="rgb(224,13,1)" rx="2" ry="2" />
<text  x="13.68" y="1167.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="216.9" y="453" width="0.1" height="15.0" fill="rgb(218,133,9)" rx="2" ry="2" />
<text  x="219.93" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="1177.3" y="773" width="0.2" height="15.0" fill="rgb(224,71,32)" rx="2" ry="2" />
<text  x="1180.31" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="1177.4" y="757" width="0.1" height="15.0" fill="rgb(219,34,9)" rx="2" ry="2" />
<text  x="1180.42" y="767.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="184.9" y="1029" width="0.3" height="15.0" fill="rgb(246,217,15)" rx="2" ry="2" />
<text  x="187.91" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (13 samples, 0.04%)</title><rect x="1165.8" y="421" width="0.5" height="15.0" fill="rgb(221,159,22)" rx="2" ry="2" />
<text  x="1168.79" y="431.5" ></text>
</g>
<g >
<title>_&lt;deno_core..module_specifier..ModuleSpecifier as core..fmt..Display&gt;::fmt (12 samples, 0.04%)</title><rect x="262.1" y="597" width="0.4" height="15.0" fill="rgb(220,14,23)" rx="2" ry="2" />
<text  x="265.10" y="607.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.02%)</title><rect x="217.5" y="517" width="0.3" height="15.0" fill="rgb(250,221,9)" rx="2" ry="2" />
<text  x="220.50" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::free_buckets (6 samples, 0.02%)</title><rect x="657.7" y="117" width="0.2" height="15.0" fill="rgb(212,3,11)" rx="2" ry="2" />
<text  x="660.68" y="127.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="117.9" y="1061" width="0.1" height="15.0" fill="rgb(232,126,12)" rx="2" ry="2" />
<text  x="120.86" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="635.2" y="821" width="0.1" height="15.0" fill="rgb(205,159,9)" rx="2" ry="2" />
<text  x="638.16" y="831.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (218 samples, 0.69%)</title><rect x="1158.1" y="533" width="8.2" height="15.0" fill="rgb(210,151,41)" rx="2" ry="2" />
<text  x="1161.09" y="543.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.02%)</title><rect x="1065.5" y="853" width="0.2" height="15.0" fill="rgb(230,226,12)" rx="2" ry="2" />
<text  x="1068.47" y="863.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (14 samples, 0.04%)</title><rect x="548.5" y="229" width="0.5" height="15.0" fill="rgb(233,51,2)" rx="2" ry="2" />
<text  x="551.47" y="239.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::new (5 samples, 0.02%)</title><rect x="63.6" y="1141" width="0.2" height="15.0" fill="rgb(230,21,17)" rx="2" ry="2" />
<text  x="66.61" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.03%)</title><rect x="621.3" y="773" width="0.3" height="15.0" fill="rgb(249,187,8)" rx="2" ry="2" />
<text  x="624.31" y="783.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="206.4" y="1109" width="0.2" height="15.0" fill="rgb(222,152,38)" rx="2" ry="2" />
<text  x="209.39" y="1119.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner::_{{closure}} (41 samples, 0.13%)</title><rect x="234.4" y="421" width="1.5" height="15.0" fill="rgb(227,117,12)" rx="2" ry="2" />
<text  x="237.35" y="431.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.01%)</title><rect x="95.0" y="1045" width="0.1" height="15.0" fill="rgb(230,83,21)" rx="2" ry="2" />
<text  x="98.03" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="217.6" y="469" width="0.2" height="15.0" fill="rgb(247,39,49)" rx="2" ry="2" />
<text  x="220.61" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="1063.6" y="741" width="0.2" height="15.0" fill="rgb(218,135,10)" rx="2" ry="2" />
<text  x="1066.59" y="751.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="87.7" y="1125" width="0.3" height="15.0" fill="rgb(225,43,3)" rx="2" ry="2" />
<text  x="90.71" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="1002.1" y="805" width="0.6" height="15.0" fill="rgb(232,74,54)" rx="2" ry="2" />
<text  x="1005.14" y="815.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (345 samples, 1.10%)</title><rect x="336.4" y="261" width="12.9" height="15.0" fill="rgb(218,69,25)" rx="2" ry="2" />
<text  x="339.39" y="271.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="110.5" y="1125" width="0.4" height="15.0" fill="rgb(224,92,5)" rx="2" ry="2" />
<text  x="113.46" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (258 samples, 0.82%)</title><rect x="486.6" y="133" width="9.7" height="15.0" fill="rgb(244,74,53)" rx="2" ry="2" />
<text  x="489.64" y="143.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (4 samples, 0.01%)</title><rect x="287.3" y="357" width="0.1" height="15.0" fill="rgb(235,60,9)" rx="2" ry="2" />
<text  x="290.25" y="367.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (344 samples, 1.09%)</title><rect x="483.4" y="165" width="12.9" height="15.0" fill="rgb(253,202,31)" rx="2" ry="2" />
<text  x="486.41" y="175.5" ></text>
</g>
<g >
<title>clap::app::usage::get_required_usage_from (112 samples, 0.36%)</title><rect x="19.0" y="1029" width="4.2" height="15.0" fill="rgb(247,165,14)" rx="2" ry="2" />
<text  x="22.01" y="1039.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert::_{{closure}} (7 samples, 0.02%)</title><rect x="1068.6" y="757" width="0.3" height="15.0" fill="rgb(228,186,5)" rx="2" ry="2" />
<text  x="1071.62" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="1185.6" y="853" width="0.3" height="15.0" fill="rgb(233,105,8)" rx="2" ry="2" />
<text  x="1188.57" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (554 samples, 1.76%)</title><rect x="736.7" y="533" width="20.8" height="15.0" fill="rgb(219,193,17)" rx="2" ry="2" />
<text  x="739.67" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="590.1" y="725" width="0.2" height="15.0" fill="rgb(213,58,17)" rx="2" ry="2" />
<text  x="593.11" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="90.8" y="1093" width="0.5" height="15.0" fill="rgb(213,185,27)" rx="2" ry="2" />
<text  x="93.83" y="1103.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="104.7" y="1077" width="0.3" height="15.0" fill="rgb(209,29,4)" rx="2" ry="2" />
<text  x="107.68" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.03%)</title><rect x="267.9" y="613" width="0.4" height="15.0" fill="rgb(209,48,46)" rx="2" ry="2" />
<text  x="270.88" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.09%)</title><rect x="1022.7" y="709" width="1.1" height="15.0" fill="rgb(208,46,33)" rx="2" ry="2" />
<text  x="1025.75" y="719.5" ></text>
</g>
<g >
<title>deno::permissions::Permissions::allow_all (3 samples, 0.01%)</title><rect x="589.8" y="789" width="0.1" height="15.0" fill="rgb(244,23,52)" rx="2" ry="2" />
<text  x="592.81" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="139.5" y="997" width="0.1" height="15.0" fill="rgb(244,108,35)" rx="2" ry="2" />
<text  x="142.48" y="1007.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (7 samples, 0.02%)</title><rect x="1076.0" y="821" width="0.3" height="15.0" fill="rgb(246,30,2)" rx="2" ry="2" />
<text  x="1079.02" y="831.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::fold (23 samples, 0.07%)</title><rect x="21.8" y="933" width="0.9" height="15.0" fill="rgb(236,187,19)" rx="2" ry="2" />
<text  x="24.79" y="943.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (9 samples, 0.03%)</title><rect x="1054.6" y="709" width="0.3" height="15.0" fill="rgb(208,35,1)" rx="2" ry="2" />
<text  x="1057.58" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="1078.7" y="741" width="0.5" height="15.0" fill="rgb(221,121,42)" rx="2" ry="2" />
<text  x="1081.72" y="751.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_subscripts (13 samples, 0.04%)</title><rect x="233.8" y="309" width="0.5" height="15.0" fill="rgb(222,108,53)" rx="2" ry="2" />
<text  x="236.79" y="319.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::mod_new (69 samples, 0.22%)</title><rect x="619.7" y="821" width="2.6" height="15.0" fill="rgb(249,50,2)" rx="2" ry="2" />
<text  x="622.69" y="831.5" ></text>
</g>
<g >
<title>reqwest::async_impl::client::ClientBuilder::build::user_agent (17 samples, 0.05%)</title><rect x="666.3" y="869" width="0.7" height="15.0" fill="rgb(208,184,1)" rx="2" ry="2" />
<text  x="669.32" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="191.4" y="997" width="0.1" height="15.0" fill="rgb(240,68,12)" rx="2" ry="2" />
<text  x="194.41" y="1007.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="1171.1" y="741" width="0.2" height="15.0" fill="rgb(248,56,13)" rx="2" ry="2" />
<text  x="1174.08" y="751.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (21 samples, 0.07%)</title><rect x="635.7" y="805" width="0.8" height="15.0" fill="rgb(221,68,28)" rx="2" ry="2" />
<text  x="638.68" y="815.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner::_{{closure}} (22 samples, 0.07%)</title><rect x="231.4" y="597" width="0.8" height="15.0" fill="rgb(231,130,14)" rx="2" ry="2" />
<text  x="234.35" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="19.7" y="885" width="0.2" height="15.0" fill="rgb(208,169,14)" rx="2" ry="2" />
<text  x="22.69" y="895.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="25.9" y="1029" width="0.1" height="15.0" fill="rgb(209,70,30)" rx="2" ry="2" />
<text  x="28.88" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="1175.8" y="853" width="0.2" height="15.0" fill="rgb(243,168,34)" rx="2" ry="2" />
<text  x="1178.85" y="863.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_str (10 samples, 0.03%)</title><rect x="270.0" y="485" width="0.4" height="15.0" fill="rgb(207,120,53)" rx="2" ry="2" />
<text  x="272.98" y="495.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (18 samples, 0.06%)</title><rect x="548.3" y="261" width="0.7" height="15.0" fill="rgb(227,148,37)" rx="2" ry="2" />
<text  x="551.32" y="271.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (76 samples, 0.24%)</title><rect x="1108.9" y="581" width="2.8" height="15.0" fill="rgb(250,6,43)" rx="2" ry="2" />
<text  x="1111.87" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (9 samples, 0.03%)</title><rect x="168.7" y="1077" width="0.3" height="15.0" fill="rgb(236,205,45)" rx="2" ry="2" />
<text  x="171.69" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="65.0" y="1077" width="0.1" height="15.0" fill="rgb(210,48,21)" rx="2" ry="2" />
<text  x="67.96" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.03%)</title><rect x="223.3" y="613" width="0.3" height="15.0" fill="rgb(249,152,1)" rx="2" ry="2" />
<text  x="226.32" y="623.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.02%)</title><rect x="1062.1" y="853" width="0.2" height="15.0" fill="rgb(215,139,12)" rx="2" ry="2" />
<text  x="1065.13" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1173.6" y="805" width="0.1" height="15.0" fill="rgb(218,17,23)" rx="2" ry="2" />
<text  x="1176.59" y="815.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="96.9" y="1125" width="0.3" height="15.0" fill="rgb(217,83,30)" rx="2" ry="2" />
<text  x="99.91" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="96.7" y="1013" width="0.1" height="15.0" fill="rgb(222,138,13)" rx="2" ry="2" />
<text  x="99.69" y="1023.5" ></text>
</g>
<g >
<title>alloc::string::String::push (6 samples, 0.02%)</title><rect x="1175.8" y="869" width="0.2" height="15.0" fill="rgb(221,65,48)" rx="2" ry="2" />
<text  x="1178.81" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (15 samples, 0.05%)</title><rect x="226.4" y="629" width="0.6" height="15.0" fill="rgb(246,130,8)" rx="2" ry="2" />
<text  x="229.43" y="639.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="13.9" y="1045" width="0.2" height="15.0" fill="rgb(225,183,39)" rx="2" ry="2" />
<text  x="16.87" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="201.5" y="1029" width="0.3" height="15.0" fill="rgb(247,97,8)" rx="2" ry="2" />
<text  x="204.54" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="139.9" y="1045" width="0.1" height="15.0" fill="rgb(229,201,3)" rx="2" ry="2" />
<text  x="142.90" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (30 samples, 0.10%)</title><rect x="264.8" y="565" width="1.1" height="15.0" fill="rgb(208,130,1)" rx="2" ry="2" />
<text  x="267.80" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="96.0" y="1077" width="0.2" height="15.0" fill="rgb(233,91,51)" rx="2" ry="2" />
<text  x="99.01" y="1087.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..fmt..Display&gt;::fmt (11 samples, 0.03%)</title><rect x="614.5" y="533" width="0.4" height="15.0" fill="rgb(222,135,47)" rx="2" ry="2" />
<text  x="617.47" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.07%)</title><rect x="759.5" y="821" width="0.8" height="15.0" fill="rgb(227,61,46)" rx="2" ry="2" />
<text  x="762.50" y="831.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="837.8" y="741" width="0.2" height="15.0" fill="rgb(205,45,54)" rx="2" ry="2" />
<text  x="840.81" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="260.8" y="581" width="0.2" height="15.0" fill="rgb(251,115,12)" rx="2" ry="2" />
<text  x="263.82" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="613.3" y="469" width="0.2" height="15.0" fill="rgb(250,15,42)" rx="2" ry="2" />
<text  x="616.35" y="479.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (11 samples, 0.03%)</title><rect x="75.1" y="1109" width="0.4" height="15.0" fill="rgb(236,4,54)" rx="2" ry="2" />
<text  x="78.10" y="1119.5" ></text>
</g>
<g >
<title>deno::ops::dispatch_json::json_op::_{{closure}} (991 samples, 3.15%)</title><rect x="1101.1" y="725" width="37.2" height="15.0" fill="rgb(210,202,14)" rx="2" ry="2" />
<text  x="1104.06" y="735.5" >den..</text>
</g>
<g >
<title>futures_util::future::future::FutureExt::poll_unpin (65 samples, 0.21%)</title><rect x="207.7" y="869" width="2.5" height="15.0" fill="rgb(230,64,36)" rx="2" ry="2" />
<text  x="210.74" y="879.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="97.3" y="1109" width="0.3" height="15.0" fill="rgb(252,189,38)" rx="2" ry="2" />
<text  x="100.32" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1065.3" y="725" width="0.2" height="15.0" fill="rgb(215,151,44)" rx="2" ry="2" />
<text  x="1068.32" y="735.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="613.6" y="469" width="0.2" height="15.0" fill="rgb(224,79,47)" rx="2" ry="2" />
<text  x="616.65" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="660.4" y="853" width="0.1" height="15.0" fill="rgb(223,56,12)" rx="2" ry="2" />
<text  x="663.39" y="863.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (1,252 samples, 3.98%)</title><rect x="274.0" y="437" width="47.0" height="15.0" fill="rgb(213,68,43)" rx="2" ry="2" />
<text  x="276.96" y="447.5" >serd..</text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="110.5" y="1093" width="0.4" height="15.0" fill="rgb(234,68,52)" rx="2" ry="2" />
<text  x="113.54" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="190.7" y="1077" width="0.3" height="15.0" fill="rgb(227,49,29)" rx="2" ry="2" />
<text  x="193.73" y="1087.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="142.5" y="1109" width="0.4" height="15.0" fill="rgb(250,82,15)" rx="2" ry="2" />
<text  x="145.53" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="178.5" y="1061" width="0.2" height="15.0" fill="rgb(235,93,38)" rx="2" ry="2" />
<text  x="181.53" y="1071.5" ></text>
</g>
<g >
<title>_&lt;core..str..CharIndices as core..iter..traits..iterator..Iterator&gt;::next (3 samples, 0.01%)</title><rect x="80.0" y="1061" width="0.1" height="15.0" fill="rgb(254,8,0)" rx="2" ry="2" />
<text  x="82.98" y="1071.5" ></text>
</g>
<g >
<title>hyper::client::Builder::build (3 samples, 0.01%)</title><rect x="666.2" y="869" width="0.1" height="15.0" fill="rgb(219,229,33)" rx="2" ry="2" />
<text  x="669.21" y="879.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="612.9" y="421" width="0.2" height="15.0" fill="rgb(251,220,2)" rx="2" ry="2" />
<text  x="615.90" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (282 samples, 0.90%)</title><rect x="648.3" y="549" width="10.6" height="15.0" fill="rgb(249,228,21)" rx="2" ry="2" />
<text  x="651.30" y="559.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="262.4" y="485" width="0.1" height="15.0" fill="rgb(222,223,34)" rx="2" ry="2" />
<text  x="265.36" y="495.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (5 samples, 0.02%)</title><rect x="243.7" y="629" width="0.2" height="15.0" fill="rgb(254,109,35)" rx="2" ry="2" />
<text  x="246.74" y="639.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (10 samples, 0.03%)</title><rect x="194.9" y="1109" width="0.4" height="15.0" fill="rgb(216,190,7)" rx="2" ry="2" />
<text  x="197.93" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (49 samples, 0.16%)</title><rect x="609.3" y="597" width="1.8" height="15.0" fill="rgb(214,127,17)" rx="2" ry="2" />
<text  x="612.29" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (16 samples, 0.05%)</title><rect x="219.5" y="645" width="0.6" height="15.0" fill="rgb(222,38,21)" rx="2" ry="2" />
<text  x="222.49" y="655.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="168.2" y="1077" width="0.2" height="15.0" fill="rgb(244,144,24)" rx="2" ry="2" />
<text  x="171.17" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,372 samples, 7.55%)</title><rect x="840.0" y="741" width="89.0" height="15.0" fill="rgb(223,226,3)" rx="2" ry="2" />
<text  x="842.99" y="751.5" >_&lt;alloc..v..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="91.4" y="1061" width="0.1" height="15.0" fill="rgb(219,90,37)" rx="2" ry="2" />
<text  x="94.39" y="1071.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="635.0" y="869" width="0.3" height="15.0" fill="rgb(218,153,15)" rx="2" ry="2" />
<text  x="638.05" y="879.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..string..ToString&gt;::to_string (15 samples, 0.05%)</title><rect x="612.5" y="581" width="0.6" height="15.0" fill="rgb(227,94,0)" rx="2" ry="2" />
<text  x="615.52" y="591.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (10 samples, 0.03%)</title><rect x="194.4" y="1109" width="0.4" height="15.0" fill="rgb(205,188,44)" rx="2" ry="2" />
<text  x="197.45" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (35 samples, 0.11%)</title><rect x="1184.1" y="773" width="1.3" height="15.0" fill="rgb(248,116,31)" rx="2" ry="2" />
<text  x="1187.11" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="243.3" y="533" width="0.1" height="15.0" fill="rgb(233,194,12)" rx="2" ry="2" />
<text  x="246.29" y="543.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (5 samples, 0.02%)</title><rect x="1123.3" y="517" width="0.2" height="15.0" fill="rgb(206,70,3)" rx="2" ry="2" />
<text  x="1126.29" y="527.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_fold::_{{closure}} (13 samples, 0.04%)</title><rect x="22.2" y="805" width="0.5" height="15.0" fill="rgb(254,122,37)" rx="2" ry="2" />
<text  x="25.16" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="588.9" y="629" width="0.2" height="15.0" fill="rgb(209,217,34)" rx="2" ry="2" />
<text  x="591.94" y="639.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (15 samples, 0.05%)</title><rect x="1074.0" y="853" width="0.5" height="15.0" fill="rgb(231,172,39)" rx="2" ry="2" />
<text  x="1076.96" y="863.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert (27 samples, 0.09%)</title><rect x="835.0" y="885" width="1.0" height="15.0" fill="rgb(243,75,49)" rx="2" ry="2" />
<text  x="837.96" y="895.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.06%)</title><rect x="203.9" y="1029" width="0.8" height="15.0" fill="rgb(247,128,35)" rx="2" ry="2" />
<text  x="206.91" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (378 samples, 1.20%)</title><rect x="244.8" y="485" width="14.2" height="15.0" fill="rgb(219,217,54)" rx="2" ry="2" />
<text  x="247.79" y="495.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next::_{{closure}} (20 samples, 0.06%)</title><rect x="231.4" y="565" width="0.8" height="15.0" fill="rgb(212,49,14)" rx="2" ry="2" />
<text  x="234.43" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (381 samples, 1.21%)</title><rect x="244.7" y="533" width="14.3" height="15.0" fill="rgb(251,11,26)" rx="2" ry="2" />
<text  x="247.68" y="543.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (64 samples, 0.20%)</title><rect x="1077.5" y="869" width="2.4" height="15.0" fill="rgb(254,189,22)" rx="2" ry="2" />
<text  x="1080.52" y="879.5" ></text>
</g>
<g >
<title>tokio::runtime::builder::Builder::build (95 samples, 0.30%)</title><rect x="202.1" y="1173" width="3.6" height="15.0" fill="rgb(249,161,25)" rx="2" ry="2" />
<text  x="205.14" y="1183.5" ></text>
</g>
<g >
<title>_&lt;string_cache..atom..Atom&lt;Static&gt; as core..convert..From&lt;alloc..borrow..Cow&lt;str&gt;&gt;&gt;::from (5 samples, 0.02%)</title><rect x="231.7" y="437" width="0.2" height="15.0" fill="rgb(254,112,50)" rx="2" ry="2" />
<text  x="234.73" y="447.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="139.7" y="1125" width="0.3" height="15.0" fill="rgb(250,48,16)" rx="2" ry="2" />
<text  x="142.71" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="99.2" y="1093" width="0.2" height="15.0" fill="rgb(245,72,29)" rx="2" ry="2" />
<text  x="102.16" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="1058.1" y="837" width="0.3" height="15.0" fill="rgb(210,157,18)" rx="2" ry="2" />
<text  x="1061.08" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="98.8" y="1077" width="0.2" height="15.0" fill="rgb(226,102,19)" rx="2" ry="2" />
<text  x="101.79" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (23 samples, 0.07%)</title><rect x="1109.8" y="549" width="0.9" height="15.0" fill="rgb(246,104,23)" rx="2" ry="2" />
<text  x="1112.85" y="559.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (9 samples, 0.03%)</title><rect x="19.6" y="933" width="0.3" height="15.0" fill="rgb(231,116,11)" rx="2" ry="2" />
<text  x="22.57" y="943.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (46 samples, 0.15%)</title><rect x="257.3" y="197" width="1.7" height="15.0" fill="rgb(238,31,16)" rx="2" ry="2" />
<text  x="260.26" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="112.5" y="1029" width="0.1" height="15.0" fill="rgb(219,112,38)" rx="2" ry="2" />
<text  x="115.45" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="198.5" y="1125" width="0.2" height="15.0" fill="rgb(230,10,21)" rx="2" ry="2" />
<text  x="201.54" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (41 samples, 0.13%)</title><rect x="158.9" y="1029" width="1.5" height="15.0" fill="rgb(229,72,17)" rx="2" ry="2" />
<text  x="161.86" y="1039.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (11 samples, 0.03%)</title><rect x="22.2" y="773" width="0.5" height="15.0" fill="rgb(238,142,4)" rx="2" ry="2" />
<text  x="25.24" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="15.0" y="1045" width="0.1" height="15.0" fill="rgb(231,124,11)" rx="2" ry="2" />
<text  x="17.99" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="96.6" y="1045" width="0.2" height="15.0" fill="rgb(207,118,42)" rx="2" ry="2" />
<text  x="99.61" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_desugared (21 samples, 0.07%)</title><rect x="265.1" y="549" width="0.8" height="15.0" fill="rgb(206,195,16)" rx="2" ry="2" />
<text  x="268.14" y="559.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="99.5" y="1077" width="0.2" height="15.0" fill="rgb(249,64,45)" rx="2" ry="2" />
<text  x="102.50" y="1087.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="24.5" y="1093" width="0.2" height="15.0" fill="rgb(244,41,23)" rx="2" ry="2" />
<text  x="27.49" y="1103.5" ></text>
</g>
<g >
<title>reqwest::async_impl::client::Client::builder (29 samples, 0.09%)</title><rect x="664.9" y="885" width="1.1" height="15.0" fill="rgb(218,202,1)" rx="2" ry="2" />
<text  x="667.89" y="895.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="160.0" y="981" width="0.4" height="15.0" fill="rgb(211,122,52)" rx="2" ry="2" />
<text  x="162.98" y="991.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (63 samples, 0.20%)</title><rect x="121.7" y="1093" width="2.4" height="15.0" fill="rgb(236,196,50)" rx="2" ry="2" />
<text  x="124.69" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (67 samples, 0.21%)</title><rect x="639.3" y="757" width="2.5" height="15.0" fill="rgb(242,177,15)" rx="2" ry="2" />
<text  x="642.29" y="767.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="163.0" y="1109" width="0.3" height="15.0" fill="rgb(239,196,23)" rx="2" ry="2" />
<text  x="166.02" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="620.5" y="725" width="0.2" height="15.0" fill="rgb(220,85,24)" rx="2" ry="2" />
<text  x="623.48" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (15 samples, 0.05%)</title><rect x="90.7" y="1109" width="0.6" height="15.0" fill="rgb(214,182,43)" rx="2" ry="2" />
<text  x="93.72" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (8 samples, 0.03%)</title><rect x="86.1" y="1093" width="0.3" height="15.0" fill="rgb(246,104,31)" rx="2" ry="2" />
<text  x="89.14" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="83.9" y="1061" width="0.2" height="15.0" fill="rgb(210,145,13)" rx="2" ry="2" />
<text  x="86.88" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (391 samples, 1.24%)</title><rect x="244.3" y="677" width="14.7" height="15.0" fill="rgb(215,211,10)" rx="2" ry="2" />
<text  x="247.30" y="687.5" ></text>
</g>
<g >
<title>deno_core::resources::ResourceTable::add (49 samples, 0.16%)</title><rect x="1176.3" y="917" width="1.8" height="15.0" fill="rgb(207,11,19)" rx="2" ry="2" />
<text  x="1179.30" y="927.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (27 samples, 0.09%)</title><rect x="640.4" y="613" width="1.0" height="15.0" fill="rgb(225,176,0)" rx="2" ry="2" />
<text  x="643.38" y="623.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (25 samples, 0.08%)</title><rect x="196.1" y="1109" width="0.9" height="15.0" fill="rgb(251,190,21)" rx="2" ry="2" />
<text  x="199.06" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.01%)</title><rect x="195.7" y="1093" width="0.1" height="15.0" fill="rgb(212,134,7)" rx="2" ry="2" />
<text  x="198.69" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="88.2" y="1061" width="0.2" height="15.0" fill="rgb(205,159,36)" rx="2" ry="2" />
<text  x="91.20" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="1087.5" y="741" width="0.2" height="15.0" fill="rgb(253,152,36)" rx="2" ry="2" />
<text  x="1090.47" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (18 samples, 0.06%)</title><rect x="1067.2" y="789" width="0.6" height="15.0" fill="rgb(245,147,20)" rx="2" ry="2" />
<text  x="1070.16" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="97.8" y="1061" width="0.1" height="15.0" fill="rgb(242,137,41)" rx="2" ry="2" />
<text  x="100.77" y="1071.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.04%)</title><rect x="152.7" y="1013" width="0.4" height="15.0" fill="rgb(220,200,41)" rx="2" ry="2" />
<text  x="155.66" y="1023.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (16 samples, 0.05%)</title><rect x="225.8" y="533" width="0.6" height="15.0" fill="rgb(241,142,9)" rx="2" ry="2" />
<text  x="228.79" y="543.5" ></text>
</g>
<g >
<title>lazy_static::lazy::Lazy&lt;T&gt;::get::_{{closure}} (7 samples, 0.02%)</title><rect x="74.5" y="1109" width="0.2" height="15.0" fill="rgb(207,195,41)" rx="2" ry="2" />
<text  x="77.46" y="1119.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (33 samples, 0.10%)</title><rect x="1113.1" y="549" width="1.3" height="15.0" fill="rgb(249,227,43)" rx="2" ry="2" />
<text  x="1116.11" y="559.5" ></text>
</g>
<g >
<title>_&lt;alloc..collections..btree..map..Iter&lt;K,V&gt; as core..iter..traits..iterator..Iterator&gt;::next (5 samples, 0.02%)</title><rect x="20.7" y="997" width="0.2" height="15.0" fill="rgb(249,20,2)" rx="2" ry="2" />
<text  x="23.70" y="1007.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="614.7" y="421" width="0.2" height="15.0" fill="rgb(209,8,16)" rx="2" ry="2" />
<text  x="617.74" y="431.5" ></text>
</g>
<g >
<title>clap::app::App::arg (16 samples, 0.05%)</title><rect x="140.0" y="1125" width="0.6" height="15.0" fill="rgb(217,15,34)" rx="2" ry="2" />
<text  x="143.05" y="1135.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (215 samples, 0.68%)</title><rect x="537.4" y="213" width="8.0" height="15.0" fill="rgb(238,65,15)" rx="2" ry="2" />
<text  x="540.36" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (9 samples, 0.03%)</title><rect x="179.7" y="1045" width="0.3" height="15.0" fill="rgb(251,131,48)" rx="2" ry="2" />
<text  x="182.69" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::drop (47 samples, 0.15%)</title><rect x="656.3" y="277" width="1.8" height="15.0" fill="rgb(239,169,25)" rx="2" ry="2" />
<text  x="659.30" y="287.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (12 samples, 0.04%)</title><rect x="95.9" y="1109" width="0.5" height="15.0" fill="rgb(222,179,17)" rx="2" ry="2" />
<text  x="98.93" y="1119.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (11 samples, 0.03%)</title><rect x="270.7" y="453" width="0.4" height="15.0" fill="rgb(217,139,41)" rx="2" ry="2" />
<text  x="273.70" y="463.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (10 samples, 0.03%)</title><rect x="205.8" y="1125" width="0.4" height="15.0" fill="rgb(230,57,5)" rx="2" ry="2" />
<text  x="208.82" y="1135.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (15 samples, 0.05%)</title><rect x="829.8" y="709" width="0.6" height="15.0" fill="rgb(248,102,19)" rx="2" ry="2" />
<text  x="832.82" y="719.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="261.1" y="581" width="0.3" height="15.0" fill="rgb(242,129,0)" rx="2" ry="2" />
<text  x="264.12" y="591.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="96.2" y="1077" width="0.2" height="15.0" fill="rgb(218,113,34)" rx="2" ry="2" />
<text  x="99.24" y="1087.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="665.4" y="757" width="0.1" height="15.0" fill="rgb(219,86,38)" rx="2" ry="2" />
<text  x="668.38" y="767.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (9 samples, 0.03%)</title><rect x="17.5" y="1077" width="0.4" height="15.0" fill="rgb(216,25,22)" rx="2" ry="2" />
<text  x="20.55" y="1087.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..ser..Serializer as serde..ser..Serializer&gt;::serialize_str (45 samples, 0.14%)</title><rect x="1136.0" y="549" width="1.7" height="15.0" fill="rgb(254,169,30)" rx="2" ry="2" />
<text  x="1138.98" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="664.0" y="821" width="0.2" height="15.0" fill="rgb(237,215,33)" rx="2" ry="2" />
<text  x="667.03" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::split_off (5 samples, 0.02%)</title><rect x="585.5" y="565" width="0.2" height="15.0" fill="rgb(254,218,21)" rx="2" ry="2" />
<text  x="588.53" y="575.5" ></text>
</g>
<g >
<title>tokio::sync::batch_semaphore::Semaphore::release (5 samples, 0.02%)</title><rect x="587.2" y="677" width="0.2" height="15.0" fill="rgb(221,16,9)" rx="2" ry="2" />
<text  x="590.22" y="687.5" ></text>
</g>
<g >
<title>core::slice::_&lt;impl [T]&gt;::binary_search_by (7 samples, 0.02%)</title><rect x="615.1" y="517" width="0.3" height="15.0" fill="rgb(251,38,19)" rx="2" ry="2" />
<text  x="618.15" y="527.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (18 samples, 0.06%)</title><rect x="266.7" y="549" width="0.7" height="15.0" fill="rgb(224,204,49)" rx="2" ry="2" />
<text  x="269.68" y="559.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (46 samples, 0.15%)</title><rect x="61.8" y="1045" width="1.7" height="15.0" fill="rgb(243,130,30)" rx="2" ry="2" />
<text  x="64.77" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="79.4" y="1093" width="0.2" height="15.0" fill="rgb(217,155,10)" rx="2" ry="2" />
<text  x="82.42" y="1103.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (31 samples, 0.10%)</title><rect x="1035.7" y="869" width="1.2" height="15.0" fill="rgb(250,102,14)" rx="2" ry="2" />
<text  x="1038.70" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (32 samples, 0.10%)</title><rect x="656.9" y="197" width="1.2" height="15.0" fill="rgb(245,156,52)" rx="2" ry="2" />
<text  x="659.86" y="207.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as http..header..map..as_header_name..Sealed&gt;::find (14 samples, 0.04%)</title><rect x="837.4" y="821" width="0.6" height="15.0" fill="rgb(249,217,2)" rx="2" ry="2" />
<text  x="840.44" y="831.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="1115.0" y="629" width="0.4" height="15.0" fill="rgb(252,202,44)" rx="2" ry="2" />
<text  x="1117.95" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.01%)</title><rect x="138.5" y="1013" width="0.2" height="15.0" fill="rgb(214,46,37)" rx="2" ry="2" />
<text  x="141.55" y="1023.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="1088.2" y="709" width="0.1" height="15.0" fill="rgb(206,157,1)" rx="2" ry="2" />
<text  x="1091.22" y="719.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (319 samples, 1.01%)</title><rect x="646.9" y="805" width="12.0" height="15.0" fill="rgb(224,161,27)" rx="2" ry="2" />
<text  x="649.91" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="13.5" y="1061" width="0.1" height="15.0" fill="rgb(212,44,23)" rx="2" ry="2" />
<text  x="16.45" y="1071.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::fill_in_global_values (22 samples, 0.07%)</title><rect x="63.8" y="1125" width="0.9" height="15.0" fill="rgb(212,77,43)" rx="2" ry="2" />
<text  x="66.84" y="1135.5" ></text>
</g>
<g >
<title>deno::flags::unstable_arg (8 samples, 0.03%)</title><rect x="105.4" y="1141" width="0.3" height="15.0" fill="rgb(223,51,9)" rx="2" ry="2" />
<text  x="108.43" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.02%)</title><rect x="1063.9" y="837" width="0.2" height="15.0" fill="rgb(247,14,53)" rx="2" ry="2" />
<text  x="1066.89" y="847.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (13 samples, 0.04%)</title><rect x="614.4" y="565" width="0.5" height="15.0" fill="rgb(216,73,7)" rx="2" ry="2" />
<text  x="617.40" y="575.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::get (16 samples, 0.05%)</title><rect x="666.4" y="853" width="0.6" height="15.0" fill="rgb(239,209,35)" rx="2" ry="2" />
<text  x="669.36" y="863.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (9 samples, 0.03%)</title><rect x="192.6" y="1029" width="0.4" height="15.0" fill="rgb(217,213,30)" rx="2" ry="2" />
<text  x="195.64" y="1039.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (6 samples, 0.02%)</title><rect x="1178.9" y="821" width="0.2" height="15.0" fill="rgb(221,103,16)" rx="2" ry="2" />
<text  x="1181.89" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="11.8" y="1093" width="0.2" height="15.0" fill="rgb(228,149,34)" rx="2" ry="2" />
<text  x="14.80" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="23.3" y="981" width="0.2" height="15.0" fill="rgb(249,159,49)" rx="2" ry="2" />
<text  x="26.33" y="991.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="836.5" y="757" width="0.1" height="15.0" fill="rgb(249,146,27)" rx="2" ry="2" />
<text  x="839.46" y="767.5" ></text>
</g>
<g >
<title>swc_ecma_visit::visit_module_item (16 samples, 0.05%)</title><rect x="240.1" y="549" width="0.6" height="15.0" fill="rgb(221,1,18)" rx="2" ry="2" />
<text  x="243.06" y="559.5" ></text>
</g>
<g >
<title>clap::app::App::arg (121 samples, 0.38%)</title><rect x="105.8" y="1141" width="4.5" height="15.0" fill="rgb(249,138,12)" rx="2" ry="2" />
<text  x="108.77" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.01%)</title><rect x="1058.5" y="837" width="0.1" height="15.0" fill="rgb(222,170,28)" rx="2" ry="2" />
<text  x="1061.45" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="1032.8" y="821" width="0.2" height="15.0" fill="rgb(212,81,13)" rx="2" ry="2" />
<text  x="1035.77" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 0.05%)</title><rect x="273.1" y="293" width="0.6" height="15.0" fill="rgb(209,49,22)" rx="2" ry="2" />
<text  x="276.06" y="303.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next::_{{closure}} (39 samples, 0.12%)</title><rect x="234.4" y="389" width="1.5" height="15.0" fill="rgb(244,163,23)" rx="2" ry="2" />
<text  x="237.43" y="399.5" ></text>
</g>
<g >
<title>swc_common::rustc_data_structures::stable_hasher::StableHasher&lt;W&gt;::finalize (4 samples, 0.01%)</title><rect x="230.4" y="581" width="0.1" height="15.0" fill="rgb(251,172,50)" rx="2" ry="2" />
<text  x="233.37" y="591.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc..string..String,serde_json..value..Value&gt;::insert (547 samples, 1.74%)</title><rect x="550.8" y="405" width="20.6" height="15.0" fill="rgb(248,168,5)" rx="2" ry="2" />
<text  x="553.84" y="415.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::unsetb (4 samples, 0.01%)</title><rect x="104.4" y="1109" width="0.1" height="15.0" fill="rgb(211,187,19)" rx="2" ry="2" />
<text  x="107.38" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="601.2" y="677" width="0.1" height="15.0" fill="rgb(252,31,13)" rx="2" ry="2" />
<text  x="604.22" y="687.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (15 samples, 0.05%)</title><rect x="549.0" y="293" width="0.6" height="15.0" fill="rgb(251,161,36)" rx="2" ry="2" />
<text  x="552.04" y="303.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.03%)</title><rect x="546.5" y="245" width="0.4" height="15.0" fill="rgb(223,114,42)" rx="2" ry="2" />
<text  x="549.48" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (25 samples, 0.08%)</title><rect x="21.7" y="965" width="1.0" height="15.0" fill="rgb(220,113,48)" rx="2" ry="2" />
<text  x="24.71" y="975.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1114.5" y="549" width="0.1" height="15.0" fill="rgb(208,213,9)" rx="2" ry="2" />
<text  x="1117.46" y="559.5" ></text>
</g>
<g >
<title>deno::file_fetcher::TextDocument::to_string (12 samples, 0.04%)</title><rect x="223.9" y="677" width="0.5" height="15.0" fill="rgb(213,35,34)" rx="2" ry="2" />
<text  x="226.92" y="687.5" ></text>
</g>
<g >
<title>mio::poll::Events::with_capacity (6 samples, 0.02%)</title><rect x="203.0" y="1109" width="0.2" height="15.0" fill="rgb(216,137,26)" rx="2" ry="2" />
<text  x="205.97" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.04%)</title><rect x="1071.5" y="821" width="0.5" height="15.0" fill="rgb(244,86,28)" rx="2" ry="2" />
<text  x="1074.48" y="831.5" ></text>
</g>
<g >
<title>deno::flags::ca_file_arg (9 samples, 0.03%)</title><rect x="191.6" y="1141" width="0.3" height="15.0" fill="rgb(241,69,12)" rx="2" ry="2" />
<text  x="194.56" y="1151.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..raw..RawTable&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="589.6" y="645" width="0.1" height="15.0" fill="rgb(208,172,52)" rx="2" ry="2" />
<text  x="592.58" y="655.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next (8 samples, 0.03%)</title><rect x="238.5" y="389" width="0.3" height="15.0" fill="rgb(235,182,21)" rx="2" ry="2" />
<text  x="241.52" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (5 samples, 0.02%)</title><rect x="571.0" y="261" width="0.1" height="15.0" fill="rgb(252,153,34)" rx="2" ry="2" />
<text  x="573.96" y="271.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.04%)</title><rect x="1083.1" y="821" width="0.4" height="15.0" fill="rgb(238,173,2)" rx="2" ry="2" />
<text  x="1086.08" y="831.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (79 samples, 0.25%)</title><rect x="608.2" y="645" width="2.9" height="15.0" fill="rgb(244,38,12)" rx="2" ry="2" />
<text  x="611.17" y="655.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (32 samples, 0.10%)</title><rect x="108.6" y="1093" width="1.2" height="15.0" fill="rgb(220,38,39)" rx="2" ry="2" />
<text  x="111.62" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="586.2" y="645" width="0.2" height="15.0" fill="rgb(249,227,5)" rx="2" ry="2" />
<text  x="589.24" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="239.4" y="597" width="0.1" height="15.0" fill="rgb(249,162,18)" rx="2" ry="2" />
<text  x="242.39" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..rc..Rc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (150 samples, 0.48%)</title><rect x="652.5" y="485" width="5.6" height="15.0" fill="rgb(233,37,45)" rx="2" ry="2" />
<text  x="655.50" y="495.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (3 samples, 0.01%)</title><rect x="229.7" y="581" width="0.1" height="15.0" fill="rgb(227,157,21)" rx="2" ry="2" />
<text  x="232.66" y="591.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="586.5" y="645" width="0.3" height="15.0" fill="rgb(248,151,51)" rx="2" ry="2" />
<text  x="589.50" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::split_off (5 samples, 0.02%)</title><rect x="633.1" y="693" width="0.1" height="15.0" fill="rgb(238,24,48)" rx="2" ry="2" />
<text  x="636.06" y="703.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="1060.2" y="757" width="0.5" height="15.0" fill="rgb(249,29,39)" rx="2" ry="2" />
<text  x="1063.22" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="274.7" y="229" width="0.1" height="15.0" fill="rgb(207,71,48)" rx="2" ry="2" />
<text  x="277.68" y="239.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (3 samples, 0.01%)</title><rect x="1085.7" y="789" width="0.2" height="15.0" fill="rgb(230,159,1)" rx="2" ry="2" />
<text  x="1088.74" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (32 samples, 0.10%)</title><rect x="1026.1" y="821" width="1.2" height="15.0" fill="rgb(210,68,39)" rx="2" ry="2" />
<text  x="1029.09" y="831.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::v8_init (109 samples, 0.35%)</title><rect x="1090.4" y="789" width="4.1" height="15.0" fill="rgb(242,183,12)" rx="2" ry="2" />
<text  x="1093.40" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="1089.7" y="773" width="0.2" height="15.0" fill="rgb(246,200,36)" rx="2" ry="2" />
<text  x="1092.72" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 0.01%)</title><rect x="574.3" y="485" width="0.1" height="15.0" fill="rgb(238,90,49)" rx="2" ry="2" />
<text  x="577.26" y="495.5" ></text>
</g>
<g >
<title>deno::flags::info_subcommand (127 samples, 0.40%)</title><rect x="115.3" y="1157" width="4.8" height="15.0" fill="rgb(221,85,53)" rx="2" ry="2" />
<text  x="118.31" y="1167.5" ></text>
</g>
<g >
<title>deno::ops::fs_events::init (46 samples, 0.15%)</title><rect x="1032.4" y="901" width="1.8" height="15.0" fill="rgb(226,188,21)" rx="2" ry="2" />
<text  x="1035.43" y="911.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="166.7" y="1061" width="0.3" height="15.0" fill="rgb(254,68,43)" rx="2" ry="2" />
<text  x="169.74" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="1005.6" y="853" width="0.1" height="15.0" fill="rgb(231,92,13)" rx="2" ry="2" />
<text  x="1008.55" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="1070.2" y="741" width="0.2" height="15.0" fill="rgb(232,89,45)" rx="2" ry="2" />
<text  x="1073.16" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="623.0" y="757" width="0.1" height="15.0" fill="rgb(231,116,16)" rx="2" ry="2" />
<text  x="625.96" y="767.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="623.6" y="613" width="0.2" height="15.0" fill="rgb(253,95,10)" rx="2" ry="2" />
<text  x="626.60" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (296 samples, 0.94%)</title><rect x="647.8" y="597" width="11.1" height="15.0" fill="rgb(242,217,53)" rx="2" ry="2" />
<text  x="650.77" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="137.8" y="1077" width="0.1" height="15.0" fill="rgb(251,37,28)" rx="2" ry="2" />
<text  x="140.76" y="1087.5" ></text>
</g>
<g >
<title>unicode_xid::tables::derived_property::XID_Start (3 samples, 0.01%)</title><rect x="235.8" y="325" width="0.1" height="15.0" fill="rgb(238,50,23)" rx="2" ry="2" />
<text  x="238.78" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="660.9" y="741" width="0.1" height="15.0" fill="rgb(246,147,31)" rx="2" ry="2" />
<text  x="663.91" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="601.2" y="693" width="0.1" height="15.0" fill="rgb(217,110,14)" rx="2" ry="2" />
<text  x="604.18" y="703.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="104.6" y="1109" width="0.4" height="15.0" fill="rgb(209,137,10)" rx="2" ry="2" />
<text  x="107.61" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="998.6" y="789" width="0.3" height="15.0" fill="rgb(244,129,51)" rx="2" ry="2" />
<text  x="1001.57" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="1023.8" y="837" width="0.3" height="15.0" fill="rgb(212,139,22)" rx="2" ry="2" />
<text  x="1026.84" y="847.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find (9 samples, 0.03%)</title><rect x="1099.7" y="629" width="0.3" height="15.0" fill="rgb(211,103,8)" rx="2" ry="2" />
<text  x="1102.67" y="639.5" ></text>
</g>
<g >
<title>deno::checksum::gen (31 samples, 0.10%)</title><rect x="222.8" y="677" width="1.1" height="15.0" fill="rgb(232,187,25)" rx="2" ry="2" />
<text  x="225.75" y="687.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (7 samples, 0.02%)</title><rect x="1096.6" y="869" width="0.3" height="15.0" fill="rgb(232,118,34)" rx="2" ry="2" />
<text  x="1099.63" y="879.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (40 samples, 0.13%)</title><rect x="1077.7" y="853" width="1.5" height="15.0" fill="rgb(253,179,25)" rx="2" ry="2" />
<text  x="1080.67" y="863.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (5 samples, 0.02%)</title><rect x="132.6" y="1061" width="0.2" height="15.0" fill="rgb(245,212,26)" rx="2" ry="2" />
<text  x="135.58" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::into_boxed_slice (4 samples, 0.01%)</title><rect x="1115.4" y="693" width="0.2" height="15.0" fill="rgb(246,228,12)" rx="2" ry="2" />
<text  x="1118.40" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (16 samples, 0.05%)</title><rect x="225.0" y="517" width="0.6" height="15.0" fill="rgb(234,124,53)" rx="2" ry="2" />
<text  x="227.97" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (11 samples, 0.03%)</title><rect x="73.7" y="1109" width="0.5" height="15.0" fill="rgb(212,86,2)" rx="2" ry="2" />
<text  x="76.75" y="1119.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="837.7" y="709" width="0.1" height="15.0" fill="rgb(215,208,44)" rx="2" ry="2" />
<text  x="840.70" y="719.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (57 samples, 0.18%)</title><rect x="158.3" y="1061" width="2.1" height="15.0" fill="rgb(225,194,27)" rx="2" ry="2" />
<text  x="161.26" y="1071.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (18 samples, 0.06%)</title><rect x="1055.2" y="869" width="0.7" height="15.0" fill="rgb(236,144,14)" rx="2" ry="2" />
<text  x="1058.18" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (63 samples, 0.20%)</title><rect x="40.5" y="1077" width="2.3" height="15.0" fill="rgb(209,126,7)" rx="2" ry="2" />
<text  x="43.48" y="1087.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (42 samples, 0.13%)</title><rect x="122.5" y="1045" width="1.6" height="15.0" fill="rgb(219,135,31)" rx="2" ry="2" />
<text  x="125.48" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1117.4" y="661" width="0.1" height="15.0" fill="rgb(211,98,1)" rx="2" ry="2" />
<text  x="1120.39" y="671.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_primary_expr (15 samples, 0.05%)</title><rect x="236.0" y="437" width="0.5" height="15.0" fill="rgb(212,43,19)" rx="2" ry="2" />
<text  x="238.97" y="447.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..fmt..Display&gt;::fmt (11 samples, 0.03%)</title><rect x="260.2" y="597" width="0.4" height="15.0" fill="rgb(215,69,42)" rx="2" ry="2" />
<text  x="263.22" y="607.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="240.8" y="613" width="0.2" height="15.0" fill="rgb(219,8,8)" rx="2" ry="2" />
<text  x="243.81" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="106.7" y="1061" width="0.1" height="15.0" fill="rgb(232,216,4)" rx="2" ry="2" />
<text  x="109.71" y="1071.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.01%)</title><rect x="208.0" y="773" width="0.1" height="15.0" fill="rgb(234,64,3)" rx="2" ry="2" />
<text  x="210.96" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.01%)</title><rect x="659.5" y="821" width="0.1" height="15.0" fill="rgb(227,204,28)" rx="2" ry="2" />
<text  x="662.49" y="831.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="1069.8" y="821" width="0.6" height="15.0" fill="rgb(230,105,8)" rx="2" ry="2" />
<text  x="1072.79" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="928.8" y="533" width="0.2" height="15.0" fill="rgb(211,16,28)" rx="2" ry="2" />
<text  x="931.82" y="543.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="188.1" y="1061" width="0.3" height="15.0" fill="rgb(217,207,42)" rx="2" ry="2" />
<text  x="191.10" y="1071.5" ></text>
</g>
<g >
<title>url::Url::to_file_path (48 samples, 0.15%)</title><rect x="615.8" y="533" width="1.8" height="15.0" fill="rgb(221,105,1)" rx="2" ry="2" />
<text  x="618.79" y="543.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (40 samples, 0.13%)</title><rect x="272.2" y="389" width="1.5" height="15.0" fill="rgb(209,85,13)" rx="2" ry="2" />
<text  x="275.16" y="399.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::join (7 samples, 0.02%)</title><rect x="19.9" y="949" width="0.3" height="15.0" fill="rgb(235,223,39)" rx="2" ry="2" />
<text  x="22.91" y="959.5" ></text>
</g>
<g >
<title>http::header::value::HeaderValue::from_str::_{{closure}} (8 samples, 0.03%)</title><rect x="663.5" y="821" width="0.3" height="15.0" fill="rgb(212,95,35)" rx="2" ry="2" />
<text  x="666.47" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (60 samples, 0.19%)</title><rect x="282.1" y="181" width="2.3" height="15.0" fill="rgb(241,2,12)" rx="2" ry="2" />
<text  x="285.15" y="191.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="601.7" y="613" width="0.3" height="15.0" fill="rgb(213,52,29)" rx="2" ry="2" />
<text  x="604.67" y="623.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_new_expr (65 samples, 0.21%)</title><rect x="235.9" y="469" width="2.4" height="15.0" fill="rgb(219,85,20)" rx="2" ry="2" />
<text  x="238.89" y="479.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_seq (734 samples, 2.34%)</title><rect x="293.4" y="405" width="27.6" height="15.0" fill="rgb(216,219,13)" rx="2" ry="2" />
<text  x="296.41" y="415.5" >_..</text>
</g>
<g >
<title>core::ptr::drop_in_place (37 samples, 0.12%)</title><rect x="643.6" y="597" width="1.4" height="15.0" fill="rgb(212,166,41)" rx="2" ry="2" />
<text  x="646.61" y="607.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (4 samples, 0.01%)</title><rect x="1118.0" y="565" width="0.1" height="15.0" fill="rgb(237,180,26)" rx="2" ry="2" />
<text  x="1120.96" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (39 samples, 0.12%)</title><rect x="241.9" y="629" width="1.5" height="15.0" fill="rgb(230,100,2)" rx="2" ry="2" />
<text  x="244.94" y="639.5" ></text>
</g>
<g >
<title>deno_core::modules::Modules::get_info (6 samples, 0.02%)</title><rect x="635.3" y="885" width="0.2" height="15.0" fill="rgb(246,22,15)" rx="2" ry="2" />
<text  x="638.27" y="895.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="213.4" y="453" width="0.3" height="15.0" fill="rgb(221,200,15)" rx="2" ry="2" />
<text  x="216.44" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (44 samples, 0.14%)</title><rect x="468.5" y="37" width="1.7" height="15.0" fill="rgb(231,194,19)" rx="2" ry="2" />
<text  x="471.51" y="47.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1175.9" y="821" width="0.1" height="15.0" fill="rgb(219,128,48)" rx="2" ry="2" />
<text  x="1178.92" y="831.5" ></text>
</g>
<g >
<title>deno::file_fetcher::TextDocument::new (3 samples, 0.01%)</title><rect x="213.7" y="517" width="0.1" height="15.0" fill="rgb(207,2,28)" rx="2" ry="2" />
<text  x="216.67" y="527.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_seq (6 samples, 0.02%)</title><rect x="1114.4" y="581" width="0.2" height="15.0" fill="rgb(220,106,45)" rx="2" ry="2" />
<text  x="1117.39" y="591.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (16 samples, 0.05%)</title><rect x="133.4" y="1045" width="0.6" height="15.0" fill="rgb(220,117,50)" rx="2" ry="2" />
<text  x="136.40" y="1055.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (1,068 samples, 3.40%)</title><rect x="506.0" y="261" width="40.1" height="15.0" fill="rgb(229,135,2)" rx="2" ry="2" />
<text  x="509.01" y="271.5" >ind..</text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="13.7" y="1109" width="0.5" height="15.0" fill="rgb(232,40,43)" rx="2" ry="2" />
<text  x="16.72" y="1119.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..scopeguard..ScopeGuard&lt;T,F&gt; as core..ops..drop..Drop&gt;::drop (8 samples, 0.03%)</title><rect x="1028.2" y="741" width="0.3" height="15.0" fill="rgb(248,180,22)" rx="2" ry="2" />
<text  x="1031.15" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="18.1" y="1045" width="0.2" height="15.0" fill="rgb(240,3,45)" rx="2" ry="2" />
<text  x="21.11" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="260.8" y="597" width="0.2" height="15.0" fill="rgb(236,146,38)" rx="2" ry="2" />
<text  x="263.78" y="607.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::trim_left_matches (5 samples, 0.02%)</title><rect x="186.8" y="1093" width="0.2" height="15.0" fill="rgb(234,134,22)" rx="2" ry="2" />
<text  x="189.79" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (75 samples, 0.24%)</title><rect x="639.0" y="853" width="2.8" height="15.0" fill="rgb(214,70,7)" rx="2" ry="2" />
<text  x="641.99" y="863.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::_{{closure}}::_{{closure}} (26,169 samples, 83.26%)</title><rect x="207.2" y="997" width="982.4" height="15.0" fill="rgb(237,175,26)" rx="2" ry="2" />
<text  x="210.17" y="1007.5" >tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on::_{{closure}}::_{{closure}}</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="828.8" y="773" width="0.1" height="15.0" fill="rgb(215,208,13)" rx="2" ry="2" />
<text  x="831.80" y="783.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_word_as_str (17 samples, 0.05%)</title><rect x="231.5" y="517" width="0.7" height="15.0" fill="rgb(239,167,18)" rx="2" ry="2" />
<text  x="234.54" y="527.5" ></text>
</g>
<g >
<title>futures_util::stream::stream::StreamExt::poll_next_unpin (177 samples, 0.56%)</title><rect x="211.4" y="677" width="6.7" height="15.0" fill="rgb(246,193,25)" rx="2" ry="2" />
<text  x="214.42" y="687.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="219.9" y="597" width="0.2" height="15.0" fill="rgb(211,183,38)" rx="2" ry="2" />
<text  x="222.90" y="607.5" ></text>
</g>
<g >
<title>_&lt;char as unicode_xid..UnicodeXID&gt;::is_xid_start (4 samples, 0.01%)</title><rect x="238.2" y="293" width="0.1" height="15.0" fill="rgb(251,76,6)" rx="2" ry="2" />
<text  x="241.18" y="303.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..valued..Valued as core..clone..Clone&gt;::clone (130 samples, 0.41%)</title><rect x="28.2" y="1077" width="4.9" height="15.0" fill="rgb(241,195,9)" rx="2" ry="2" />
<text  x="31.25" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (11 samples, 0.03%)</title><rect x="572.7" y="421" width="0.4" height="15.0" fill="rgb(240,1,38)" rx="2" ry="2" />
<text  x="575.73" y="431.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1166.9" y="501" width="0.1" height="15.0" fill="rgb(249,182,6)" rx="2" ry="2" />
<text  x="1169.87" y="511.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="128.2" y="1093" width="0.2" height="15.0" fill="rgb(242,23,30)" rx="2" ry="2" />
<text  x="131.22" y="1103.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::is_present (12 samples, 0.04%)</title><rect x="194.4" y="1125" width="0.4" height="15.0" fill="rgb(249,211,8)" rx="2" ry="2" />
<text  x="197.37" y="1135.5" ></text>
</g>
<g >
<title>serde_json::value::ser::_&lt;impl serde..ser..Serialize for serde_json..value..Value&gt;::serialize (58 samples, 0.18%)</title><rect x="1135.8" y="565" width="2.1" height="15.0" fill="rgb(205,220,36)" rx="2" ry="2" />
<text  x="1138.75" y="575.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope::with_context (8 samples, 0.03%)</title><rect x="1095.9" y="837" width="0.3" height="15.0" fill="rgb(242,211,27)" rx="2" ry="2" />
<text  x="1098.88" y="847.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (16 samples, 0.05%)</title><rect x="827.9" y="837" width="0.6" height="15.0" fill="rgb(231,24,10)" rx="2" ry="2" />
<text  x="830.94" y="847.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (30 samples, 0.10%)</title><rect x="1066.7" y="853" width="1.1" height="15.0" fill="rgb(253,173,20)" rx="2" ry="2" />
<text  x="1069.71" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (830 samples, 2.64%)</title><rect x="726.3" y="549" width="31.2" height="15.0" fill="rgb(242,88,34)" rx="2" ry="2" />
<text  x="729.31" y="559.5" >al..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (42 samples, 0.13%)</title><rect x="37.3" y="981" width="1.6" height="15.0" fill="rgb(222,62,48)" rx="2" ry="2" />
<text  x="40.33" y="991.5" ></text>
</g>
<g >
<title>deno_core::modules::RecursiveModuleLoad::main (11 samples, 0.03%)</title><rect x="634.2" y="837" width="0.4" height="15.0" fill="rgb(231,31,32)" rx="2" ry="2" />
<text  x="637.18" y="847.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.04%)</title><rect x="648.7" y="517" width="0.5" height="15.0" fill="rgb(254,27,33)" rx="2" ry="2" />
<text  x="651.75" y="527.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::new (213 samples, 0.68%)</title><rect x="1086.5" y="869" width="8.0" height="15.0" fill="rgb(218,80,15)" rx="2" ry="2" />
<text  x="1089.50" y="879.5" ></text>
</g>
<g >
<title>rusty_v8::function::_&lt;impl rusty_v8..support..MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const rusty_v8..function..FunctionCallbackInfo)&gt;::mapping::_{{closure}} (1,994 samples, 6.34%)</title><rect x="1097.6" y="805" width="74.9" height="15.0" fill="rgb(252,75,50)" rx="2" ry="2" />
<text  x="1100.65" y="815.5" >rusty_v8..</text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="153.5" y="1093" width="0.3" height="15.0" fill="rgb(229,106,44)" rx="2" ry="2" />
<text  x="156.53" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="586.6" y="613" width="0.2" height="15.0" fill="rgb(212,150,19)" rx="2" ry="2" />
<text  x="589.58" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (38 samples, 0.12%)</title><rect x="656.6" y="229" width="1.5" height="15.0" fill="rgb(227,219,44)" rx="2" ry="2" />
<text  x="659.63" y="239.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (11 samples, 0.03%)</title><rect x="549.2" y="229" width="0.4" height="15.0" fill="rgb(231,109,37)" rx="2" ry="2" />
<text  x="552.19" y="239.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_struct (26 samples, 0.08%)</title><rect x="266.4" y="581" width="1.0" height="15.0" fill="rgb(232,168,23)" rx="2" ry="2" />
<text  x="269.38" y="591.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="161.3" y="1029" width="0.3" height="15.0" fill="rgb(235,24,6)" rx="2" ry="2" />
<text  x="164.33" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (23 samples, 0.07%)</title><rect x="11.1" y="1141" width="0.9" height="15.0" fill="rgb(241,153,47)" rx="2" ry="2" />
<text  x="14.13" y="1151.5" ></text>
</g>
<g >
<title>deno::ops::dispatch_json::serialize_result (621 samples, 1.98%)</title><rect x="1114.6" y="709" width="23.3" height="15.0" fill="rgb(244,11,35)" rx="2" ry="2" />
<text  x="1117.61" y="719.5" >d..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (5 samples, 0.02%)</title><rect x="208.8" y="757" width="0.1" height="15.0" fill="rgb(212,25,21)" rx="2" ry="2" />
<text  x="211.75" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (7 samples, 0.02%)</title><rect x="1071.7" y="789" width="0.3" height="15.0" fill="rgb(236,131,42)" rx="2" ry="2" />
<text  x="1074.70" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (42 samples, 0.13%)</title><rect x="50.1" y="1013" width="1.5" height="15.0" fill="rgb(229,201,0)" rx="2" ry="2" />
<text  x="53.06" y="1023.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (3 samples, 0.01%)</title><rect x="550.0" y="245" width="0.2" height="15.0" fill="rgb(207,183,53)" rx="2" ry="2" />
<text  x="553.05" y="255.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="104.7" y="1061" width="0.3" height="15.0" fill="rgb(236,216,22)" rx="2" ry="2" />
<text  x="107.72" y="1071.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="263.0" y="597" width="0.3" height="15.0" fill="rgb(234,208,13)" rx="2" ry="2" />
<text  x="265.96" y="607.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (44 samples, 0.14%)</title><rect x="667.1" y="821" width="1.7" height="15.0" fill="rgb(239,24,16)" rx="2" ry="2" />
<text  x="670.14" y="831.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::conflicts_with (6 samples, 0.02%)</title><rect x="104.0" y="1141" width="0.3" height="15.0" fill="rgb(210,53,50)" rx="2" ry="2" />
<text  x="107.04" y="1151.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="231.0" y="629" width="0.2" height="15.0" fill="rgb(243,80,14)" rx="2" ry="2" />
<text  x="234.01" y="639.5" ></text>
</g>
<g >
<title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (4 samples, 0.01%)</title><rect x="199.3" y="997" width="0.1" height="15.0" fill="rgb(252,222,41)" rx="2" ry="2" />
<text  x="202.29" y="1007.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="128.6" y="1109" width="0.2" height="15.0" fill="rgb(252,171,23)" rx="2" ry="2" />
<text  x="131.56" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="19.3" y="885" width="0.2" height="15.0" fill="rgb(241,146,42)" rx="2" ry="2" />
<text  x="22.35" y="895.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (70 samples, 0.22%)</title><rect x="1055.1" y="885" width="2.6" height="15.0" fill="rgb(224,229,4)" rx="2" ry="2" />
<text  x="1058.07" y="895.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="163.1" y="1077" width="0.2" height="15.0" fill="rgb(242,30,34)" rx="2" ry="2" />
<text  x="166.10" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.03%)</title><rect x="73.2" y="1125" width="0.4" height="15.0" fill="rgb(240,106,12)" rx="2" ry="2" />
<text  x="76.22" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (7 samples, 0.02%)</title><rect x="659.4" y="869" width="0.2" height="15.0" fill="rgb(209,140,36)" rx="2" ry="2" />
<text  x="662.37" y="879.5" ></text>
</g>
<g >
<title>_&lt;core..hash..sip..Hasher&lt;S&gt; as core..hash..Hasher&gt;::write (35 samples, 0.11%)</title><rect x="563.4" y="277" width="1.3" height="15.0" fill="rgb(223,39,52)" rx="2" ry="2" />
<text  x="566.38" y="287.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (115 samples, 0.37%)</title><rect x="106.0" y="1125" width="4.3" height="15.0" fill="rgb(219,34,15)" rx="2" ry="2" />
<text  x="109.00" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="1034.7" y="773" width="0.2" height="15.0" fill="rgb(242,221,17)" rx="2" ry="2" />
<text  x="1037.69" y="783.5" ></text>
</g>
<g >
<title>core::mem::drop (8 samples, 0.03%)</title><rect x="612.1" y="597" width="0.3" height="15.0" fill="rgb(245,152,4)" rx="2" ry="2" />
<text  x="615.15" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="177.8" y="1077" width="0.2" height="15.0" fill="rgb(222,109,46)" rx="2" ry="2" />
<text  x="180.78" y="1087.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_reqs (6 samples, 0.02%)</title><rect x="141.4" y="1109" width="0.3" height="15.0" fill="rgb(243,225,2)" rx="2" ry="2" />
<text  x="144.44" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_bytes (3 samples, 0.01%)</title><rect x="85.9" y="1029" width="0.2" height="15.0" fill="rgb(225,100,43)" rx="2" ry="2" />
<text  x="88.95" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="665.8" y="789" width="0.1" height="15.0" fill="rgb(254,146,5)" rx="2" ry="2" />
<text  x="668.83" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.08%)</title><rect x="1105.4" y="501" width="1.0" height="15.0" fill="rgb(216,210,22)" rx="2" ry="2" />
<text  x="1108.42" y="511.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_word_as_str::_{{closure}}::_{{closure}} (6 samples, 0.02%)</title><rect x="232.0" y="453" width="0.2" height="15.0" fill="rgb(213,179,23)" rx="2" ry="2" />
<text  x="234.95" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="259.2" y="597" width="0.1" height="15.0" fill="rgb(234,97,35)" rx="2" ry="2" />
<text  x="262.17" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (19 samples, 0.06%)</title><rect x="644.3" y="533" width="0.7" height="15.0" fill="rgb(235,217,19)" rx="2" ry="2" />
<text  x="647.28" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="118.7" y="1093" width="0.1" height="15.0" fill="rgb(226,18,53)" rx="2" ry="2" />
<text  x="121.69" y="1103.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (6 samples, 0.02%)</title><rect x="829.0" y="821" width="0.2" height="15.0" fill="rgb(246,163,52)" rx="2" ry="2" />
<text  x="831.95" y="831.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.05%)</title><rect x="1057.1" y="853" width="0.6" height="15.0" fill="rgb(235,30,10)" rx="2" ry="2" />
<text  x="1060.14" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (56 samples, 0.18%)</title><rect x="656.0" y="389" width="2.1" height="15.0" fill="rgb(222,122,35)" rx="2" ry="2" />
<text  x="659.03" y="399.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (13 samples, 0.04%)</title><rect x="77.0" y="1141" width="0.5" height="15.0" fill="rgb(216,30,14)" rx="2" ry="2" />
<text  x="79.98" y="1151.5" ></text>
</g>
<g >
<title>deno::worker::Worker::execute2 (57 samples, 0.18%)</title><rect x="1178.2" y="917" width="2.2" height="15.0" fill="rgb(244,116,31)" rx="2" ry="2" />
<text  x="1181.21" y="927.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (120 samples, 0.38%)</title><rect x="279.9" y="245" width="4.5" height="15.0" fill="rgb(218,166,14)" rx="2" ry="2" />
<text  x="282.89" y="255.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="664.8" y="773" width="0.1" height="15.0" fill="rgb(212,68,17)" rx="2" ry="2" />
<text  x="667.78" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.04%)</title><rect x="32.6" y="949" width="0.5" height="15.0" fill="rgb(241,213,37)" rx="2" ry="2" />
<text  x="35.60" y="959.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.03%)</title><rect x="1073.3" y="837" width="0.4" height="15.0" fill="rgb(254,33,6)" rx="2" ry="2" />
<text  x="1076.32" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="1185.0" y="709" width="0.4" height="15.0" fill="rgb(209,113,47)" rx="2" ry="2" />
<text  x="1188.01" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="269.0" y="421" width="0.2" height="15.0" fill="rgb(207,153,11)" rx="2" ry="2" />
<text  x="272.04" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="1116.1" y="565" width="0.3" height="15.0" fill="rgb(209,130,29)" rx="2" ry="2" />
<text  x="1119.12" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="116.1" y="1077" width="0.3" height="15.0" fill="rgb(224,138,11)" rx="2" ry="2" />
<text  x="119.13" y="1087.5" ></text>
</g>
<g >
<title>deno::flags::importmap_arg (9 samples, 0.03%)</title><rect x="88.0" y="1141" width="0.4" height="15.0" fill="rgb(226,75,21)" rx="2" ry="2" />
<text  x="91.01" y="1151.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (30 samples, 0.10%)</title><rect x="1091.2" y="709" width="1.1" height="15.0" fill="rgb(230,150,42)" rx="2" ry="2" />
<text  x="1094.19" y="719.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (259 samples, 0.82%)</title><rect x="339.6" y="229" width="9.7" height="15.0" fill="rgb(230,38,14)" rx="2" ry="2" />
<text  x="342.62" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="178.6" y="1045" width="0.1" height="15.0" fill="rgb(249,215,43)" rx="2" ry="2" />
<text  x="181.57" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="549.5" y="101" width="0.1" height="15.0" fill="rgb(239,9,26)" rx="2" ry="2" />
<text  x="552.49" y="111.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="270.2" y="405" width="0.2" height="15.0" fill="rgb(246,125,28)" rx="2" ry="2" />
<text  x="273.17" y="415.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="216.0" y="533" width="0.3" height="15.0" fill="rgb(210,81,20)" rx="2" ry="2" />
<text  x="219.00" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="830.0" y="661" width="0.4" height="15.0" fill="rgb(214,93,0)" rx="2" ry="2" />
<text  x="833.04" y="671.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut F as core..future..future..Future&gt;::poll (3 samples, 0.01%)</title><rect x="199.0" y="1029" width="0.1" height="15.0" fill="rgb(216,156,21)" rx="2" ry="2" />
<text  x="201.95" y="1039.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="217.5" y="501" width="0.3" height="15.0" fill="rgb(217,23,50)" rx="2" ry="2" />
<text  x="220.54" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (17 samples, 0.05%)</title><rect x="1113.7" y="485" width="0.7" height="15.0" fill="rgb(225,207,2)" rx="2" ry="2" />
<text  x="1116.71" y="495.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (32 samples, 0.10%)</title><rect x="84.4" y="1077" width="1.2" height="15.0" fill="rgb(217,75,35)" rx="2" ry="2" />
<text  x="87.37" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="229.1" y="565" width="0.2" height="15.0" fill="rgb(235,70,20)" rx="2" ry="2" />
<text  x="232.14" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="576.0" y="453" width="0.1" height="15.0" fill="rgb(236,161,43)" rx="2" ry="2" />
<text  x="578.99" y="463.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (5,198 samples, 16.54%)</title><rect x="351.0" y="357" width="195.1" height="15.0" fill="rgb(252,154,26)" rx="2" ry="2" />
<text  x="353.96" y="367.5" >_&lt;core..marker..PhantomDa..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="16.0" y="1029" width="0.2" height="15.0" fill="rgb(219,177,53)" rx="2" ry="2" />
<text  x="19.01" y="1039.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::reserve (7 samples, 0.02%)</title><rect x="16.3" y="997" width="0.3" height="15.0" fill="rgb(225,152,47)" rx="2" ry="2" />
<text  x="19.34" y="1007.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (26 samples, 0.08%)</title><rect x="1041.0" y="853" width="0.9" height="15.0" fill="rgb(209,111,17)" rx="2" ry="2" />
<text  x="1043.96" y="863.5" ></text>
</g>
<g >
<title>_&lt;alloc..rc..Rc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (58 samples, 0.18%)</title><rect x="656.0" y="421" width="2.1" height="15.0" fill="rgb(224,56,16)" rx="2" ry="2" />
<text  x="658.96" y="431.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (19 samples, 0.06%)</title><rect x="1043.7" y="805" width="0.7" height="15.0" fill="rgb(209,1,22)" rx="2" ry="2" />
<text  x="1046.66" y="815.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_map (8,145 samples, 25.91%)</title><rect x="268.6" y="613" width="305.8" height="15.0" fill="rgb(205,59,8)" rx="2" ry="2" />
<text  x="271.59" y="623.5" >_&lt;serde_json..value..de..&lt;impl serde..de...</text>
</g>
<g >
<title>deno::flags::completions_subcommand (49 samples, 0.16%)</title><rect x="99.0" y="1157" width="1.9" height="15.0" fill="rgb(225,178,2)" rx="2" ry="2" />
<text  x="102.01" y="1167.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (9 samples, 0.03%)</title><rect x="210.6" y="741" width="0.4" height="15.0" fill="rgb(235,224,26)" rx="2" ry="2" />
<text  x="213.63" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="758.1" y="757" width="0.1" height="15.0" fill="rgb(234,218,29)" rx="2" ry="2" />
<text  x="761.11" y="767.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="136.8" y="1125" width="0.5" height="15.0" fill="rgb(207,169,42)" rx="2" ry="2" />
<text  x="139.82" y="1135.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (14 samples, 0.04%)</title><rect x="999.9" y="709" width="0.5" height="15.0" fill="rgb(215,87,45)" rx="2" ry="2" />
<text  x="1002.92" y="719.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (11 samples, 0.03%)</title><rect x="76.5" y="1109" width="0.4" height="15.0" fill="rgb(216,226,42)" rx="2" ry="2" />
<text  x="79.49" y="1119.5" ></text>
</g>
<g >
<title>deno::module_graph::ModuleGraphLoader::get_graph (14 samples, 0.04%)</title><rect x="589.2" y="725" width="0.5" height="15.0" fill="rgb(250,200,29)" rx="2" ry="2" />
<text  x="592.17" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="263.4" y="581" width="0.2" height="15.0" fill="rgb(212,26,29)" rx="2" ry="2" />
<text  x="266.41" y="591.5" ></text>
</g>
<g >
<title>deno::flags::ca_file_arg (9 samples, 0.03%)</title><rect x="139.7" y="1141" width="0.3" height="15.0" fill="rgb(219,194,15)" rx="2" ry="2" />
<text  x="142.67" y="1151.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="103.1" y="1061" width="0.2" height="15.0" fill="rgb(233,142,25)" rx="2" ry="2" />
<text  x="106.11" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="235.4" y="181" width="0.2" height="15.0" fill="rgb(221,73,5)" rx="2" ry="2" />
<text  x="238.41" y="191.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert2 (25 samples, 0.08%)</title><rect x="835.0" y="853" width="1.0" height="15.0" fill="rgb(234,97,0)" rx="2" ry="2" />
<text  x="838.04" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (10 samples, 0.03%)</title><rect x="1023.8" y="853" width="0.3" height="15.0" fill="rgb(242,100,13)" rx="2" ry="2" />
<text  x="1026.76" y="863.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (16 samples, 0.05%)</title><rect x="1061.7" y="869" width="0.6" height="15.0" fill="rgb(217,208,16)" rx="2" ry="2" />
<text  x="1064.72" y="879.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="193.5" y="1077" width="0.2" height="15.0" fill="rgb(242,198,30)" rx="2" ry="2" />
<text  x="196.51" y="1087.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::trim_left_matches (4 samples, 0.01%)</title><rect x="79.1" y="1141" width="0.2" height="15.0" fill="rgb(248,11,0)" rx="2" ry="2" />
<text  x="82.12" y="1151.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (10 samples, 0.03%)</title><rect x="117.7" y="1077" width="0.3" height="15.0" fill="rgb(219,16,45)" rx="2" ry="2" />
<text  x="120.67" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (294 samples, 0.94%)</title><rect x="647.8" y="581" width="11.1" height="15.0" fill="rgb(251,93,49)" rx="2" ry="2" />
<text  x="650.85" y="591.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (10 samples, 0.03%)</title><rect x="181.3" y="1077" width="0.4" height="15.0" fill="rgb(212,211,52)" rx="2" ry="2" />
<text  x="184.34" y="1087.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="589.0" y="597" width="0.1" height="15.0" fill="rgb(220,19,6)" rx="2" ry="2" />
<text  x="592.02" y="607.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="613.6" y="485" width="0.2" height="15.0" fill="rgb(240,186,0)" rx="2" ry="2" />
<text  x="616.61" y="495.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (40 samples, 0.13%)</title><rect x="1090.8" y="741" width="1.5" height="15.0" fill="rgb(238,64,23)" rx="2" ry="2" />
<text  x="1093.81" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="18.7" y="885" width="0.1" height="15.0" fill="rgb(246,200,49)" rx="2" ry="2" />
<text  x="21.67" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="588.3" y="597" width="0.1" height="15.0" fill="rgb(205,158,32)" rx="2" ry="2" />
<text  x="591.31" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend (165 samples, 0.52%)</title><rect x="623.8" y="709" width="6.2" height="15.0" fill="rgb(230,114,3)" rx="2" ry="2" />
<text  x="626.82" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="668.7" y="741" width="0.1" height="15.0" fill="rgb(205,198,40)" rx="2" ry="2" />
<text  x="671.68" y="751.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..HashMap&lt;K,V,S&gt; as core..default..Default&gt;::default (5 samples, 0.02%)</title><rect x="831.3" y="869" width="0.2" height="15.0" fill="rgb(222,37,35)" rx="2" ry="2" />
<text  x="834.32" y="879.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (5 samples, 0.02%)</title><rect x="197.9" y="1109" width="0.2" height="15.0" fill="rgb(242,106,9)" rx="2" ry="2" />
<text  x="200.86" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (14 samples, 0.04%)</title><rect x="667.8" y="645" width="0.5" height="15.0" fill="rgb(220,154,19)" rx="2" ry="2" />
<text  x="670.82" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1138.5" y="661" width="0.1" height="15.0" fill="rgb(226,21,4)" rx="2" ry="2" />
<text  x="1141.45" y="671.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_subscripts (48 samples, 0.15%)</title><rect x="236.5" y="437" width="1.8" height="15.0" fill="rgb(207,48,12)" rx="2" ry="2" />
<text  x="239.53" y="447.5" ></text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="586.4" y="693" width="0.4" height="15.0" fill="rgb(209,106,32)" rx="2" ry="2" />
<text  x="589.39" y="703.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (26 samples, 0.08%)</title><rect x="234.6" y="309" width="1.0" height="15.0" fill="rgb(252,141,41)" rx="2" ry="2" />
<text  x="237.62" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (20 samples, 0.06%)</title><rect x="293.6" y="373" width="0.8" height="15.0" fill="rgb(242,118,13)" rx="2" ry="2" />
<text  x="296.63" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="638.2" y="837" width="0.4" height="15.0" fill="rgb(223,58,5)" rx="2" ry="2" />
<text  x="641.20" y="847.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (607 samples, 1.93%)</title><rect x="326.6" y="357" width="22.7" height="15.0" fill="rgb(245,199,39)" rx="2" ry="2" />
<text  x="329.56" y="367.5" >_..</text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="1058.1" y="821" width="0.3" height="15.0" fill="rgb(244,83,1)" rx="2" ry="2" />
<text  x="1061.11" y="831.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once (10 samples, 0.03%)</title><rect x="758.5" y="837" width="0.4" height="15.0" fill="rgb(228,207,16)" rx="2" ry="2" />
<text  x="761.52" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="179.9" y="997" width="0.1" height="15.0" fill="rgb(210,142,25)" rx="2" ry="2" />
<text  x="182.92" y="1007.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for &amp;T&gt;::serialize (20 samples, 0.06%)</title><rect x="1170.3" y="597" width="0.7" height="15.0" fill="rgb(214,112,5)" rx="2" ry="2" />
<text  x="1173.25" y="607.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="286.7" y="197" width="0.4" height="15.0" fill="rgb(245,51,4)" rx="2" ry="2" />
<text  x="289.73" y="207.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="136.4" y="1093" width="0.2" height="15.0" fill="rgb(221,93,1)" rx="2" ry="2" />
<text  x="139.37" y="1103.5" ></text>
</g>
<g >
<title>deno_core::bindings::encode (15 samples, 0.05%)</title><rect x="1098.1" y="773" width="0.6" height="15.0" fill="rgb(252,106,2)" rx="2" ry="2" />
<text  x="1101.13" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (16 samples, 0.05%)</title><rect x="1115.8" y="645" width="0.6" height="15.0" fill="rgb(248,136,15)" rx="2" ry="2" />
<text  x="1118.78" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="81.4" y="1093" width="0.5" height="15.0" fill="rgb(227,226,48)" rx="2" ry="2" />
<text  x="84.41" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="112.4" y="1045" width="0.2" height="15.0" fill="rgb(246,206,24)" rx="2" ry="2" />
<text  x="115.38" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="119.9" y="1061" width="0.1" height="15.0" fill="rgb(234,164,35)" rx="2" ry="2" />
<text  x="122.89" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="20.4" y="933" width="0.3" height="15.0" fill="rgb(231,27,30)" rx="2" ry="2" />
<text  x="23.44" y="943.5" ></text>
</g>
<g >
<title>deno_core::modules::Modules::get_children (6 samples, 0.02%)</title><rect x="633.3" y="821" width="0.2" height="15.0" fill="rgb(243,146,49)" rx="2" ry="2" />
<text  x="636.32" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="187.3" y="1045" width="0.1" height="15.0" fill="rgb(222,39,18)" rx="2" ry="2" />
<text  x="190.28" y="1055.5" ></text>
</g>
<g >
<title>swc_common::source_map::StableSourceFileId::new (16 samples, 0.05%)</title><rect x="229.3" y="629" width="0.6" height="15.0" fill="rgb(245,36,14)" rx="2" ry="2" />
<text  x="232.32" y="639.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (19 samples, 0.06%)</title><rect x="192.4" y="1125" width="0.7" height="15.0" fill="rgb(241,186,27)" rx="2" ry="2" />
<text  x="195.42" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="1068.7" y="741" width="0.2" height="15.0" fill="rgb(228,171,32)" rx="2" ry="2" />
<text  x="1071.74" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="188.3" y="997" width="0.1" height="15.0" fill="rgb(249,157,49)" rx="2" ry="2" />
<text  x="191.25" y="1007.5" ></text>
</g>
<g >
<title>_&lt;deno..permissions..UnaryPermission&lt;T&gt; as core..default..Default&gt;::default (7 samples, 0.02%)</title><rect x="831.2" y="901" width="0.3" height="15.0" fill="rgb(249,120,27)" rx="2" ry="2" />
<text  x="834.24" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (22 samples, 0.07%)</title><rect x="1115.6" y="693" width="0.8" height="15.0" fill="rgb(238,206,40)" rx="2" ry="2" />
<text  x="1118.55" y="703.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (6 samples, 0.02%)</title><rect x="836.8" y="837" width="0.2" height="15.0" fill="rgb(216,65,54)" rx="2" ry="2" />
<text  x="839.80" y="847.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_fold::_{{closure}} (18 samples, 0.06%)</title><rect x="22.0" y="853" width="0.7" height="15.0" fill="rgb(223,158,9)" rx="2" ry="2" />
<text  x="24.98" y="863.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::util::CharExt::is_ident_start (5 samples, 0.02%)</title><rect x="235.7" y="357" width="0.2" height="15.0" fill="rgb(212,107,8)" rx="2" ry="2" />
<text  x="238.71" y="367.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="659.9" y="885" width="0.3" height="15.0" fill="rgb(213,6,22)" rx="2" ry="2" />
<text  x="662.86" y="895.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::is_present (12 samples, 0.04%)</title><rect x="194.9" y="1125" width="0.4" height="15.0" fill="rgb(212,124,45)" rx="2" ry="2" />
<text  x="197.86" y="1135.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_ident_or_keyword (18 samples, 0.06%)</title><rect x="231.5" y="533" width="0.7" height="15.0" fill="rgb(229,188,42)" rx="2" ry="2" />
<text  x="234.50" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="646.5" y="741" width="0.2" height="15.0" fill="rgb(226,77,3)" rx="2" ry="2" />
<text  x="649.46" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="321.5" y="277" width="0.2" height="15.0" fill="rgb(230,111,22)" rx="2" ry="2" />
<text  x="324.49" y="287.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (38 samples, 0.12%)</title><rect x="1092.8" y="725" width="1.4" height="15.0" fill="rgb(227,39,18)" rx="2" ry="2" />
<text  x="1095.80" y="735.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="1001.1" y="741" width="0.1" height="15.0" fill="rgb(222,40,51)" rx="2" ry="2" />
<text  x="1004.12" y="751.5" ></text>
</g>
<g >
<title>deno::flags::no_check_arg_parse (7 samples, 0.02%)</title><rect x="195.3" y="1141" width="0.3" height="15.0" fill="rgb(228,163,20)" rx="2" ry="2" />
<text  x="198.31" y="1151.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="99.5" y="1061" width="0.2" height="15.0" fill="rgb(218,18,12)" rx="2" ry="2" />
<text  x="102.54" y="1071.5" ></text>
</g>
<g >
<title>tokio::park::thread::CURRENT_PARKER::__getit (7 samples, 0.02%)</title><rect x="199.2" y="1045" width="0.2" height="15.0" fill="rgb(247,158,10)" rx="2" ry="2" />
<text  x="202.18" y="1055.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="321.4" y="309" width="0.3" height="15.0" fill="rgb(223,144,42)" rx="2" ry="2" />
<text  x="324.42" y="319.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (26,167 samples, 83.25%)</title><rect x="207.2" y="965" width="982.4" height="15.0" fill="rgb(247,37,48)" rx="2" ry="2" />
<text  x="210.25" y="975.5" >_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll</text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="135.9" y="1077" width="0.2" height="15.0" fill="rgb(206,201,21)" rx="2" ry="2" />
<text  x="138.88" y="1087.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::add_index_to (14 samples, 0.04%)</title><rect x="15.4" y="1061" width="0.5" height="15.0" fill="rgb(206,113,43)" rx="2" ry="2" />
<text  x="18.37" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::remove_entry (3 samples, 0.01%)</title><rect x="636.9" y="853" width="0.1" height="15.0" fill="rgb(232,188,10)" rx="2" ry="2" />
<text  x="639.92" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="265.5" y="533" width="0.4" height="15.0" fill="rgb(239,26,11)" rx="2" ry="2" />
<text  x="268.48" y="543.5" ></text>
</g>
<g >
<title>deno::flags::ca_file_arg (9 samples, 0.03%)</title><rect x="96.9" y="1141" width="0.3" height="15.0" fill="rgb(227,138,10)" rx="2" ry="2" />
<text  x="99.87" y="1151.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (2,379 samples, 7.57%)</title><rect x="839.9" y="789" width="89.3" height="15.0" fill="rgb(220,201,25)" rx="2" ry="2" />
<text  x="842.88" y="799.5" >alloc::sli..</text>
</g>
<g >
<title>deno_core::normalize_path::normalize_path (6 samples, 0.02%)</title><rect x="1186.3" y="901" width="0.2" height="15.0" fill="rgb(219,25,39)" rx="2" ry="2" />
<text  x="1189.32" y="911.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (12 samples, 0.04%)</title><rect x="269.9" y="517" width="0.5" height="15.0" fill="rgb(226,16,3)" rx="2" ry="2" />
<text  x="272.91" y="527.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (12 samples, 0.04%)</title><rect x="77.5" y="1141" width="0.5" height="15.0" fill="rgb(215,25,39)" rx="2" ry="2" />
<text  x="80.54" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="267.6" y="565" width="0.1" height="15.0" fill="rgb(214,57,36)" rx="2" ry="2" />
<text  x="270.58" y="575.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (3 samples, 0.01%)</title><rect x="84.0" y="1045" width="0.1" height="15.0" fill="rgb(213,158,21)" rx="2" ry="2" />
<text  x="86.96" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="115.0" y="1061" width="0.2" height="15.0" fill="rgb(240,220,44)" rx="2" ry="2" />
<text  x="117.97" y="1071.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (9 samples, 0.03%)</title><rect x="614.5" y="501" width="0.4" height="15.0" fill="rgb(222,12,28)" rx="2" ry="2" />
<text  x="617.55" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="830.2" y="629" width="0.2" height="15.0" fill="rgb(231,161,10)" rx="2" ry="2" />
<text  x="833.19" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (52 samples, 0.17%)</title><rect x="1128.1" y="517" width="1.9" height="15.0" fill="rgb(233,201,27)" rx="2" ry="2" />
<text  x="1131.09" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="1180.5" y="885" width="0.5" height="15.0" fill="rgb(227,74,11)" rx="2" ry="2" />
<text  x="1183.50" y="895.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (474 samples, 1.51%)</title><rect x="452.4" y="197" width="17.8" height="15.0" fill="rgb(247,182,18)" rx="2" ry="2" />
<text  x="455.36" y="207.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (41 samples, 0.13%)</title><rect x="10.5" y="1173" width="1.5" height="15.0" fill="rgb(214,70,21)" rx="2" ry="2" />
<text  x="13.45" y="1183.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="114.6" y="1109" width="0.2" height="15.0" fill="rgb(227,131,22)" rx="2" ry="2" />
<text  x="117.63" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="1189.1" y="693" width="0.2" height="15.0" fill="rgb(244,52,47)" rx="2" ry="2" />
<text  x="1192.14" y="703.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Display&gt;::fmt (40 samples, 0.13%)</title><rect x="220.9" y="597" width="1.5" height="15.0" fill="rgb(218,118,30)" rx="2" ry="2" />
<text  x="223.88" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="136.2" y="1061" width="0.2" height="15.0" fill="rgb(222,79,50)" rx="2" ry="2" />
<text  x="139.22" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..collections..btree..map..BTreeMap&lt;K,V&gt; as core..iter..traits..collect..FromIterator&lt;(K,V)&gt;&gt;::from_iter (27 samples, 0.09%)</title><rect x="21.6" y="997" width="1.1" height="15.0" fill="rgb(247,21,8)" rx="2" ry="2" />
<text  x="24.64" y="1007.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="259.1" y="613" width="0.2" height="15.0" fill="rgb(215,123,33)" rx="2" ry="2" />
<text  x="262.13" y="623.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="621.5" y="693" width="0.1" height="15.0" fill="rgb(229,167,8)" rx="2" ry="2" />
<text  x="624.53" y="703.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (18 samples, 0.06%)</title><rect x="204.0" y="1013" width="0.7" height="15.0" fill="rgb(247,212,19)" rx="2" ry="2" />
<text  x="206.98" y="1023.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="1088.1" y="757" width="0.2" height="15.0" fill="rgb(220,149,45)" rx="2" ry="2" />
<text  x="1091.11" y="767.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (16 samples, 0.05%)</title><rect x="1075.8" y="853" width="0.6" height="15.0" fill="rgb(225,201,22)" rx="2" ry="2" />
<text  x="1078.80" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="213.5" y="437" width="0.2" height="15.0" fill="rgb(211,179,8)" rx="2" ry="2" />
<text  x="216.48" y="447.5" ></text>
</g>
<g >
<title>deno::flags::lock_write_arg (7 samples, 0.02%)</title><rect x="180.4" y="1125" width="0.2" height="15.0" fill="rgb(235,21,33)" rx="2" ry="2" />
<text  x="183.37" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (463 samples, 1.47%)</title><rect x="641.8" y="901" width="17.4" height="15.0" fill="rgb(254,35,21)" rx="2" ry="2" />
<text  x="644.84" y="911.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="73.9" y="1061" width="0.3" height="15.0" fill="rgb(219,31,20)" rx="2" ry="2" />
<text  x="76.86" y="1071.5" ></text>
</g>
<g >
<title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.02%)</title><rect x="207.9" y="789" width="0.2" height="15.0" fill="rgb(244,60,21)" rx="2" ry="2" />
<text  x="210.92" y="799.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="1034.5" y="837" width="0.4" height="15.0" fill="rgb(236,63,37)" rx="2" ry="2" />
<text  x="1037.54" y="847.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::util::CharExt::is_ident_start (5 samples, 0.02%)</title><rect x="236.3" y="309" width="0.2" height="15.0" fill="rgb(250,150,37)" rx="2" ry="2" />
<text  x="239.34" y="319.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_fold::_{{closure}} (12 samples, 0.04%)</title><rect x="22.2" y="789" width="0.5" height="15.0" fill="rgb(228,26,21)" rx="2" ry="2" />
<text  x="25.20" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.04%)</title><rect x="1075.9" y="837" width="0.5" height="15.0" fill="rgb(212,133,54)" rx="2" ry="2" />
<text  x="1078.91" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (10 samples, 0.03%)</title><rect x="77.1" y="1093" width="0.4" height="15.0" fill="rgb(216,118,11)" rx="2" ry="2" />
<text  x="80.09" y="1103.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::get_root_mut (3 samples, 0.01%)</title><rect x="621.8" y="773" width="0.1" height="15.0" fill="rgb(254,133,53)" rx="2" ry="2" />
<text  x="624.76" y="783.5" ></text>
</g>
<g >
<title>swc_common::rustc_data_structures::stable_hasher::StableHasher&lt;W&gt;::finish (4 samples, 0.01%)</title><rect x="229.8" y="613" width="0.1" height="15.0" fill="rgb(232,60,1)" rx="2" ry="2" />
<text  x="232.77" y="623.5" ></text>
</g>
<g >
<title>rusty_v8::context::_&lt;impl rusty_v8..data..Context&gt;::new (3 samples, 0.01%)</title><rect x="1089.2" y="837" width="0.1" height="15.0" fill="rgb(219,36,9)" rx="2" ry="2" />
<text  x="1092.16" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (177 samples, 0.56%)</title><rect x="314.3" y="197" width="6.6" height="15.0" fill="rgb(210,1,40)" rx="2" ry="2" />
<text  x="317.28" y="207.5" ></text>
</g>
<g >
<title>futures_util::stream::try_stream::TryStreamExt::try_poll_next_unpin (165 samples, 0.52%)</title><rect x="611.6" y="741" width="6.2" height="15.0" fill="rgb(244,205,24)" rx="2" ry="2" />
<text  x="614.62" y="751.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,372 samples, 7.55%)</title><rect x="669.0" y="741" width="89.1" height="15.0" fill="rgb(239,159,10)" rx="2" ry="2" />
<text  x="672.02" y="751.5" >_&lt;alloc..v..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (15 samples, 0.05%)</title><rect x="833.1" y="837" width="0.5" height="15.0" fill="rgb(229,73,6)" rx="2" ry="2" />
<text  x="836.08" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (4 samples, 0.01%)</title><rect x="229.4" y="581" width="0.2" height="15.0" fill="rgb(238,88,43)" rx="2" ry="2" />
<text  x="232.44" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="228.3" y="597" width="0.3" height="15.0" fill="rgb(234,7,8)" rx="2" ry="2" />
<text  x="231.35" y="607.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="191.3" y="1045" width="0.2" height="15.0" fill="rgb(229,157,35)" rx="2" ry="2" />
<text  x="194.29" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (388 samples, 1.23%)</title><rect x="244.4" y="645" width="14.6" height="15.0" fill="rgb(242,48,35)" rx="2" ry="2" />
<text  x="247.42" y="655.5" ></text>
</g>
<g >
<title>_&lt;tokio..time..driver..Driver&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="200.5" y="1109" width="0.1" height="15.0" fill="rgb(229,72,3)" rx="2" ry="2" />
<text  x="203.49" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="64.4" y="1077" width="0.3" height="15.0" fill="rgb(232,36,6)" rx="2" ry="2" />
<text  x="67.44" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (18 samples, 0.06%)</title><rect x="1037.8" y="821" width="0.7" height="15.0" fill="rgb(231,190,45)" rx="2" ry="2" />
<text  x="1040.80" y="831.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next::_{{closure}} (7 samples, 0.02%)</title><rect x="238.6" y="373" width="0.2" height="15.0" fill="rgb(238,45,6)" rx="2" ry="2" />
<text  x="241.56" y="383.5" ></text>
</g>
<g >
<title>rusty_v8::script::_&lt;impl rusty_v8..data..Script&gt;::run (6 samples, 0.02%)</title><rect x="1180.0" y="885" width="0.2" height="15.0" fill="rgb(220,40,33)" rx="2" ry="2" />
<text  x="1182.98" y="895.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (128 samples, 0.41%)</title><rect x="288.6" y="357" width="4.8" height="15.0" fill="rgb(220,189,48)" rx="2" ry="2" />
<text  x="291.60" y="367.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert2 (13 samples, 0.04%)</title><rect x="665.0" y="821" width="0.5" height="15.0" fill="rgb(227,125,34)" rx="2" ry="2" />
<text  x="668.04" y="831.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (72 samples, 0.23%)</title><rect x="597.1" y="677" width="2.7" height="15.0" fill="rgb(238,86,21)" rx="2" ry="2" />
<text  x="600.09" y="687.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (3 samples, 0.01%)</title><rect x="114.0" y="1077" width="0.1" height="15.0" fill="rgb(210,119,39)" rx="2" ry="2" />
<text  x="116.96" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (131 samples, 0.42%)</title><rect x="532.4" y="197" width="5.0" height="15.0" fill="rgb(236,204,50)" rx="2" ry="2" />
<text  x="535.44" y="207.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (6,670 samples, 21.22%)</title><rect x="321.0" y="501" width="250.4" height="15.0" fill="rgb(225,103,25)" rx="2" ry="2" />
<text  x="323.96" y="511.5" >serde::de::MapAccess::next_value</text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="1132.6" y="533" width="0.1" height="15.0" fill="rgb(243,54,2)" rx="2" ry="2" />
<text  x="1135.56" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="19.4" y="869" width="0.1" height="15.0" fill="rgb(230,102,41)" rx="2" ry="2" />
<text  x="22.39" y="879.5" ></text>
</g>
<g >
<title>_&lt;char as unicode_xid..UnicodeXID&gt;::is_xid_start (4 samples, 0.01%)</title><rect x="234.1" y="165" width="0.2" height="15.0" fill="rgb(220,98,33)" rx="2" ry="2" />
<text  x="237.13" y="175.5" ></text>
</g>
<g >
<title>rusty_v8::scope::TryCatch&lt;P&gt;::new (6 samples, 0.02%)</title><rect x="1179.5" y="885" width="0.3" height="15.0" fill="rgb(234,168,22)" rx="2" ry="2" />
<text  x="1182.53" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="87.9" y="1045" width="0.1" height="15.0" fill="rgb(251,132,1)" rx="2" ry="2" />
<text  x="90.90" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="838.9" y="613" width="0.4" height="15.0" fill="rgb(207,91,12)" rx="2" ry="2" />
<text  x="841.94" y="623.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.01%)</title><rect x="223.1" y="613" width="0.1" height="15.0" fill="rgb(221,34,52)" rx="2" ry="2" />
<text  x="226.05" y="623.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="1069.9" y="789" width="0.5" height="15.0" fill="rgb(205,120,22)" rx="2" ry="2" />
<text  x="1072.94" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (30 samples, 0.10%)</title><rect x="584.4" y="501" width="1.1" height="15.0" fill="rgb(216,128,51)" rx="2" ry="2" />
<text  x="587.36" y="511.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..string..ToString&gt;::to_string (15 samples, 0.05%)</title><rect x="600.4" y="757" width="0.6" height="15.0" fill="rgb(211,223,43)" rx="2" ry="2" />
<text  x="603.43" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="1096.8" y="805" width="0.1" height="15.0" fill="rgb(245,124,49)" rx="2" ry="2" />
<text  x="1099.78" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (27 samples, 0.09%)</title><rect x="1059.7" y="837" width="1.0" height="15.0" fill="rgb(216,54,38)" rx="2" ry="2" />
<text  x="1062.65" y="847.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="209.1" y="789" width="0.2" height="15.0" fill="rgb(220,60,18)" rx="2" ry="2" />
<text  x="212.13" y="799.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc..string..String,serde_json..value..Value&gt;::get (15 samples, 0.05%)</title><rect x="574.6" y="629" width="0.6" height="15.0" fill="rgb(252,20,13)" rx="2" ry="2" />
<text  x="577.60" y="639.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="103.5" y="1077" width="0.2" height="15.0" fill="rgb(207,70,13)" rx="2" ry="2" />
<text  x="106.48" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (12 samples, 0.04%)</title><rect x="640.9" y="533" width="0.5" height="15.0" fill="rgb(224,179,21)" rx="2" ry="2" />
<text  x="643.94" y="543.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="181.5" y="1061" width="0.2" height="15.0" fill="rgb(222,213,12)" rx="2" ry="2" />
<text  x="184.53" y="1071.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner::_{{closure}} (22 samples, 0.07%)</title><rect x="236.8" y="357" width="0.8" height="15.0" fill="rgb(224,211,29)" rx="2" ry="2" />
<text  x="239.79" y="367.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (20 samples, 0.06%)</title><rect x="196.2" y="1093" width="0.8" height="15.0" fill="rgb(222,42,7)" rx="2" ry="2" />
<text  x="199.25" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Display&gt;::fmt (10 samples, 0.03%)</title><rect x="19.5" y="949" width="0.4" height="15.0" fill="rgb(216,92,14)" rx="2" ry="2" />
<text  x="22.54" y="959.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (42 samples, 0.13%)</title><rect x="131.0" y="1061" width="1.5" height="15.0" fill="rgb(212,70,41)" rx="2" ry="2" />
<text  x="133.96" y="1071.5" ></text>
</g>
<g >
<title>deno_core::modules::ModuleNameMap::get (9 samples, 0.03%)</title><rect x="633.6" y="805" width="0.3" height="15.0" fill="rgb(250,125,5)" rx="2" ry="2" />
<text  x="636.58" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.06%)</title><rect x="1047.4" y="725" width="0.7" height="15.0" fill="rgb(218,188,10)" rx="2" ry="2" />
<text  x="1050.41" y="735.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (4 samples, 0.01%)</title><rect x="90.4" y="1109" width="0.1" height="15.0" fill="rgb(233,120,47)" rx="2" ry="2" />
<text  x="93.38" y="1119.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (18 samples, 0.06%)</title><rect x="173.5" y="1077" width="0.7" height="15.0" fill="rgb(249,176,44)" rx="2" ry="2" />
<text  x="176.54" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="141.1" y="1029" width="0.1" height="15.0" fill="rgb(242,199,45)" rx="2" ry="2" />
<text  x="144.10" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (19 samples, 0.06%)</title><rect x="201.4" y="1077" width="0.7" height="15.0" fill="rgb(234,5,39)" rx="2" ry="2" />
<text  x="204.39" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="182.3" y="1013" width="0.1" height="15.0" fill="rgb(250,198,49)" rx="2" ry="2" />
<text  x="185.28" y="1023.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (24 samples, 0.08%)</title><rect x="1037.6" y="837" width="0.9" height="15.0" fill="rgb(254,193,40)" rx="2" ry="2" />
<text  x="1040.58" y="847.5" ></text>
</g>
<g >
<title>http::header::value::HeaderValue::from_str (10 samples, 0.03%)</title><rect x="663.4" y="853" width="0.4" height="15.0" fill="rgb(217,204,14)" rx="2" ry="2" />
<text  x="666.39" y="863.5" ></text>
</g>
<g >
<title>clap::app::App::new (13 samples, 0.04%)</title><rect x="142.5" y="1125" width="0.5" height="15.0" fill="rgb(241,203,15)" rx="2" ry="2" />
<text  x="145.49" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="589.5" y="661" width="0.2" height="15.0" fill="rgb(243,69,27)" rx="2" ry="2" />
<text  x="592.54" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="588.8" y="677" width="0.4" height="15.0" fill="rgb(248,125,9)" rx="2" ry="2" />
<text  x="591.83" y="687.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="1065.1" y="773" width="0.4" height="15.0" fill="rgb(209,189,8)" rx="2" ry="2" />
<text  x="1068.10" y="783.5" ></text>
</g>
<g >
<title>deno::disk_cache::DiskCache::get_cache_filename_with_extension (52 samples, 0.17%)</title><rect x="264.3" y="645" width="1.9" height="15.0" fill="rgb(227,161,22)" rx="2" ry="2" />
<text  x="267.28" y="655.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="213.4" y="485" width="0.3" height="15.0" fill="rgb(225,220,30)" rx="2" ry="2" />
<text  x="216.37" y="495.5" ></text>
</g>
<g >
<title>_&lt;core..str..pattern..MultiCharEqSearcher&lt;C&gt; as core..str..pattern..Searcher&gt;::next (4 samples, 0.01%)</title><rect x="79.9" y="1077" width="0.2" height="15.0" fill="rgb(240,129,29)" rx="2" ry="2" />
<text  x="82.94" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="204.3" y="949" width="0.1" height="15.0" fill="rgb(219,88,48)" rx="2" ry="2" />
<text  x="207.28" y="959.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="163.0" y="1125" width="0.3" height="15.0" fill="rgb(230,165,27)" rx="2" ry="2" />
<text  x="165.99" y="1135.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1002.5" y="725" width="0.2" height="15.0" fill="rgb(209,25,9)" rx="2" ry="2" />
<text  x="1005.51" y="735.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="267.2" y="373" width="0.2" height="15.0" fill="rgb(227,208,27)" rx="2" ry="2" />
<text  x="270.17" y="383.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.03%)</title><rect x="85.3" y="1029" width="0.3" height="15.0" fill="rgb(224,201,1)" rx="2" ry="2" />
<text  x="88.27" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (16 samples, 0.05%)</title><rect x="78.4" y="1109" width="0.6" height="15.0" fill="rgb(211,83,22)" rx="2" ry="2" />
<text  x="81.44" y="1119.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::find_equivalent (8 samples, 0.03%)</title><rect x="1111.4" y="549" width="0.3" height="15.0" fill="rgb(218,202,29)" rx="2" ry="2" />
<text  x="1114.42" y="559.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..Repr&lt;T&gt; as core..hash..Hash&gt;::hash (10 samples, 0.03%)</title><rect x="837.6" y="757" width="0.4" height="15.0" fill="rgb(211,228,21)" rx="2" ry="2" />
<text  x="840.59" y="767.5" ></text>
</g>
<g >
<title>_&lt;core..hash..sip..SipHasher13 as core..hash..Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="1071.9" y="757" width="0.1" height="15.0" fill="rgb(229,191,35)" rx="2" ry="2" />
<text  x="1074.85" y="767.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="222.5" y="645" width="0.3" height="15.0" fill="rgb(227,60,49)" rx="2" ry="2" />
<text  x="225.45" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.02%)</title><rect x="294.2" y="325" width="0.2" height="15.0" fill="rgb(223,19,32)" rx="2" ry="2" />
<text  x="297.20" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (24 samples, 0.08%)</title><rect x="1040.1" y="757" width="0.9" height="15.0" fill="rgb(213,174,30)" rx="2" ry="2" />
<text  x="1043.06" y="767.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::stmt::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_stmt_like (171 samples, 0.54%)</title><rect x="232.8" y="613" width="6.4" height="15.0" fill="rgb(221,79,52)" rx="2" ry="2" />
<text  x="235.82" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="12.8" y="1125" width="0.1" height="15.0" fill="rgb(237,200,48)" rx="2" ry="2" />
<text  x="15.78" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="269.6" y="389" width="0.2" height="15.0" fill="rgb(212,6,11)" rx="2" ry="2" />
<text  x="272.64" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.04%)</title><rect x="1105.9" y="485" width="0.5" height="15.0" fill="rgb(217,80,51)" rx="2" ry="2" />
<text  x="1108.90" y="495.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::new (9 samples, 0.03%)</title><rect x="202.2" y="1141" width="0.4" height="15.0" fill="rgb(214,122,35)" rx="2" ry="2" />
<text  x="205.22" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="620.0" y="757" width="0.1" height="15.0" fill="rgb(232,218,6)" rx="2" ry="2" />
<text  x="622.95" y="767.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope&lt;()&gt;::cast_local (2,021 samples, 6.43%)</title><rect x="1097.3" y="853" width="75.9" height="15.0" fill="rgb(232,45,1)" rx="2" ry="2" />
<text  x="1100.34" y="863.5" >rusty_v8..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="999.5" y="789" width="0.1" height="15.0" fill="rgb(253,58,36)" rx="2" ry="2" />
<text  x="1002.51" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="100.7" y="981" width="0.1" height="15.0" fill="rgb(238,181,15)" rx="2" ry="2" />
<text  x="103.70" y="991.5" ></text>
</g>
<g >
<title>_&lt;http..header..value..HeaderValue as core..clone..Clone&gt;::clone (3 samples, 0.01%)</title><rect x="1000.5" y="869" width="0.1" height="15.0" fill="rgb(228,56,53)" rx="2" ry="2" />
<text  x="1003.49" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (29 samples, 0.09%)</title><rect x="631.9" y="629" width="1.1" height="15.0" fill="rgb(212,15,7)" rx="2" ry="2" />
<text  x="634.93" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (6 samples, 0.02%)</title><rect x="1100.6" y="693" width="0.3" height="15.0" fill="rgb(235,10,46)" rx="2" ry="2" />
<text  x="1103.65" y="703.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="96.0" y="1093" width="0.2" height="15.0" fill="rgb(206,23,13)" rx="2" ry="2" />
<text  x="98.97" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (557 samples, 1.77%)</title><rect x="807.0" y="773" width="20.9" height="15.0" fill="rgb(242,172,30)" rx="2" ry="2" />
<text  x="810.03" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (9 samples, 0.03%)</title><rect x="239.3" y="629" width="0.3" height="15.0" fill="rgb(238,24,26)" rx="2" ry="2" />
<text  x="242.31" y="639.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="263.9" y="629" width="0.3" height="15.0" fill="rgb(222,126,53)" rx="2" ry="2" />
<text  x="266.86" y="639.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileCache::get (30 samples, 0.10%)</title><rect x="260.6" y="661" width="1.2" height="15.0" fill="rgb(250,63,15)" rx="2" ry="2" />
<text  x="263.63" y="671.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (6 samples, 0.02%)</title><rect x="111.7" y="1093" width="0.2" height="15.0" fill="rgb(219,202,30)" rx="2" ry="2" />
<text  x="114.70" y="1103.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (3 samples, 0.01%)</title><rect x="129.7" y="1093" width="0.1" height="15.0" fill="rgb(207,214,8)" rx="2" ry="2" />
<text  x="132.69" y="1103.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (5 samples, 0.02%)</title><rect x="827.8" y="741" width="0.1" height="15.0" fill="rgb(249,202,28)" rx="2" ry="2" />
<text  x="830.75" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="634.3" y="805" width="0.2" height="15.0" fill="rgb(217,128,10)" rx="2" ry="2" />
<text  x="637.26" y="815.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="262.3" y="517" width="0.2" height="15.0" fill="rgb(247,71,6)" rx="2" ry="2" />
<text  x="265.29" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (24 samples, 0.08%)</title><rect x="1084.3" y="789" width="0.9" height="15.0" fill="rgb(253,65,0)" rx="2" ry="2" />
<text  x="1087.28" y="799.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (2,229 samples, 7.09%)</title><rect x="845.4" y="645" width="83.6" height="15.0" fill="rgb(248,29,11)" rx="2" ry="2" />
<text  x="848.36" y="655.5" >core::ops..</text>
</g>
<g >
<title>core::ptr::drop_in_place (191 samples, 0.61%)</title><rect x="65.8" y="1093" width="7.2" height="15.0" fill="rgb(220,210,12)" rx="2" ry="2" />
<text  x="68.83" y="1103.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as core..fmt..Display&gt;::fmt (26 samples, 0.08%)</title><rect x="211.8" y="533" width="1.0" height="15.0" fill="rgb(232,206,48)" rx="2" ry="2" />
<text  x="214.83" y="543.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (9 samples, 0.03%)</title><rect x="184.8" y="1061" width="0.4" height="15.0" fill="rgb(236,54,15)" rx="2" ry="2" />
<text  x="187.84" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (13 samples, 0.04%)</title><rect x="1188.8" y="741" width="0.5" height="15.0" fill="rgb(233,156,7)" rx="2" ry="2" />
<text  x="1191.80" y="751.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (22 samples, 0.07%)</title><rect x="185.9" y="1029" width="0.9" height="15.0" fill="rgb(245,60,12)" rx="2" ry="2" />
<text  x="188.92" y="1039.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (36 samples, 0.11%)</title><rect x="661.3" y="885" width="1.3" height="15.0" fill="rgb(246,50,35)" rx="2" ry="2" />
<text  x="664.29" y="895.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (52 samples, 0.17%)</title><rect x="597.8" y="645" width="2.0" height="15.0" fill="rgb(235,152,27)" rx="2" ry="2" />
<text  x="600.84" y="655.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::fold (20 samples, 0.06%)</title><rect x="21.9" y="885" width="0.8" height="15.0" fill="rgb(225,177,33)" rx="2" ry="2" />
<text  x="24.90" y="895.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..vec..SpecFromElem&gt;::from_elem (6 samples, 0.02%)</title><rect x="664.2" y="805" width="0.2" height="15.0" fill="rgb(246,125,52)" rx="2" ry="2" />
<text  x="667.22" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.01%)</title><rect x="30.9" y="997" width="0.1" height="15.0" fill="rgb(215,126,30)" rx="2" ry="2" />
<text  x="33.87" y="1007.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..fmt..Display&gt;::fmt (11 samples, 0.03%)</title><rect x="587.6" y="645" width="0.4" height="15.0" fill="rgb(251,221,23)" rx="2" ry="2" />
<text  x="590.63" y="655.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.03%)</title><rect x="216.7" y="533" width="0.5" height="15.0" fill="rgb(225,110,23)" rx="2" ry="2" />
<text  x="219.75" y="543.5" ></text>
</g>
<g >
<title>alloc::collections::btree::navigate::_&lt;impl alloc..collections..btree..node..Handle&lt;alloc..collections..btree..node..NodeRef&lt;alloc..collections..btree..node..marker..Immut,K,V,alloc..collections..btree..node..marker..Leaf&gt;,alloc..collections..btree..node..marker..Edge&gt;&gt;::next_unchecked (3 samples, 0.01%)</title><rect x="20.8" y="965" width="0.1" height="15.0" fill="rgb(232,86,36)" rx="2" ry="2" />
<text  x="23.77" y="975.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (431 samples, 1.37%)</title><rect x="420.2" y="101" width="16.1" height="15.0" fill="rgb(243,181,1)" rx="2" ry="2" />
<text  x="423.15" y="111.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (833 samples, 2.65%)</title><rect x="796.7" y="789" width="31.2" height="15.0" fill="rgb(248,95,8)" rx="2" ry="2" />
<text  x="799.67" y="799.5" >al..</text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="153.6" y="1077" width="0.2" height="15.0" fill="rgb(247,22,3)" rx="2" ry="2" />
<text  x="156.56" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (23 samples, 0.07%)</title><rect x="657.2" y="165" width="0.9" height="15.0" fill="rgb(220,213,30)" rx="2" ry="2" />
<text  x="660.20" y="175.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (23 samples, 0.07%)</title><rect x="236.8" y="373" width="0.8" height="15.0" fill="rgb(220,33,27)" rx="2" ry="2" />
<text  x="239.76" y="383.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="187.9" y="1141" width="0.5" height="15.0" fill="rgb(238,193,35)" rx="2" ry="2" />
<text  x="190.91" y="1151.5" ></text>
</g>
<g >
<title>rusty_v8::scope::TryCatch&lt;P&gt;::new (3 samples, 0.01%)</title><rect x="621.9" y="805" width="0.2" height="15.0" fill="rgb(238,229,43)" rx="2" ry="2" />
<text  x="624.94" y="815.5" ></text>
</g>
<g >
<title>rustls::client::handy::ClientSessionMemoryCache::new (8 samples, 0.03%)</title><rect x="828.9" y="837" width="0.3" height="15.0" fill="rgb(213,113,12)" rx="2" ry="2" />
<text  x="831.92" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="16.5" y="933" width="0.1" height="15.0" fill="rgb(217,133,53)" rx="2" ry="2" />
<text  x="19.49" y="943.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="97.6" y="1125" width="0.3" height="15.0" fill="rgb(252,20,7)" rx="2" ry="2" />
<text  x="100.62" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (12 samples, 0.04%)</title><rect x="164.5" y="1029" width="0.4" height="15.0" fill="rgb(221,65,18)" rx="2" ry="2" />
<text  x="167.45" y="1039.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="19.7" y="869" width="0.2" height="15.0" fill="rgb(223,185,51)" rx="2" ry="2" />
<text  x="22.72" y="879.5" ></text>
</g>
<g >
<title>alloc::string::String::push (6 samples, 0.02%)</title><rect x="1189.3" y="869" width="0.2" height="15.0" fill="rgb(226,76,13)" rx="2" ry="2" />
<text  x="1192.29" y="879.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (25 samples, 0.08%)</title><rect x="1074.9" y="821" width="0.9" height="15.0" fill="rgb(222,165,14)" rx="2" ry="2" />
<text  x="1077.86" y="831.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..Repr&lt;T&gt; as core..hash..Hash&gt;::hash (10 samples, 0.03%)</title><rect x="665.2" y="773" width="0.3" height="15.0" fill="rgb(205,195,28)" rx="2" ry="2" />
<text  x="668.16" y="783.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_str (430 samples, 1.37%)</title><rect x="480.2" y="197" width="16.1" height="15.0" fill="rgb(216,61,35)" rx="2" ry="2" />
<text  x="483.18" y="207.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="187.7" y="1077" width="0.1" height="15.0" fill="rgb(207,220,36)" rx="2" ry="2" />
<text  x="190.73" y="1087.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next (5 samples, 0.02%)</title><rect x="232.6" y="565" width="0.2" height="15.0" fill="rgb(236,14,37)" rx="2" ry="2" />
<text  x="235.63" y="575.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (16 samples, 0.05%)</title><rect x="549.0" y="309" width="0.6" height="15.0" fill="rgb(254,125,6)" rx="2" ry="2" />
<text  x="552.00" y="319.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_args (73 samples, 0.23%)</title><rect x="233.2" y="469" width="2.7" height="15.0" fill="rgb(215,98,17)" rx="2" ry="2" />
<text  x="236.15" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="237.9" y="293" width="0.2" height="15.0" fill="rgb(227,142,48)" rx="2" ry="2" />
<text  x="240.88" y="303.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (42 samples, 0.13%)</title><rect x="189.4" y="1109" width="1.6" height="15.0" fill="rgb(246,39,33)" rx="2" ry="2" />
<text  x="192.42" y="1119.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="127.4" y="1093" width="0.1" height="15.0" fill="rgb(208,175,51)" rx="2" ry="2" />
<text  x="130.36" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="87.5" y="1061" width="0.1" height="15.0" fill="rgb(226,162,47)" rx="2" ry="2" />
<text  x="90.49" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (3 samples, 0.01%)</title><rect x="1061.2" y="805" width="0.1" height="15.0" fill="rgb(231,124,3)" rx="2" ry="2" />
<text  x="1064.19" y="815.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (59 samples, 0.19%)</title><rect x="568.0" y="325" width="2.2" height="15.0" fill="rgb(218,83,41)" rx="2" ry="2" />
<text  x="570.99" y="335.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (237 samples, 0.75%)</title><rect x="555.8" y="357" width="8.9" height="15.0" fill="rgb(241,172,11)" rx="2" ry="2" />
<text  x="558.79" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="263.1" y="533" width="0.2" height="15.0" fill="rgb(241,28,3)" rx="2" ry="2" />
<text  x="266.11" y="543.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.03%)</title><rect x="100.0" y="1109" width="0.3" height="15.0" fill="rgb(236,37,44)" rx="2" ry="2" />
<text  x="102.95" y="1119.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (739 samples, 2.35%)</title><rect x="442.7" y="245" width="27.7" height="15.0" fill="rgb(212,211,25)" rx="2" ry="2" />
<text  x="445.68" y="255.5" >_..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="128.7" y="1061" width="0.1" height="15.0" fill="rgb(223,200,27)" rx="2" ry="2" />
<text  x="131.67" y="1071.5" ></text>
</g>
<g >
<title>hyper::client::connect::http::HttpConnector::new (3 samples, 0.01%)</title><rect x="758.3" y="853" width="0.1" height="15.0" fill="rgb(207,199,14)" rx="2" ry="2" />
<text  x="761.34" y="863.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (8 samples, 0.03%)</title><rect x="19.6" y="917" width="0.3" height="15.0" fill="rgb(225,16,52)" rx="2" ry="2" />
<text  x="22.61" y="927.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="207.5" y="837" width="0.2" height="15.0" fill="rgb(237,29,42)" rx="2" ry="2" />
<text  x="210.55" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (8 samples, 0.03%)</title><rect x="619.4" y="805" width="0.3" height="15.0" fill="rgb(239,186,36)" rx="2" ry="2" />
<text  x="622.39" y="815.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (18 samples, 0.06%)</title><rect x="103.4" y="1109" width="0.6" height="15.0" fill="rgb(220,187,43)" rx="2" ry="2" />
<text  x="106.37" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (7 samples, 0.02%)</title><rect x="660.3" y="885" width="0.2" height="15.0" fill="rgb(209,142,47)" rx="2" ry="2" />
<text  x="663.27" y="895.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="205.9" y="1077" width="0.3" height="15.0" fill="rgb(226,32,8)" rx="2" ry="2" />
<text  x="208.93" y="1087.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (13 samples, 0.04%)</title><rect x="208.4" y="821" width="0.5" height="15.0" fill="rgb(211,41,28)" rx="2" ry="2" />
<text  x="211.45" y="831.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (8 samples, 0.03%)</title><rect x="17.6" y="1061" width="0.3" height="15.0" fill="rgb(208,135,50)" rx="2" ry="2" />
<text  x="20.58" y="1071.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="1096.7" y="853" width="0.2" height="15.0" fill="rgb(248,132,26)" rx="2" ry="2" />
<text  x="1099.67" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="828.4" y="741" width="0.1" height="15.0" fill="rgb(210,83,29)" rx="2" ry="2" />
<text  x="831.39" y="751.5" ></text>
</g>
<g >
<title>_&lt;u128 as swc_common..rustc_data_structures..stable_hasher..StableHasherResult&gt;::finish (6 samples, 0.02%)</title><rect x="230.3" y="597" width="0.2" height="15.0" fill="rgb(223,105,27)" rx="2" ry="2" />
<text  x="233.30" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (16 samples, 0.05%)</title><rect x="221.8" y="501" width="0.6" height="15.0" fill="rgb(239,11,45)" rx="2" ry="2" />
<text  x="224.78" y="511.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (30 samples, 0.10%)</title><rect x="1080.9" y="853" width="1.1" height="15.0" fill="rgb(229,152,49)" rx="2" ry="2" />
<text  x="1083.86" y="863.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (44 samples, 0.14%)</title><rect x="94.2" y="1093" width="1.7" height="15.0" fill="rgb(247,56,47)" rx="2" ry="2" />
<text  x="97.25" y="1103.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (11 samples, 0.03%)</title><rect x="321.3" y="357" width="0.4" height="15.0" fill="rgb(239,99,16)" rx="2" ry="2" />
<text  x="324.30" y="367.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_matcher..ArgMatcher as core..default..Default&gt;::default (4 samples, 0.01%)</title><rect x="63.6" y="1125" width="0.2" height="15.0" fill="rgb(222,187,43)" rx="2" ry="2" />
<text  x="66.65" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="1112.6" y="469" width="0.2" height="15.0" fill="rgb(213,223,40)" rx="2" ry="2" />
<text  x="1115.62" y="479.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.04%)</title><rect x="1077.0" y="821" width="0.5" height="15.0" fill="rgb(216,109,38)" rx="2" ry="2" />
<text  x="1080.03" y="831.5" ></text>
</g>
<g >
<title>deno::tsc::source_code_version_hash (29 samples, 0.09%)</title><rect x="267.4" y="661" width="1.0" height="15.0" fill="rgb(236,84,31)" rx="2" ry="2" />
<text  x="270.35" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="187.7" y="1093" width="0.1" height="15.0" fill="rgb(239,122,28)" rx="2" ry="2" />
<text  x="190.69" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Peekable&lt;I&gt; as core..iter..traits..iterator..Iterator&gt;::next (5 samples, 0.02%)</title><rect x="1186.4" y="885" width="0.1" height="15.0" fill="rgb(213,33,37)" rx="2" ry="2" />
<text  x="1189.36" y="895.5" ></text>
</g>
<g >
<title>deno_core::module_specifier::ModuleSpecifier::resolve_path (96 samples, 0.31%)</title><rect x="1185.9" y="917" width="3.6" height="15.0" fill="rgb(228,217,30)" rx="2" ry="2" />
<text  x="1188.91" y="927.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (21 samples, 0.07%)</title><rect x="82.9" y="1061" width="0.8" height="15.0" fill="rgb(243,145,26)" rx="2" ry="2" />
<text  x="85.91" y="1071.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (20 samples, 0.06%)</title><rect x="1035.8" y="853" width="0.7" height="15.0" fill="rgb(240,198,8)" rx="2" ry="2" />
<text  x="1038.78" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="229.2" y="533" width="0.1" height="15.0" fill="rgb(253,79,0)" rx="2" ry="2" />
<text  x="232.21" y="543.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for &amp;T&gt;::serialize (58 samples, 0.18%)</title><rect x="1112.2" y="597" width="2.2" height="15.0" fill="rgb(250,191,2)" rx="2" ry="2" />
<text  x="1115.17" y="607.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (24 samples, 0.08%)</title><rect x="1059.8" y="821" width="0.9" height="15.0" fill="rgb(208,191,17)" rx="2" ry="2" />
<text  x="1062.76" y="831.5" ></text>
</g>
<g >
<title>_&lt;bytes..bytes..Bytes as core..ops..drop..Drop&gt;::drop (5 samples, 0.02%)</title><rect x="645.1" y="645" width="0.2" height="15.0" fill="rgb(227,180,32)" rx="2" ry="2" />
<text  x="648.07" y="655.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="127.7" y="1109" width="0.4" height="15.0" fill="rgb(221,117,20)" rx="2" ry="2" />
<text  x="130.70" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="128.3" y="1061" width="0.1" height="15.0" fill="rgb(248,36,38)" rx="2" ry="2" />
<text  x="131.30" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="178.2" y="1061" width="0.2" height="15.0" fill="rgb(210,196,53)" rx="2" ry="2" />
<text  x="181.19" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (47 samples, 0.15%)</title><rect x="643.2" y="629" width="1.8" height="15.0" fill="rgb(233,229,49)" rx="2" ry="2" />
<text  x="646.23" y="639.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (61 samples, 0.19%)</title><rect x="639.5" y="709" width="2.3" height="15.0" fill="rgb(241,27,51)" rx="2" ry="2" />
<text  x="642.51" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="226.9" y="549" width="0.1" height="15.0" fill="rgb(235,161,1)" rx="2" ry="2" />
<text  x="229.88" y="559.5" ></text>
</g>
<g >
<title>_&lt;core..sync..atomic..AtomicPtr&lt;T&gt; as bytes..loom..sync..atomic..AtomicMut&lt;T&gt;&gt;::with_mut (3 samples, 0.01%)</title><rect x="645.1" y="613" width="0.2" height="15.0" fill="rgb(237,185,51)" rx="2" ry="2" />
<text  x="648.14" y="623.5" ></text>
</g>
<g >
<title>tokio::sync::mutex::Mutex&lt;T&gt;::lock::_{{closure}} (4 samples, 0.01%)</title><rect x="612.0" y="581" width="0.1" height="15.0" fill="rgb(246,184,32)" rx="2" ry="2" />
<text  x="614.99" y="591.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.04%)</title><rect x="228.8" y="629" width="0.5" height="15.0" fill="rgb(205,16,11)" rx="2" ry="2" />
<text  x="231.84" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="204.1" y="981" width="0.3" height="15.0" fill="rgb(225,11,16)" rx="2" ry="2" />
<text  x="207.13" y="991.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="1093.0" y="693" width="0.5" height="15.0" fill="rgb(235,66,45)" rx="2" ry="2" />
<text  x="1096.03" y="703.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="191.2" y="1093" width="0.3" height="15.0" fill="rgb(207,58,13)" rx="2" ry="2" />
<text  x="194.18" y="1103.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="101.5" y="1093" width="0.1" height="15.0" fill="rgb(225,225,28)" rx="2" ry="2" />
<text  x="104.45" y="1103.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as core..hash..Hash&gt;::hash (11 samples, 0.03%)</title><rect x="830.8" y="789" width="0.4" height="15.0" fill="rgb(226,98,53)" rx="2" ry="2" />
<text  x="833.79" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="260.4" y="517" width="0.2" height="15.0" fill="rgb(244,85,34)" rx="2" ry="2" />
<text  x="263.41" y="527.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (14 samples, 0.04%)</title><rect x="270.6" y="501" width="0.5" height="15.0" fill="rgb(238,38,35)" rx="2" ry="2" />
<text  x="273.58" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve_exact (12 samples, 0.04%)</title><rect x="1134.6" y="517" width="0.5" height="15.0" fill="rgb(252,222,27)" rx="2" ry="2" />
<text  x="1137.62" y="527.5" ></text>
</g>
<g >
<title>tokio::runtime::enter::Enter::block_on (18 samples, 0.06%)</title><rect x="198.8" y="1109" width="0.6" height="15.0" fill="rgb(245,171,16)" rx="2" ry="2" />
<text  x="201.76" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1106.6" y="581" width="0.1" height="15.0" fill="rgb(234,205,31)" rx="2" ry="2" />
<text  x="1109.58" y="591.5" ></text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="218.4" y="645" width="0.4" height="15.0" fill="rgb(243,104,2)" rx="2" ry="2" />
<text  x="221.44" y="655.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (14 samples, 0.04%)</title><rect x="757.5" y="597" width="0.6" height="15.0" fill="rgb(227,67,46)" rx="2" ry="2" />
<text  x="760.55" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="1005.9" y="821" width="0.1" height="15.0" fill="rgb(225,6,12)" rx="2" ry="2" />
<text  x="1008.89" y="831.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (518 samples, 1.65%)</title><rect x="476.9" y="229" width="19.4" height="15.0" fill="rgb(213,138,47)" rx="2" ry="2" />
<text  x="479.88" y="239.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="87.3" y="1125" width="0.3" height="15.0" fill="rgb(228,90,53)" rx="2" ry="2" />
<text  x="90.34" y="1135.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as core..hash..Hash&gt;::hash (11 samples, 0.03%)</title><rect x="664.5" y="821" width="0.4" height="15.0" fill="rgb(207,133,11)" rx="2" ry="2" />
<text  x="667.48" y="831.5" ></text>
</g>
<g >
<title>rusty_v8::isolate_create_params::CreateParams::external_references (5 samples, 0.02%)</title><rect x="1089.9" y="837" width="0.2" height="15.0" fill="rgb(235,57,18)" rx="2" ry="2" />
<text  x="1092.95" y="847.5" ></text>
</g>
<g >
<title>reqwest::proxy::get_sys_proxies (4 samples, 0.01%)</title><rect x="758.7" y="773" width="0.2" height="15.0" fill="rgb(237,130,41)" rx="2" ry="2" />
<text  x="761.75" y="783.5" ></text>
</g>
<g >
<title>_&lt;core..option..Option&lt;T&gt; as core..clone..Clone&gt;::clone (16 samples, 0.05%)</title><rect x="757.5" y="613" width="0.6" height="15.0" fill="rgb(238,219,46)" rx="2" ry="2" />
<text  x="760.47" y="623.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="613.5" y="517" width="0.3" height="15.0" fill="rgb(232,209,53)" rx="2" ry="2" />
<text  x="616.53" y="527.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (14 samples, 0.04%)</title><rect x="142.5" y="1141" width="0.5" height="15.0" fill="rgb(216,74,8)" rx="2" ry="2" />
<text  x="145.45" y="1151.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="180.1" y="1093" width="0.3" height="15.0" fill="rgb(221,61,33)" rx="2" ry="2" />
<text  x="183.11" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="140.3" y="1077" width="0.2" height="15.0" fill="rgb(219,143,1)" rx="2" ry="2" />
<text  x="143.31" y="1087.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (861 samples, 2.74%)</title><rect x="404.0" y="181" width="32.3" height="15.0" fill="rgb(237,180,54)" rx="2" ry="2" />
<text  x="407.01" y="191.5" >se..</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="194.7" y="1061" width="0.1" height="15.0" fill="rgb(205,3,14)" rx="2" ry="2" />
<text  x="197.67" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="136.7" y="1093" width="0.1" height="15.0" fill="rgb(214,111,54)" rx="2" ry="2" />
<text  x="139.67" y="1103.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (21 samples, 0.07%)</title><rect x="573.6" y="581" width="0.8" height="15.0" fill="rgb(238,96,13)" rx="2" ry="2" />
<text  x="576.59" y="591.5" ></text>
</g>
<g >
<title>deno::worker::MainWorker::create (9,218 samples, 29.33%)</title><rect x="832.1" y="933" width="346.0" height="15.0" fill="rgb(213,194,4)" rx="2" ry="2" />
<text  x="835.07" y="943.5" >deno::worker::MainWorker::create</text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (193 samples, 0.61%)</title><rect x="557.4" y="341" width="7.3" height="15.0" fill="rgb(237,141,7)" rx="2" ry="2" />
<text  x="560.45" y="351.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="660.0" y="821" width="0.2" height="15.0" fill="rgb(247,192,38)" rx="2" ry="2" />
<text  x="663.01" y="831.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (143 samples, 0.45%)</title><rect x="1049.7" y="789" width="5.3" height="15.0" fill="rgb(205,29,41)" rx="2" ry="2" />
<text  x="1052.67" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (12 samples, 0.04%)</title><rect x="200.9" y="1045" width="0.5" height="15.0" fill="rgb(231,51,10)" rx="2" ry="2" />
<text  x="203.94" y="1055.5" ></text>
</g>
<g >
<title>url::ParseOptions::parse (272 samples, 0.87%)</title><rect x="590.0" y="757" width="10.2" height="15.0" fill="rgb(227,193,12)" rx="2" ry="2" />
<text  x="593.03" y="767.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (14 samples, 0.04%)</title><rect x="149.4" y="1045" width="0.6" height="15.0" fill="rgb(206,171,11)" rx="2" ry="2" />
<text  x="152.43" y="1055.5" ></text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for &amp;mut W&gt;::write_all (8 samples, 0.03%)</title><rect x="1123.7" y="501" width="0.3" height="15.0" fill="rgb(221,150,20)" rx="2" ry="2" />
<text  x="1126.66" y="511.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (151 samples, 0.48%)</title><rect x="121.4" y="1109" width="5.7" height="15.0" fill="rgb(253,66,39)" rx="2" ry="2" />
<text  x="124.39" y="1119.5" ></text>
</g>
<g >
<title>serde_json::de::from_slice (9 samples, 0.03%)</title><rect x="1137.9" y="709" width="0.4" height="15.0" fill="rgb(213,54,38)" rx="2" ry="2" />
<text  x="1140.93" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="232.2" y="613" width="0.2" height="15.0" fill="rgb(216,207,53)" rx="2" ry="2" />
<text  x="235.21" y="623.5" ></text>
</g>
<g >
<title>deno::flags::reload_arg (10 samples, 0.03%)</title><rect x="98.6" y="1141" width="0.4" height="15.0" fill="rgb(236,101,7)" rx="2" ry="2" />
<text  x="101.60" y="1151.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (25 samples, 0.08%)</title><rect x="570.2" y="325" width="0.9" height="15.0" fill="rgb(213,17,47)" rx="2" ry="2" />
<text  x="573.21" y="335.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="118.9" y="1093" width="0.3" height="15.0" fill="rgb(237,56,8)" rx="2" ry="2" />
<text  x="121.91" y="1103.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (123 samples, 0.39%)</title><rect x="546.2" y="357" width="4.6" height="15.0" fill="rgb(227,142,35)" rx="2" ry="2" />
<text  x="549.22" y="367.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="13.9" y="1013" width="0.2" height="15.0" fill="rgb(249,25,46)" rx="2" ry="2" />
<text  x="16.94" y="1023.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (5 samples, 0.02%)</title><rect x="612.0" y="597" width="0.1" height="15.0" fill="rgb(229,118,28)" rx="2" ry="2" />
<text  x="614.96" y="607.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::clear (317 samples, 1.01%)</title><rect x="647.0" y="773" width="11.9" height="15.0" fill="rgb(247,130,16)" rx="2" ry="2" />
<text  x="649.98" y="783.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner::_{{closure}} (7 samples, 0.02%)</title><rect x="232.6" y="581" width="0.2" height="15.0" fill="rgb(227,97,4)" rx="2" ry="2" />
<text  x="235.55" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="106.5" y="1077" width="0.1" height="15.0" fill="rgb(221,6,35)" rx="2" ry="2" />
<text  x="109.48" y="1087.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="187.2" y="1093" width="0.2" height="15.0" fill="rgb(208,55,52)" rx="2" ry="2" />
<text  x="190.16" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="119.1" y="997" width="0.1" height="15.0" fill="rgb(218,25,9)" rx="2" ry="2" />
<text  x="122.14" y="1007.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.05%)</title><rect x="1085.3" y="837" width="0.7" height="15.0" fill="rgb(205,60,41)" rx="2" ry="2" />
<text  x="1088.33" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="1028.1" y="757" width="0.4" height="15.0" fill="rgb(207,77,53)" rx="2" ry="2" />
<text  x="1031.08" y="767.5" ></text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for alloc..vec..Vec&lt;u8&gt;&gt;::write_all (15 samples, 0.05%)</title><rect x="1166.5" y="565" width="0.6" height="15.0" fill="rgb(217,12,9)" rx="2" ry="2" />
<text  x="1169.50" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="1165.9" y="405" width="0.4" height="15.0" fill="rgb(251,211,45)" rx="2" ry="2" />
<text  x="1168.94" y="415.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (7 samples, 0.02%)</title><rect x="94.0" y="1093" width="0.2" height="15.0" fill="rgb(223,220,54)" rx="2" ry="2" />
<text  x="96.98" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (830 samples, 2.64%)</title><rect x="897.3" y="549" width="31.1" height="15.0" fill="rgb(249,204,15)" rx="2" ry="2" />
<text  x="900.28" y="559.5" >al..</text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (22 samples, 0.07%)</title><rect x="1056.3" y="805" width="0.8" height="15.0" fill="rgb(208,194,50)" rx="2" ry="2" />
<text  x="1059.31" y="815.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="185.0" y="997" width="0.2" height="15.0" fill="rgb(235,55,16)" rx="2" ry="2" />
<text  x="188.02" y="1007.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="230.8" y="517" width="0.1" height="15.0" fill="rgb(252,9,20)" rx="2" ry="2" />
<text  x="233.75" y="527.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (9 samples, 0.03%)</title><rect x="100.5" y="1077" width="0.3" height="15.0" fill="rgb(240,51,54)" rx="2" ry="2" />
<text  x="103.48" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (49 samples, 0.16%)</title><rect x="631.2" y="661" width="1.8" height="15.0" fill="rgb(234,39,28)" rx="2" ry="2" />
<text  x="634.18" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (22 samples, 0.07%)</title><rect x="1133.7" y="533" width="0.8" height="15.0" fill="rgb(214,104,39)" rx="2" ry="2" />
<text  x="1136.69" y="543.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (8 samples, 0.03%)</title><rect x="77.2" y="1061" width="0.3" height="15.0" fill="rgb(246,127,15)" rx="2" ry="2" />
<text  x="80.16" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (83 samples, 0.26%)</title><rect x="642.2" y="789" width="3.1" height="15.0" fill="rgb(218,88,49)" rx="2" ry="2" />
<text  x="645.22" y="799.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (1,377 samples, 4.38%)</title><rect x="387.8" y="261" width="51.6" height="15.0" fill="rgb(250,19,34)" rx="2" ry="2" />
<text  x="390.75" y="271.5" >_&lt;ser..</text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (5 samples, 0.02%)</title><rect x="1032.2" y="869" width="0.2" height="15.0" fill="rgb(218,150,46)" rx="2" ry="2" />
<text  x="1035.25" y="879.5" ></text>
</g>
<g >
<title>core::mem::replace (10 samples, 0.03%)</title><rect x="86.4" y="1093" width="0.4" height="15.0" fill="rgb(225,126,16)" rx="2" ry="2" />
<text  x="89.44" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend (163 samples, 0.52%)</title><rect x="602.0" y="645" width="6.2" height="15.0" fill="rgb(217,105,10)" rx="2" ry="2" />
<text  x="605.05" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (17 samples, 0.05%)</title><rect x="225.8" y="549" width="0.6" height="15.0" fill="rgb(219,56,20)" rx="2" ry="2" />
<text  x="228.76" y="559.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (13 samples, 0.04%)</title><rect x="192.5" y="1093" width="0.5" height="15.0" fill="rgb(208,93,4)" rx="2" ry="2" />
<text  x="195.49" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="118.2" y="1077" width="0.2" height="15.0" fill="rgb(216,216,53)" rx="2" ry="2" />
<text  x="121.16" y="1087.5" ></text>
</g>
<g >
<title>_&lt;tokio..runtime..basic_scheduler..BasicScheduler&lt;P&gt; as core..ops..drop..Drop&gt;::drop (5 samples, 0.02%)</title><rect x="199.6" y="1141" width="0.2" height="15.0" fill="rgb(210,20,51)" rx="2" ry="2" />
<text  x="202.59" y="1151.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (36 samples, 0.11%)</title><rect x="221.0" y="581" width="1.4" height="15.0" fill="rgb(252,53,21)" rx="2" ry="2" />
<text  x="224.03" y="591.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (45 samples, 0.14%)</title><rect x="112.9" y="1125" width="1.7" height="15.0" fill="rgb(209,147,12)" rx="2" ry="2" />
<text  x="115.87" y="1135.5" ></text>
</g>
<g >
<title>_&lt;deno..state..State as deno_core..modules..ModuleLoader&gt;::load::_{{closure}} (153 samples, 0.49%)</title><rect x="611.8" y="645" width="5.8" height="15.0" fill="rgb(241,157,15)" rx="2" ry="2" />
<text  x="614.84" y="655.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (11 samples, 0.03%)</title><rect x="12.3" y="1093" width="0.4" height="15.0" fill="rgb(238,42,23)" rx="2" ry="2" />
<text  x="15.25" y="1103.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="117.3" y="1013" width="0.1" height="15.0" fill="rgb(209,13,48)" rx="2" ry="2" />
<text  x="120.30" y="1023.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (27 samples, 0.09%)</title><rect x="1176.5" y="885" width="1.0" height="15.0" fill="rgb(229,47,44)" rx="2" ry="2" />
<text  x="1179.52" y="895.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="575.8" y="533" width="0.3" height="15.0" fill="rgb(209,73,48)" rx="2" ry="2" />
<text  x="578.80" y="543.5" ></text>
</g>
<g >
<title>swc_ecma_visit::visit_module_items::_{{closure}} (18 samples, 0.06%)</title><rect x="240.0" y="581" width="0.7" height="15.0" fill="rgb(239,48,24)" rx="2" ry="2" />
<text  x="242.99" y="591.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope::with_context (7 samples, 0.02%)</title><rect x="621.7" y="805" width="0.2" height="15.0" fill="rgb(232,44,7)" rx="2" ry="2" />
<text  x="624.68" y="815.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (6 samples, 0.02%)</title><rect x="590.6" y="661" width="0.2" height="15.0" fill="rgb(231,61,23)" rx="2" ry="2" />
<text  x="593.56" y="671.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (9 samples, 0.03%)</title><rect x="166.0" y="1093" width="0.4" height="15.0" fill="rgb(205,84,25)" rx="2" ry="2" />
<text  x="169.03" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (7 samples, 0.02%)</title><rect x="835.3" y="821" width="0.2" height="15.0" fill="rgb(234,44,47)" rx="2" ry="2" />
<text  x="838.26" y="831.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::trim_start_matches (5 samples, 0.02%)</title><rect x="105.5" y="1093" width="0.2" height="15.0" fill="rgb(226,26,6)" rx="2" ry="2" />
<text  x="108.55" y="1103.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (54 samples, 0.17%)</title><rect x="547.0" y="293" width="2.0" height="15.0" fill="rgb(219,137,28)" rx="2" ry="2" />
<text  x="549.97" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="110.0" y="1061" width="0.1" height="15.0" fill="rgb(230,48,1)" rx="2" ry="2" />
<text  x="112.98" y="1071.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::stmt::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_block_body (188 samples, 0.60%)</title><rect x="232.2" y="629" width="7.0" height="15.0" fill="rgb(209,161,15)" rx="2" ry="2" />
<text  x="235.18" y="639.5" ></text>
</g>
<g >
<title>deno::flags::lock_write_arg (7 samples, 0.02%)</title><rect x="98.3" y="1141" width="0.2" height="15.0" fill="rgb(240,164,49)" rx="2" ry="2" />
<text  x="101.26" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="1060.4" y="725" width="0.3" height="15.0" fill="rgb(242,149,51)" rx="2" ry="2" />
<text  x="1063.44" y="735.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="586.1" y="677" width="0.3" height="15.0" fill="rgb(250,226,52)" rx="2" ry="2" />
<text  x="589.13" y="687.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (23 samples, 0.07%)</title><rect x="116.6" y="1093" width="0.8" height="15.0" fill="rgb(211,156,3)" rx="2" ry="2" />
<text  x="119.58" y="1103.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.03%)</title><rect x="23.2" y="1029" width="0.3" height="15.0" fill="rgb(218,75,30)" rx="2" ry="2" />
<text  x="26.21" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="192.8" y="965" width="0.2" height="15.0" fill="rgb(221,135,34)" rx="2" ry="2" />
<text  x="195.83" y="975.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="226.2" y="389" width="0.2" height="15.0" fill="rgb(249,168,35)" rx="2" ry="2" />
<text  x="229.17" y="399.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="219.9" y="613" width="0.2" height="15.0" fill="rgb(209,169,8)" rx="2" ry="2" />
<text  x="222.86" y="623.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (2,291 samples, 7.29%)</title><rect x="384.4" y="277" width="86.0" height="15.0" fill="rgb(219,111,9)" rx="2" ry="2" />
<text  x="387.41" y="287.5" >serde::de:..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="321.6" y="245" width="0.1" height="15.0" fill="rgb(245,93,20)" rx="2" ry="2" />
<text  x="324.57" y="255.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (5 samples, 0.02%)</title><rect x="199.3" y="1013" width="0.1" height="15.0" fill="rgb(232,220,13)" rx="2" ry="2" />
<text  x="202.25" y="1023.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (172 samples, 0.55%)</title><rect x="489.9" y="101" width="6.4" height="15.0" fill="rgb(225,193,27)" rx="2" ry="2" />
<text  x="492.87" y="111.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (85 samples, 0.27%)</title><rect x="48.4" y="1029" width="3.2" height="15.0" fill="rgb(220,29,44)" rx="2" ry="2" />
<text  x="51.44" y="1039.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="142.7" y="1045" width="0.2" height="15.0" fill="rgb(246,1,27)" rx="2" ry="2" />
<text  x="145.68" y="1055.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..string..ToString&gt;::to_string (15 samples, 0.05%)</title><rect x="210.4" y="837" width="0.6" height="15.0" fill="rgb(212,205,36)" rx="2" ry="2" />
<text  x="213.40" y="847.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (24 samples, 0.08%)</title><rect x="165.1" y="1077" width="0.9" height="15.0" fill="rgb(248,175,13)" rx="2" ry="2" />
<text  x="168.05" y="1087.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="153.5" y="1109" width="0.3" height="15.0" fill="rgb(217,178,0)" rx="2" ry="2" />
<text  x="156.49" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="265.7" y="501" width="0.2" height="15.0" fill="rgb(239,180,51)" rx="2" ry="2" />
<text  x="268.70" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="201.6" y="1013" width="0.2" height="15.0" fill="rgb(224,128,30)" rx="2" ry="2" />
<text  x="204.58" y="1023.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (3 samples, 0.01%)</title><rect x="573.7" y="549" width="0.2" height="15.0" fill="rgb(224,6,1)" rx="2" ry="2" />
<text  x="576.74" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="1116.1" y="581" width="0.3" height="15.0" fill="rgb(236,1,8)" rx="2" ry="2" />
<text  x="1119.08" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.04%)</title><rect x="78.6" y="1093" width="0.4" height="15.0" fill="rgb(212,159,30)" rx="2" ry="2" />
<text  x="81.55" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (16 samples, 0.05%)</title><rect x="205.1" y="1013" width="0.6" height="15.0" fill="rgb(229,161,23)" rx="2" ry="2" />
<text  x="208.11" y="1023.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="620.8" y="725" width="0.2" height="15.0" fill="rgb(219,222,26)" rx="2" ry="2" />
<text  x="623.82" y="735.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (34 samples, 0.11%)</title><rect x="185.5" y="1045" width="1.3" height="15.0" fill="rgb(216,36,52)" rx="2" ry="2" />
<text  x="188.47" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="668.3" y="789" width="0.5" height="15.0" fill="rgb(208,106,42)" rx="2" ry="2" />
<text  x="671.35" y="799.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="659.4" y="853" width="0.2" height="15.0" fill="rgb(239,145,29)" rx="2" ry="2" />
<text  x="662.41" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="839.7" y="741" width="0.1" height="15.0" fill="rgb(247,155,0)" rx="2" ry="2" />
<text  x="842.65" y="751.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (653 samples, 2.08%)</title><rect x="445.9" y="229" width="24.5" height="15.0" fill="rgb(214,212,46)" rx="2" ry="2" />
<text  x="448.91" y="239.5" >s..</text>
</g>
<g >
<title>core::ptr::drop_in_place (292 samples, 0.93%)</title><rect x="647.9" y="565" width="11.0" height="15.0" fill="rgb(248,149,46)" rx="2" ry="2" />
<text  x="650.92" y="575.5" ></text>
</g>
<g >
<title>core::str::pattern::Searcher::next_reject (3 samples, 0.01%)</title><rect x="105.6" y="1061" width="0.1" height="15.0" fill="rgb(219,66,21)" rx="2" ry="2" />
<text  x="108.62" y="1071.5" ></text>
</g>
<g >
<title>deno::flags::lock_write_arg (7 samples, 0.02%)</title><rect x="156.1" y="1125" width="0.3" height="15.0" fill="rgb(248,57,15)" rx="2" ry="2" />
<text  x="159.12" y="1135.5" ></text>
</g>
<g >
<title>url::file_url_segments_to_pathbuf (45 samples, 0.14%)</title><rect x="214.2" y="501" width="1.7" height="15.0" fill="rgb(234,187,45)" rx="2" ry="2" />
<text  x="217.23" y="511.5" ></text>
</g>
<g >
<title>deno::flags::reload_arg_parse (6 samples, 0.02%)</title><rect x="197.6" y="1141" width="0.2" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="200.56" y="1151.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="266.0" y="581" width="0.2" height="15.0" fill="rgb(214,188,38)" rx="2" ry="2" />
<text  x="269.04" y="591.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="202.0" y="997" width="0.1" height="15.0" fill="rgb(252,76,54)" rx="2" ry="2" />
<text  x="204.99" y="1007.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (12 samples, 0.04%)</title><rect x="95.4" y="1045" width="0.5" height="15.0" fill="rgb(246,138,23)" rx="2" ry="2" />
<text  x="98.45" y="1055.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (5 samples, 0.02%)</title><rect x="143.9" y="1093" width="0.2" height="15.0" fill="rgb(237,29,47)" rx="2" ry="2" />
<text  x="146.91" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="1073.4" y="821" width="0.2" height="15.0" fill="rgb(215,132,9)" rx="2" ry="2" />
<text  x="1076.43" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="98.8" y="1061" width="0.2" height="15.0" fill="rgb(226,119,37)" rx="2" ry="2" />
<text  x="101.83" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="261.5" y="581" width="0.2" height="15.0" fill="rgb(221,160,44)" rx="2" ry="2" />
<text  x="264.54" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="1032.8" y="805" width="0.2" height="15.0" fill="rgb(233,79,20)" rx="2" ry="2" />
<text  x="1035.85" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (12 samples, 0.04%)</title><rect x="65.1" y="1141" width="0.4" height="15.0" fill="rgb(241,102,32)" rx="2" ry="2" />
<text  x="68.07" y="1151.5" ></text>
</g>
<g >
<title>string_cache::trivial_impls::_&lt;impl core..convert..From&lt;&amp;str&gt; for string_cache..atom..Atom&lt;Static&gt;&gt;::from (6 samples, 0.02%)</title><rect x="231.7" y="453" width="0.2" height="15.0" fill="rgb(205,160,40)" rx="2" ry="2" />
<text  x="234.69" y="463.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="99.8" y="1061" width="0.1" height="15.0" fill="rgb(251,184,27)" rx="2" ry="2" />
<text  x="102.76" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="194.2" y="1093" width="0.1" height="15.0" fill="rgb(247,116,37)" rx="2" ry="2" />
<text  x="197.22" y="1103.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 0.05%)</title><rect x="1082.9" y="837" width="0.6" height="15.0" fill="rgb(212,141,9)" rx="2" ry="2" />
<text  x="1085.93" y="847.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="206.6" y="1141" width="0.2" height="15.0" fill="rgb(233,63,13)" rx="2" ry="2" />
<text  x="209.57" y="1151.5" ></text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="588.4" y="677" width="0.4" height="15.0" fill="rgb(239,67,26)" rx="2" ry="2" />
<text  x="591.42" y="687.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (4 samples, 0.01%)</title><rect x="266.5" y="517" width="0.2" height="15.0" fill="rgb(219,31,50)" rx="2" ry="2" />
<text  x="269.53" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="1069.4" y="805" width="0.2" height="15.0" fill="rgb(212,123,1)" rx="2" ry="2" />
<text  x="1072.41" y="815.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as core..fmt..Display&gt;::fmt (13 samples, 0.04%)</title><rect x="260.1" y="629" width="0.5" height="15.0" fill="rgb(254,131,40)" rx="2" ry="2" />
<text  x="263.15" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="21.4" y="1013" width="0.2" height="15.0" fill="rgb(210,23,35)" rx="2" ry="2" />
<text  x="24.38" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.02%)</title><rect x="144.6" y="1045" width="0.2" height="15.0" fill="rgb(249,186,10)" rx="2" ry="2" />
<text  x="147.59" y="1055.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="178.5" y="1093" width="0.2" height="15.0" fill="rgb(214,79,15)" rx="2" ry="2" />
<text  x="181.45" y="1103.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (650 samples, 2.07%)</title><rect x="324.9" y="373" width="24.4" height="15.0" fill="rgb(227,30,28)" rx="2" ry="2" />
<text  x="327.94" y="383.5" >_..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="1060.6" y="709" width="0.1" height="15.0" fill="rgb(225,58,0)" rx="2" ry="2" />
<text  x="1063.55" y="719.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (131 samples, 0.42%)</title><rect x="1018.8" y="773" width="5.0" height="15.0" fill="rgb(215,31,33)" rx="2" ry="2" />
<text  x="1021.84" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="216.0" y="517" width="0.3" height="15.0" fill="rgb(252,30,14)" rx="2" ry="2" />
<text  x="219.03" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (125 samples, 0.40%)</title><rect x="1027.5" y="821" width="4.7" height="15.0" fill="rgb(252,31,53)" rx="2" ry="2" />
<text  x="1030.52" y="831.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_url (272 samples, 0.87%)</title><rect x="623.1" y="773" width="10.2" height="15.0" fill="rgb(211,76,31)" rx="2" ry="2" />
<text  x="626.11" y="783.5" ></text>
</g>
<g >
<title>serde_json::value::to_value (369 samples, 1.17%)</title><rect x="1124.1" y="693" width="13.8" height="15.0" fill="rgb(244,227,9)" rx="2" ry="2" />
<text  x="1127.08" y="703.5" ></text>
</g>
<g >
<title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (4 samples, 0.01%)</title><rect x="16.7" y="1045" width="0.1" height="15.0" fill="rgb(246,43,2)" rx="2" ry="2" />
<text  x="19.68" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="588.2" y="629" width="0.2" height="15.0" fill="rgb(237,209,33)" rx="2" ry="2" />
<text  x="591.23" y="639.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (154 samples, 0.49%)</title><rect x="611.8" y="661" width="5.8" height="15.0" fill="rgb(229,91,33)" rx="2" ry="2" />
<text  x="614.81" y="671.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..Visitor&gt;::visit_str (9 samples, 0.03%)</title><rect x="270.8" y="421" width="0.3" height="15.0" fill="rgb(216,115,19)" rx="2" ry="2" />
<text  x="273.77" y="431.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="835.7" y="757" width="0.1" height="15.0" fill="rgb(216,103,49)" rx="2" ry="2" />
<text  x="838.71" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="72.7" y="917" width="0.1" height="15.0" fill="rgb(225,229,38)" rx="2" ry="2" />
<text  x="75.73" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="929.0" y="773" width="0.2" height="15.0" fill="rgb(250,222,18)" rx="2" ry="2" />
<text  x="932.04" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="547.6" y="149" width="0.6" height="15.0" fill="rgb(205,140,40)" rx="2" ry="2" />
<text  x="550.65" y="159.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (81 samples, 0.26%)</title><rect x="638.8" y="901" width="3.0" height="15.0" fill="rgb(245,155,17)" rx="2" ry="2" />
<text  x="641.76" y="911.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_with_scheme (268 samples, 0.85%)</title><rect x="623.3" y="757" width="10.0" height="15.0" fill="rgb(242,155,9)" rx="2" ry="2" />
<text  x="626.26" y="767.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="664.7" y="789" width="0.2" height="15.0" fill="rgb(213,159,20)" rx="2" ry="2" />
<text  x="667.74" y="799.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (32 samples, 0.10%)</title><rect x="269.2" y="597" width="1.2" height="15.0" fill="rgb(222,179,3)" rx="2" ry="2" />
<text  x="272.16" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (12 samples, 0.04%)</title><rect x="77.0" y="1125" width="0.5" height="15.0" fill="rgb(216,119,6)" rx="2" ry="2" />
<text  x="80.01" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert::_{{closure}} (94 samples, 0.30%)</title><rect x="1028.5" y="757" width="3.5" height="15.0" fill="rgb(205,161,28)" rx="2" ry="2" />
<text  x="1031.45" y="767.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (8,074 samples, 25.69%)</title><rect x="270.4" y="581" width="303.1" height="15.0" fill="rgb(250,22,7)" rx="2" ry="2" />
<text  x="273.40" y="591.5" >_&lt;serde_json..de..MapAccess&lt;R&gt; as serde...</text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (73 samples, 0.23%)</title><rect x="639.1" y="821" width="2.7" height="15.0" fill="rgb(207,70,47)" rx="2" ry="2" />
<text  x="642.06" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="97.5" y="1045" width="0.1" height="15.0" fill="rgb(220,94,24)" rx="2" ry="2" />
<text  x="100.47" y="1055.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="208.6" y="789" width="0.3" height="15.0" fill="rgb(237,8,26)" rx="2" ry="2" />
<text  x="211.60" y="799.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="588.5" y="629" width="0.3" height="15.0" fill="rgb(249,166,42)" rx="2" ry="2" />
<text  x="591.53" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="235.4" y="165" width="0.2" height="15.0" fill="rgb(234,111,0)" rx="2" ry="2" />
<text  x="238.44" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="587.9" y="533" width="0.1" height="15.0" fill="rgb(252,82,42)" rx="2" ry="2" />
<text  x="590.89" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="834.1" y="821" width="0.2" height="15.0" fill="rgb(241,129,30)" rx="2" ry="2" />
<text  x="837.10" y="831.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.03%)</title><rect x="1089.6" y="805" width="0.3" height="15.0" fill="rgb(231,95,40)" rx="2" ry="2" />
<text  x="1092.61" y="815.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="618.3" y="757" width="0.1" height="15.0" fill="rgb(234,47,17)" rx="2" ry="2" />
<text  x="621.30" y="767.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry_seed (1,324 samples, 4.21%)</title><rect x="271.3" y="485" width="49.7" height="15.0" fill="rgb(253,55,22)" rx="2" ry="2" />
<text  x="274.26" y="495.5" >serde..</text>
</g>
<g >
<title>deno::file_fetcher::SourceFileCache::get (13 samples, 0.04%)</title><rect x="216.7" y="565" width="0.5" height="15.0" fill="rgb(234,117,38)" rx="2" ry="2" />
<text  x="219.67" y="575.5" ></text>
</g>
<g >
<title>url::Url::to_file_path (47 samples, 0.15%)</title><rect x="214.2" y="517" width="1.7" height="15.0" fill="rgb(234,22,45)" rx="2" ry="2" />
<text  x="217.16" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="118.2" y="1045" width="0.2" height="15.0" fill="rgb(218,19,27)" rx="2" ry="2" />
<text  x="121.24" y="1055.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::values_of (5 samples, 0.02%)</title><rect x="198.1" y="1125" width="0.2" height="15.0" fill="rgb(251,0,10)" rx="2" ry="2" />
<text  x="201.09" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="162.7" y="1045" width="0.2" height="15.0" fill="rgb(207,192,51)" rx="2" ry="2" />
<text  x="165.72" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="226.0" y="469" width="0.4" height="15.0" fill="rgb(235,175,12)" rx="2" ry="2" />
<text  x="228.98" y="479.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (42 samples, 0.13%)</title><rect x="661.1" y="901" width="1.5" height="15.0" fill="rgb(215,180,36)" rx="2" ry="2" />
<text  x="664.06" y="911.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_matches..ArgMatches as core..default..Default&gt;::default (3 samples, 0.01%)</title><rect x="63.7" y="1109" width="0.1" height="15.0" fill="rgb(221,38,34)" rx="2" ry="2" />
<text  x="66.69" y="1119.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (30 samples, 0.10%)</title><rect x="1072.1" y="853" width="1.1" height="15.0" fill="rgb(240,192,10)" rx="2" ry="2" />
<text  x="1075.08" y="863.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Cloned&lt;I&gt; as core..iter..traits..iterator..Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="659.5" y="805" width="0.1" height="15.0" fill="rgb(230,166,51)" rx="2" ry="2" />
<text  x="662.52" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="118.6" y="1109" width="0.2" height="15.0" fill="rgb(242,189,36)" rx="2" ry="2" />
<text  x="121.65" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (84 samples, 0.27%)</title><rect x="39.7" y="1093" width="3.1" height="15.0" fill="rgb(217,97,50)" rx="2" ry="2" />
<text  x="42.70" y="1103.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for alloc..vec..Vec&lt;T&gt;&gt;::serialize (3 samples, 0.01%)</title><rect x="1124.0" y="549" width="0.1" height="15.0" fill="rgb(244,38,17)" rx="2" ry="2" />
<text  x="1126.96" y="559.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for u32&gt;::serialize (16 samples, 0.05%)</title><rect x="1170.4" y="581" width="0.6" height="15.0" fill="rgb(237,31,11)" rx="2" ry="2" />
<text  x="1173.40" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (387 samples, 1.23%)</title><rect x="244.5" y="629" width="14.5" height="15.0" fill="rgb(249,207,13)" rx="2" ry="2" />
<text  x="247.45" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="1177.1" y="805" width="0.4" height="15.0" fill="rgb(213,28,3)" rx="2" ry="2" />
<text  x="1180.09" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (23 samples, 0.07%)</title><rect x="204.8" y="1061" width="0.9" height="15.0" fill="rgb(241,114,19)" rx="2" ry="2" />
<text  x="207.85" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.09%)</title><rect x="32.1" y="965" width="1.0" height="15.0" fill="rgb(211,104,38)" rx="2" ry="2" />
<text  x="35.08" y="975.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="213.4" y="469" width="0.3" height="15.0" fill="rgb(208,117,10)" rx="2" ry="2" />
<text  x="216.41" y="479.5" ></text>
</g>
<g >
<title>deno::flags::permission_args_parse (46 samples, 0.15%)</title><rect x="195.8" y="1141" width="1.8" height="15.0" fill="rgb(214,189,14)" rx="2" ry="2" />
<text  x="198.84" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (14 samples, 0.04%)</title><rect x="200.9" y="1077" width="0.5" height="15.0" fill="rgb(234,132,28)" rx="2" ry="2" />
<text  x="203.87" y="1087.5" ></text>
</g>
<g >
<title>deno::ops::tty::init (67 samples, 0.21%)</title><rect x="1079.9" y="901" width="2.5" height="15.0" fill="rgb(207,209,19)" rx="2" ry="2" />
<text  x="1082.93" y="911.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::clear (318 samples, 1.01%)</title><rect x="646.9" y="789" width="12.0" height="15.0" fill="rgb(246,87,11)" rx="2" ry="2" />
<text  x="649.95" y="799.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="229.2" y="549" width="0.1" height="15.0" fill="rgb(249,113,2)" rx="2" ry="2" />
<text  x="232.17" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::free_buckets (3 samples, 0.01%)</title><rect x="1003.3" y="709" width="0.2" height="15.0" fill="rgb(206,152,44)" rx="2" ry="2" />
<text  x="1006.34" y="719.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (485 samples, 1.54%)</title><rect x="302.7" y="309" width="18.2" height="15.0" fill="rgb(241,220,0)" rx="2" ry="2" />
<text  x="305.72" y="319.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_token (19 samples, 0.06%)</title><rect x="231.5" y="549" width="0.7" height="15.0" fill="rgb(244,38,18)" rx="2" ry="2" />
<text  x="234.46" y="559.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..scopeguard..ScopeGuard&lt;T,F&gt; as core..ops..drop..Drop&gt;::drop (4 samples, 0.01%)</title><rect x="1049.8" y="741" width="0.1" height="15.0" fill="rgb(206,112,41)" rx="2" ry="2" />
<text  x="1052.78" y="751.5" ></text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for &amp;mut W&gt;::write_all (7 samples, 0.02%)</title><rect x="1170.7" y="533" width="0.3" height="15.0" fill="rgb(212,0,18)" rx="2" ry="2" />
<text  x="1173.74" y="543.5" ></text>
</g>
<g >
<title>deno::tokio_util::run_basic (26,408 samples, 84.02%)</title><rect x="198.3" y="1205" width="991.4" height="15.0" fill="rgb(214,34,11)" rx="2" ry="2" />
<text  x="201.28" y="1215.5" >deno::tokio_util::run_basic</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1098.5" y="709" width="0.2" height="15.0" fill="rgb(223,62,12)" rx="2" ry="2" />
<text  x="1101.55" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="192.2" y="1125" width="0.1" height="15.0" fill="rgb(216,63,8)" rx="2" ry="2" />
<text  x="195.19" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (29 samples, 0.09%)</title><rect x="1184.3" y="757" width="1.1" height="15.0" fill="rgb(208,21,20)" rx="2" ry="2" />
<text  x="1187.33" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (9 samples, 0.03%)</title><rect x="1077.2" y="805" width="0.3" height="15.0" fill="rgb(211,174,32)" rx="2" ry="2" />
<text  x="1080.18" y="815.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::short (3 samples, 0.01%)</title><rect x="110.3" y="1141" width="0.1" height="15.0" fill="rgb(236,118,2)" rx="2" ry="2" />
<text  x="113.31" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="241.1" y="581" width="0.2" height="15.0" fill="rgb(230,65,3)" rx="2" ry="2" />
<text  x="244.15" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="156.0" y="1029" width="0.1" height="15.0" fill="rgb(242,155,16)" rx="2" ry="2" />
<text  x="159.00" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="14.0" y="997" width="0.1" height="15.0" fill="rgb(221,72,9)" rx="2" ry="2" />
<text  x="16.98" y="1007.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (10 samples, 0.03%)</title><rect x="196.6" y="1061" width="0.4" height="15.0" fill="rgb(231,3,31)" rx="2" ry="2" />
<text  x="199.62" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="178.6" y="1029" width="0.1" height="15.0" fill="rgb(225,129,25)" rx="2" ry="2" />
<text  x="181.60" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="76.3" y="1061" width="0.2" height="15.0" fill="rgb(254,119,16)" rx="2" ry="2" />
<text  x="79.26" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="114.9" y="1093" width="0.3" height="15.0" fill="rgb(211,98,14)" rx="2" ry="2" />
<text  x="117.89" y="1103.5" ></text>
</g>
<g >
<title>_&lt;rusty_v8..V8..GLOBAL_STATE as core..ops..deref..Deref&gt;::deref (4 samples, 0.01%)</title><rect x="1092.4" y="757" width="0.1" height="15.0" fill="rgb(208,108,11)" rx="2" ry="2" />
<text  x="1095.39" y="767.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="187.1" y="1109" width="0.3" height="15.0" fill="rgb(215,154,0)" rx="2" ry="2" />
<text  x="190.13" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="586.9" y="709" width="0.2" height="15.0" fill="rgb(223,67,25)" rx="2" ry="2" />
<text  x="589.88" y="719.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="218.5" y="613" width="0.3" height="15.0" fill="rgb(254,120,34)" rx="2" ry="2" />
<text  x="221.51" y="623.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (16 samples, 0.05%)</title><rect x="85.0" y="1045" width="0.6" height="15.0" fill="rgb(234,201,41)" rx="2" ry="2" />
<text  x="87.97" y="1055.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::mod_instantiate (33 samples, 0.10%)</title><rect x="618.0" y="837" width="1.3" height="15.0" fill="rgb(245,44,10)" rx="2" ry="2" />
<text  x="621.04" y="847.5" ></text>
</g>
<g >
<title>rusty_v8::script::_&lt;impl rusty_v8..data..Script&gt;::compile (6 samples, 0.02%)</title><rect x="1179.8" y="885" width="0.2" height="15.0" fill="rgb(225,49,17)" rx="2" ry="2" />
<text  x="1182.75" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="835.4" y="773" width="0.1" height="15.0" fill="rgb(241,209,54)" rx="2" ry="2" />
<text  x="838.41" y="783.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (15 samples, 0.05%)</title><rect x="179.5" y="1093" width="0.5" height="15.0" fill="rgb(251,94,10)" rx="2" ry="2" />
<text  x="182.47" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="212.5" y="389" width="0.3" height="15.0" fill="rgb(251,17,21)" rx="2" ry="2" />
<text  x="215.50" y="399.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (31,421 samples, 99.97%)</title><rect x="10.1" y="1237" width="1179.6" height="15.0" fill="rgb(231,36,16)" rx="2" ry="2" />
<text  x="13.11" y="1247.5" >core::ops::function::FnOnce::call_once</text>
</g>
<g >
<title>rusty_v8::array_buffer::_&lt;impl rusty_v8..data..ArrayBuffer&gt;::with_backing_store (4 samples, 0.01%)</title><rect x="1100.1" y="741" width="0.1" height="15.0" fill="rgb(225,151,29)" rx="2" ry="2" />
<text  x="1103.09" y="751.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy::_{{closure}} (3 samples, 0.01%)</title><rect x="259.3" y="597" width="0.1" height="15.0" fill="rgb(220,123,12)" rx="2" ry="2" />
<text  x="262.32" y="607.5" ></text>
</g>
<g >
<title>lazy_static::lazy::Lazy&lt;T&gt;::get::_{{closure}} (7 samples, 0.02%)</title><rect x="234.8" y="213" width="0.3" height="15.0" fill="rgb(254,110,19)" rx="2" ry="2" />
<text  x="237.84" y="223.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="168.8" y="1061" width="0.2" height="15.0" fill="rgb(206,78,28)" rx="2" ry="2" />
<text  x="171.77" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="1078.9" y="725" width="0.3" height="15.0" fill="rgb(230,93,15)" rx="2" ry="2" />
<text  x="1081.87" y="735.5" ></text>
</g>
<g >
<title>alloc::string::String::push (12 samples, 0.04%)</title><rect x="1185.4" y="885" width="0.5" height="15.0" fill="rgb(223,95,52)" rx="2" ry="2" />
<text  x="1188.42" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="828.8" y="789" width="0.1" height="15.0" fill="rgb(205,144,7)" rx="2" ry="2" />
<text  x="831.77" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (10 samples, 0.03%)</title><rect x="135.4" y="1077" width="0.3" height="15.0" fill="rgb(246,37,49)" rx="2" ry="2" />
<text  x="138.35" y="1087.5" ></text>
</g>
<g >
<title>_&lt;core..task..wake..Waker as core..clone..Clone&gt;::clone (6 samples, 0.02%)</title><rect x="209.8" y="789" width="0.2" height="15.0" fill="rgb(211,27,35)" rx="2" ry="2" />
<text  x="212.76" y="799.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="227.7" y="597" width="0.5" height="15.0" fill="rgb(212,104,54)" rx="2" ry="2" />
<text  x="230.71" y="607.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::with_capacity (11 samples, 0.03%)</title><rect x="665.5" y="853" width="0.4" height="15.0" fill="rgb(216,84,25)" rx="2" ry="2" />
<text  x="668.53" y="863.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::is_present (6 samples, 0.02%)</title><rect x="195.3" y="1125" width="0.3" height="15.0" fill="rgb(230,205,5)" rx="2" ry="2" />
<text  x="198.35" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="618.6" y="757" width="0.1" height="15.0" fill="rgb(226,4,54)" rx="2" ry="2" />
<text  x="621.56" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (198 samples, 0.63%)</title><rect x="65.6" y="1141" width="7.4" height="15.0" fill="rgb(249,7,31)" rx="2" ry="2" />
<text  x="68.56" y="1151.5" ></text>
</g>
<g >
<title>deno::tsc::CompilerConfig::load (7 samples, 0.02%)</title><rect x="831.8" y="901" width="0.3" height="15.0" fill="rgb(211,80,26)" rx="2" ry="2" />
<text  x="834.81" y="911.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="111.0" y="1093" width="0.3" height="15.0" fill="rgb(208,104,5)" rx="2" ry="2" />
<text  x="114.03" y="1103.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="136.9" y="1109" width="0.3" height="15.0" fill="rgb(232,199,52)" rx="2" ry="2" />
<text  x="139.86" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="621.1" y="709" width="0.2" height="15.0" fill="rgb(230,73,2)" rx="2" ry="2" />
<text  x="624.08" y="719.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (215 samples, 0.68%)</title><rect x="1024.1" y="853" width="8.1" height="15.0" fill="rgb(220,73,42)" rx="2" ry="2" />
<text  x="1027.14" y="863.5" ></text>
</g>
<g >
<title>_&lt;futures_util..stream..stream..next..Next&lt;St&gt; as core..future..future..Future&gt;::poll (178 samples, 0.57%)</title><rect x="211.4" y="693" width="6.7" height="15.0" fill="rgb(251,182,14)" rx="2" ry="2" />
<text  x="214.38" y="703.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="166.4" y="1093" width="0.2" height="15.0" fill="rgb(205,153,25)" rx="2" ry="2" />
<text  x="169.36" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (3 samples, 0.01%)</title><rect x="73.5" y="1077" width="0.1" height="15.0" fill="rgb(207,154,0)" rx="2" ry="2" />
<text  x="76.48" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="127.2" y="1061" width="0.2" height="15.0" fill="rgb(233,30,0)" rx="2" ry="2" />
<text  x="130.21" y="1071.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.03%)</title><rect x="268.8" y="533" width="0.4" height="15.0" fill="rgb(240,107,35)" rx="2" ry="2" />
<text  x="271.78" y="543.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (23 samples, 0.07%)</title><rect x="1116.5" y="677" width="0.8" height="15.0" fill="rgb(247,140,23)" rx="2" ry="2" />
<text  x="1119.45" y="687.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="1069.3" y="837" width="0.3" height="15.0" fill="rgb(218,65,40)" rx="2" ry="2" />
<text  x="1072.26" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.03%)</title><rect x="223.2" y="645" width="0.4" height="15.0" fill="rgb(224,46,17)" rx="2" ry="2" />
<text  x="226.24" y="655.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (8,148 samples, 25.92%)</title><rect x="268.5" y="661" width="305.9" height="15.0" fill="rgb(217,206,48)" rx="2" ry="2" />
<text  x="271.48" y="671.5" >serde_json::de::from_trait</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (24 samples, 0.08%)</title><rect x="1165.4" y="453" width="0.9" height="15.0" fill="rgb(217,225,45)" rx="2" ry="2" />
<text  x="1168.37" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1034.7" y="757" width="0.2" height="15.0" fill="rgb(232,156,51)" rx="2" ry="2" />
<text  x="1037.72" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (20 samples, 0.06%)</title><rect x="1091.6" y="677" width="0.7" height="15.0" fill="rgb(238,71,38)" rx="2" ry="2" />
<text  x="1094.56" y="687.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..fmt..Display&gt;::fmt (11 samples, 0.03%)</title><rect x="612.7" y="517" width="0.4" height="15.0" fill="rgb(238,169,26)" rx="2" ry="2" />
<text  x="615.67" y="527.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (188 samples, 0.60%)</title><rect x="510.9" y="245" width="7.0" height="15.0" fill="rgb(251,109,8)" rx="2" ry="2" />
<text  x="513.86" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="189.2" y="1077" width="0.2" height="15.0" fill="rgb(225,189,24)" rx="2" ry="2" />
<text  x="192.19" y="1087.5" ></text>
</g>
<g >
<title>reqwest::proxy::get_from_environment (3 samples, 0.01%)</title><rect x="758.8" y="757" width="0.1" height="15.0" fill="rgb(251,88,37)" rx="2" ry="2" />
<text  x="761.79" y="767.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.02%)</title><rect x="124.8" y="1013" width="0.2" height="15.0" fill="rgb(253,81,49)" rx="2" ry="2" />
<text  x="127.77" y="1023.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::possible_values (10 samples, 0.03%)</title><rect x="79.3" y="1157" width="0.3" height="15.0" fill="rgb(250,3,13)" rx="2" ry="2" />
<text  x="82.27" y="1167.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;&amp;clap..args..arg..Arg&gt;&gt;::from (11 samples, 0.03%)</title><rect x="75.5" y="1109" width="0.4" height="15.0" fill="rgb(247,44,26)" rx="2" ry="2" />
<text  x="78.51" y="1119.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_with_scheme (266 samples, 0.85%)</title><rect x="601.5" y="693" width="10.0" height="15.0" fill="rgb(235,207,47)" rx="2" ry="2" />
<text  x="604.48" y="703.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="828.2" y="789" width="0.3" height="15.0" fill="rgb(212,184,46)" rx="2" ry="2" />
<text  x="831.16" y="799.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.04%)</title><rect x="1055.4" y="837" width="0.5" height="15.0" fill="rgb(232,92,11)" rx="2" ry="2" />
<text  x="1058.41" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="600.8" y="613" width="0.2" height="15.0" fill="rgb(214,141,13)" rx="2" ry="2" />
<text  x="603.77" y="623.5" ></text>
</g>
<g >
<title>deno::flags::ca_file_arg (9 samples, 0.03%)</title><rect x="87.3" y="1141" width="0.3" height="15.0" fill="rgb(229,90,44)" rx="2" ry="2" />
<text  x="90.30" y="1151.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.05%)</title><rect x="219.4" y="661" width="0.7" height="15.0" fill="rgb(226,187,50)" rx="2" ry="2" />
<text  x="222.45" y="671.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (28 samples, 0.09%)</title><rect x="164.9" y="1093" width="1.1" height="15.0" fill="rgb(254,124,10)" rx="2" ry="2" />
<text  x="167.90" y="1103.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.03%)</title><rect x="261.4" y="645" width="0.4" height="15.0" fill="rgb(252,14,15)" rx="2" ry="2" />
<text  x="264.38" y="655.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="835.9" y="773" width="0.1" height="15.0" fill="rgb(238,76,41)" rx="2" ry="2" />
<text  x="838.86" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (54 samples, 0.17%)</title><rect x="1046.1" y="789" width="2.0" height="15.0" fill="rgb(232,37,20)" rx="2" ry="2" />
<text  x="1049.06" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (33 samples, 0.10%)</title><rect x="132.8" y="1077" width="1.2" height="15.0" fill="rgb(229,178,8)" rx="2" ry="2" />
<text  x="135.76" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (39 samples, 0.12%)</title><rect x="615.9" y="501" width="1.5" height="15.0" fill="rgb(223,173,5)" rx="2" ry="2" />
<text  x="618.90" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="659.6" y="869" width="0.2" height="15.0" fill="rgb(207,179,31)" rx="2" ry="2" />
<text  x="662.64" y="879.5" ></text>
</g>
<g >
<title>deno::ops::plugin::init (24 samples, 0.08%)</title><rect x="1057.7" y="901" width="0.9" height="15.0" fill="rgb(248,180,22)" rx="2" ry="2" />
<text  x="1060.70" y="911.5" ></text>
</g>
<g >
<title>_&lt;string_cache..dynamic_set..DYNAMIC_SET as core..ops..deref..Deref&gt;::deref (10 samples, 0.03%)</title><rect x="234.7" y="261" width="0.4" height="15.0" fill="rgb(222,97,50)" rx="2" ry="2" />
<text  x="237.73" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="180.4" y="1093" width="0.2" height="15.0" fill="rgb(226,195,36)" rx="2" ry="2" />
<text  x="183.44" y="1103.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_current_scope_data (4 samples, 0.01%)</title><rect x="1095.3" y="805" width="0.1" height="15.0" fill="rgb(218,198,41)" rx="2" ry="2" />
<text  x="1098.28" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="617.8" y="837" width="0.2" height="15.0" fill="rgb(247,4,53)" rx="2" ry="2" />
<text  x="620.81" y="847.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::reserve_one (12 samples, 0.04%)</title><rect x="835.1" y="837" width="0.4" height="15.0" fill="rgb(207,54,34)" rx="2" ry="2" />
<text  x="838.07" y="847.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="88.1" y="1109" width="0.3" height="15.0" fill="rgb(235,96,51)" rx="2" ry="2" />
<text  x="91.09" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="153.7" y="1029" width="0.1" height="15.0" fill="rgb(253,225,35)" rx="2" ry="2" />
<text  x="156.68" y="1039.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::get_mut (5 samples, 0.02%)</title><rect x="1095.2" y="821" width="0.2" height="15.0" fill="rgb(226,55,46)" rx="2" ry="2" />
<text  x="1098.24" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (105 samples, 0.33%)</title><rect x="38.9" y="1109" width="3.9" height="15.0" fill="rgb(251,38,11)" rx="2" ry="2" />
<text  x="41.91" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (52 samples, 0.17%)</title><rect x="1104.4" y="533" width="2.0" height="15.0" fill="rgb(236,71,30)" rx="2" ry="2" />
<text  x="1107.44" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="77.3" y="1013" width="0.2" height="15.0" fill="rgb(205,216,50)" rx="2" ry="2" />
<text  x="80.31" y="1023.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (57 samples, 0.18%)</title><rect x="182.7" y="1061" width="2.1" height="15.0" fill="rgb(220,31,43)" rx="2" ry="2" />
<text  x="185.70" y="1071.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="141.7" y="1077" width="0.3" height="15.0" fill="rgb(207,158,11)" rx="2" ry="2" />
<text  x="144.74" y="1087.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_str_lit::_{{closure}} (30 samples, 0.10%)</title><rect x="234.6" y="325" width="1.1" height="15.0" fill="rgb(228,110,50)" rx="2" ry="2" />
<text  x="237.58" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="196.8" y="1045" width="0.2" height="15.0" fill="rgb(218,132,41)" rx="2" ry="2" />
<text  x="199.81" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (193 samples, 0.61%)</title><rect x="65.8" y="1109" width="7.2" height="15.0" fill="rgb(209,81,49)" rx="2" ry="2" />
<text  x="68.75" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="157.8" y="1013" width="0.2" height="15.0" fill="rgb(253,67,22)" rx="2" ry="2" />
<text  x="160.84" y="1023.5" ></text>
</g>
<g >
<title>deno::deno_dir::dirs::cache_dir (6 samples, 0.02%)</title><rect x="662.7" y="901" width="0.2" height="15.0" fill="rgb(243,20,15)" rx="2" ry="2" />
<text  x="665.68" y="911.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (18 samples, 0.06%)</title><rect x="1081.3" y="789" width="0.7" height="15.0" fill="rgb(230,51,8)" rx="2" ry="2" />
<text  x="1084.31" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="18.1" y="1029" width="0.2" height="15.0" fill="rgb(240,229,45)" rx="2" ry="2" />
<text  x="21.15" y="1039.5" ></text>
</g>
<g >
<title>clap::app::App::arg (17 samples, 0.05%)</title><rect x="178.8" y="1109" width="0.6" height="15.0" fill="rgb(227,141,24)" rx="2" ry="2" />
<text  x="181.75" y="1119.5" ></text>
</g>
<g >
<title>_&lt;bytes..bytes..Bytes as core..clone..Clone&gt;::clone (3 samples, 0.01%)</title><rect x="830.5" y="853" width="0.1" height="15.0" fill="rgb(239,189,7)" rx="2" ry="2" />
<text  x="833.45" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (88 samples, 0.28%)</title><rect x="642.0" y="869" width="3.3" height="15.0" fill="rgb(209,132,35)" rx="2" ry="2" />
<text  x="645.03" y="879.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..positional..PosBuilder as core..fmt..Display&gt;::fmt (40 samples, 0.13%)</title><rect x="19.2" y="965" width="1.5" height="15.0" fill="rgb(209,36,47)" rx="2" ry="2" />
<text  x="22.16" y="975.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (379 samples, 1.21%)</title><rect x="244.8" y="501" width="14.2" height="15.0" fill="rgb(213,80,50)" rx="2" ry="2" />
<text  x="247.75" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="262.4" y="469" width="0.1" height="15.0" fill="rgb(207,44,15)" rx="2" ry="2" />
<text  x="265.40" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="153.6" y="1045" width="0.2" height="15.0" fill="rgb(244,41,33)" rx="2" ry="2" />
<text  x="156.64" y="1055.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (17 samples, 0.05%)</title><rect x="179.4" y="1109" width="0.6" height="15.0" fill="rgb(242,175,11)" rx="2" ry="2" />
<text  x="182.39" y="1119.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::register_during_load (390 samples, 1.24%)</title><rect x="619.3" y="837" width="14.6" height="15.0" fill="rgb(226,122,16)" rx="2" ry="2" />
<text  x="622.28" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,106 samples, 3.52%)</title><rect x="886.9" y="565" width="41.5" height="15.0" fill="rgb(236,210,2)" rx="2" ry="2" />
<text  x="889.92" y="575.5" >all..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="273.5" y="245" width="0.2" height="15.0" fill="rgb(232,61,37)" rx="2" ry="2" />
<text  x="276.51" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (42 samples, 0.13%)</title><rect x="185.2" y="1061" width="1.6" height="15.0" fill="rgb(216,82,44)" rx="2" ry="2" />
<text  x="188.17" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (17 samples, 0.05%)</title><rect x="648.6" y="533" width="0.6" height="15.0" fill="rgb(205,133,14)" rx="2" ry="2" />
<text  x="651.60" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="646.4" y="757" width="0.3" height="15.0" fill="rgb(248,91,53)" rx="2" ry="2" />
<text  x="649.42" y="767.5" ></text>
</g>
<g >
<title>rustls::anchors::OwnedTrustAnchor::from_trust_anchor::_{{closure}} (14 samples, 0.04%)</title><rect x="828.0" y="821" width="0.5" height="15.0" fill="rgb(244,15,24)" rx="2" ry="2" />
<text  x="831.01" y="831.5" ></text>
</g>
<g >
<title>deno_core::module_specifier::ModuleSpecifier::resolve_import (278 samples, 0.88%)</title><rect x="601.0" y="757" width="10.5" height="15.0" fill="rgb(253,107,3)" rx="2" ry="2" />
<text  x="604.03" y="767.5" ></text>
</g>
<g >
<title>deno_core::bindings::send (1,917 samples, 6.10%)</title><rect x="1099.0" y="773" width="72.0" height="15.0" fill="rgb(207,63,50)" rx="2" ry="2" />
<text  x="1102.03" y="783.5" >deno_cor..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="549.4" y="117" width="0.2" height="15.0" fill="rgb(225,221,29)" rx="2" ry="2" />
<text  x="552.45" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="273.2" y="277" width="0.5" height="15.0" fill="rgb(238,111,44)" rx="2" ry="2" />
<text  x="276.21" y="287.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_token (38 samples, 0.12%)</title><rect x="234.5" y="373" width="1.4" height="15.0" fill="rgb(211,139,10)" rx="2" ry="2" />
<text  x="237.47" y="383.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="97.4" y="1093" width="0.2" height="15.0" fill="rgb(226,71,22)" rx="2" ry="2" />
<text  x="100.36" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (28 samples, 0.09%)</title><rect x="1074.7" y="837" width="1.1" height="15.0" fill="rgb(229,41,7)" rx="2" ry="2" />
<text  x="1077.74" y="847.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::requires (6 samples, 0.02%)</title><rect x="88.7" y="1125" width="0.3" height="15.0" fill="rgb(229,34,43)" rx="2" ry="2" />
<text  x="91.73" y="1135.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="1001.1" y="757" width="0.1" height="15.0" fill="rgb(252,24,29)" rx="2" ry="2" />
<text  x="1004.09" y="767.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..TextDocument as core..convert..From&lt;alloc..vec..Vec&lt;u8&gt;&gt;&gt;::from (4 samples, 0.01%)</title><rect x="615.5" y="549" width="0.1" height="15.0" fill="rgb(238,29,16)" rx="2" ry="2" />
<text  x="618.49" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="206.3" y="1141" width="0.3" height="15.0" fill="rgb(239,16,7)" rx="2" ry="2" />
<text  x="209.31" y="1151.5" ></text>
</g>
<g >
<title>swc_ecma_visit::Visit::visit_module_item (17 samples, 0.05%)</title><rect x="240.0" y="565" width="0.7" height="15.0" fill="rgb(233,70,10)" rx="2" ry="2" />
<text  x="243.02" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.03%)</title><rect x="112.2" y="1077" width="0.4" height="15.0" fill="rgb(210,189,22)" rx="2" ry="2" />
<text  x="115.23" y="1087.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="1086.2" y="853" width="0.2" height="15.0" fill="rgb(242,184,12)" rx="2" ry="2" />
<text  x="1089.23" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (10 samples, 0.03%)</title><rect x="101.7" y="1109" width="0.4" height="15.0" fill="rgb(234,185,38)" rx="2" ry="2" />
<text  x="104.68" y="1119.5" ></text>
</g>
<g >
<title>deno::module_graph::ModuleGraphLoader::download_module::_{{closure}} (166 samples, 0.53%)</title><rect x="211.6" y="613" width="6.2" height="15.0" fill="rgb(243,84,21)" rx="2" ry="2" />
<text  x="214.57" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="929.1" y="757" width="0.1" height="15.0" fill="rgb(213,28,17)" rx="2" ry="2" />
<text  x="932.08" y="767.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::execute (31 samples, 0.10%)</title><rect x="1095.5" y="853" width="1.1" height="15.0" fill="rgb(210,90,26)" rx="2" ry="2" />
<text  x="1098.47" y="863.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (20 samples, 0.06%)</title><rect x="1069.6" y="853" width="0.8" height="15.0" fill="rgb(219,36,0)" rx="2" ry="2" />
<text  x="1072.64" y="863.5" ></text>
</g>
<g >
<title>core::cell::BorrowRef::new (6 samples, 0.02%)</title><rect x="207.9" y="805" width="0.2" height="15.0" fill="rgb(214,160,18)" rx="2" ry="2" />
<text  x="210.89" y="815.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="1087.4" y="757" width="0.3" height="15.0" fill="rgb(210,37,20)" rx="2" ry="2" />
<text  x="1090.43" y="767.5" ></text>
</g>
<g >
<title>_&lt;http..header..value..HeaderValue as core..str..FromStr&gt;::from_str (11 samples, 0.03%)</title><rect x="663.4" y="869" width="0.4" height="15.0" fill="rgb(244,33,50)" rx="2" ry="2" />
<text  x="666.35" y="879.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next::_{{closure}} (7 samples, 0.02%)</title><rect x="238.1" y="341" width="0.2" height="15.0" fill="rgb(236,214,6)" rx="2" ry="2" />
<text  x="241.07" y="351.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (18 samples, 0.06%)</title><rect x="1064.8" y="837" width="0.7" height="15.0" fill="rgb(217,177,50)" rx="2" ry="2" />
<text  x="1067.80" y="847.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (12 samples, 0.04%)</title><rect x="109.9" y="1109" width="0.4" height="15.0" fill="rgb(251,1,52)" rx="2" ry="2" />
<text  x="112.86" y="1119.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="178.4" y="1109" width="0.3" height="15.0" fill="rgb(206,5,49)" rx="2" ry="2" />
<text  x="181.42" y="1119.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::get_index_of (12 samples, 0.04%)</title><rect x="1111.3" y="565" width="0.4" height="15.0" fill="rgb(206,205,9)" rx="2" ry="2" />
<text  x="1114.27" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="232.3" y="597" width="0.1" height="15.0" fill="rgb(226,201,28)" rx="2" ry="2" />
<text  x="235.25" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="168.9" y="1029" width="0.1" height="15.0" fill="rgb(226,106,22)" rx="2" ry="2" />
<text  x="171.92" y="1039.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..Repr&lt;T&gt; as core..hash..Hash&gt;::hash (10 samples, 0.03%)</title><rect x="666.6" y="757" width="0.4" height="15.0" fill="rgb(254,45,26)" rx="2" ry="2" />
<text  x="669.58" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="548.8" y="85" width="0.2" height="15.0" fill="rgb(228,160,6)" rx="2" ry="2" />
<text  x="551.85" y="95.5" ></text>
</g>
<g >
<title>clap::app::App::bin_name (14 samples, 0.04%)</title><rect x="76.9" y="1157" width="0.6" height="15.0" fill="rgb(222,132,50)" rx="2" ry="2" />
<text  x="79.94" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (80 samples, 0.25%)</title><rect x="638.8" y="885" width="3.0" height="15.0" fill="rgb(253,91,19)" rx="2" ry="2" />
<text  x="641.80" y="895.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (14 samples, 0.04%)</title><rect x="629.5" y="661" width="0.5" height="15.0" fill="rgb(234,56,26)" rx="2" ry="2" />
<text  x="632.49" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (84 samples, 0.27%)</title><rect x="642.2" y="805" width="3.1" height="15.0" fill="rgb(243,139,42)" rx="2" ry="2" />
<text  x="645.18" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="837.1" y="869" width="0.2" height="15.0" fill="rgb(222,2,6)" rx="2" ry="2" />
<text  x="840.06" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (10 samples, 0.03%)</title><rect x="189.0" y="1109" width="0.4" height="15.0" fill="rgb(208,220,16)" rx="2" ry="2" />
<text  x="192.04" y="1119.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="618.7" y="805" width="0.2" height="15.0" fill="rgb(208,203,45)" rx="2" ry="2" />
<text  x="621.71" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="166.9" y="997" width="0.1" height="15.0" fill="rgb(211,83,20)" rx="2" ry="2" />
<text  x="169.89" y="1007.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc..string..String,serde_json..value..Value&gt;::insert (160 samples, 0.51%)</title><rect x="287.4" y="389" width="6.0" height="15.0" fill="rgb(254,17,10)" rx="2" ry="2" />
<text  x="290.40" y="399.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (11 samples, 0.03%)</title><rect x="660.6" y="869" width="0.4" height="15.0" fill="rgb(240,101,47)" rx="2" ry="2" />
<text  x="663.61" y="879.5" ></text>
</g>
<g >
<title>_&lt;bytes..bytes..Bytes as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="641.7" y="613" width="0.1" height="15.0" fill="rgb(210,152,40)" rx="2" ry="2" />
<text  x="644.69" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="197.4" y="1061" width="0.2" height="15.0" fill="rgb(248,42,39)" rx="2" ry="2" />
<text  x="200.45" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..boxed..Box&lt;[A]&gt; as core..iter..traits..collect..FromIterator&lt;A&gt;&gt;::from_iter (24 samples, 0.08%)</title><rect x="203.8" y="1061" width="0.9" height="15.0" fill="rgb(240,44,23)" rx="2" ry="2" />
<text  x="206.76" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.03%)</title><rect x="1188.9" y="725" width="0.4" height="15.0" fill="rgb(214,50,32)" rx="2" ry="2" />
<text  x="1191.91" y="735.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (22 samples, 0.07%)</title><rect x="184.0" y="997" width="0.8" height="15.0" fill="rgb(208,131,2)" rx="2" ry="2" />
<text  x="187.01" y="1007.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope&lt;()&gt;::cast_local (30 samples, 0.10%)</title><rect x="635.5" y="869" width="1.2" height="15.0" fill="rgb(246,146,44)" rx="2" ry="2" />
<text  x="638.53" y="879.5" ></text>
</g>
<g >
<title>swc_common::source_map::SourceMap::new_source_file (60 samples, 0.19%)</title><rect x="228.6" y="645" width="2.3" height="15.0" fill="rgb(218,55,42)" rx="2" ry="2" />
<text  x="231.61" y="655.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (40 samples, 0.13%)</title><rect x="838.3" y="805" width="1.5" height="15.0" fill="rgb(228,114,44)" rx="2" ry="2" />
<text  x="841.26" y="815.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="1176.1" y="885" width="0.2" height="15.0" fill="rgb(252,113,12)" rx="2" ry="2" />
<text  x="1179.11" y="895.5" ></text>
</g>
<g >
<title>core::mem::drop (6 samples, 0.02%)</title><rect x="1189.8" y="1269" width="0.2" height="15.0" fill="rgb(244,4,20)" rx="2" ry="2" />
<text  x="1192.77" y="1279.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="548.0" y="69" width="0.2" height="15.0" fill="rgb(223,161,41)" rx="2" ry="2" />
<text  x="551.02" y="79.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (84 samples, 0.27%)</title><rect x="150.0" y="1077" width="3.1" height="15.0" fill="rgb(249,34,20)" rx="2" ry="2" />
<text  x="152.96" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="229.1" y="581" width="0.2" height="15.0" fill="rgb(222,3,5)" rx="2" ry="2" />
<text  x="232.10" y="591.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="660.6" y="853" width="0.4" height="15.0" fill="rgb(231,94,4)" rx="2" ry="2" />
<text  x="663.65" y="863.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="139.7" y="1109" width="0.3" height="15.0" fill="rgb(236,126,24)" rx="2" ry="2" />
<text  x="142.75" y="1119.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (21 samples, 0.07%)</title><rect x="107.6" y="1045" width="0.8" height="15.0" fill="rgb(218,178,2)" rx="2" ry="2" />
<text  x="110.61" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="663.6" y="773" width="0.2" height="15.0" fill="rgb(220,183,29)" rx="2" ry="2" />
<text  x="666.58" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (12 samples, 0.04%)</title><rect x="659.3" y="885" width="0.5" height="15.0" fill="rgb(211,142,54)" rx="2" ry="2" />
<text  x="662.34" y="895.5" ></text>
</g>
<g >
<title>tokio::runtime::builder::Builder::new (13 samples, 0.04%)</title><rect x="205.7" y="1173" width="0.5" height="15.0" fill="rgb(211,7,52)" rx="2" ry="2" />
<text  x="208.71" y="1183.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="87.8" y="1077" width="0.2" height="15.0" fill="rgb(233,228,51)" rx="2" ry="2" />
<text  x="90.83" y="1087.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="270.1" y="453" width="0.3" height="15.0" fill="rgb(245,116,33)" rx="2" ry="2" />
<text  x="273.06" y="463.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_reqs (6 samples, 0.02%)</title><rect x="121.2" y="1109" width="0.2" height="15.0" fill="rgb(230,227,18)" rx="2" ry="2" />
<text  x="124.16" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="828.1" y="805" width="0.4" height="15.0" fill="rgb(208,61,38)" rx="2" ry="2" />
<text  x="831.09" y="815.5" ></text>
</g>
<g >
<title>core::mem::swap (8 samples, 0.03%)</title><rect x="86.5" y="1077" width="0.3" height="15.0" fill="rgb(230,167,21)" rx="2" ry="2" />
<text  x="89.51" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="832.3" y="837" width="0.2" height="15.0" fill="rgb(206,74,24)" rx="2" ry="2" />
<text  x="835.29" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="194.0" y="1093" width="0.1" height="15.0" fill="rgb(218,208,32)" rx="2" ry="2" />
<text  x="197.00" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..collections..btree..map..BTreeMap&lt;K,V&gt; as core..iter..traits..collect..Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (10 samples, 0.03%)</title><rect x="22.3" y="757" width="0.4" height="15.0" fill="rgb(206,128,0)" rx="2" ry="2" />
<text  x="25.28" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="75.8" y="997" width="0.1" height="15.0" fill="rgb(207,24,53)" rx="2" ry="2" />
<text  x="78.77" y="1007.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (28 samples, 0.09%)</title><rect x="135.0" y="1109" width="1.1" height="15.0" fill="rgb(219,99,31)" rx="2" ry="2" />
<text  x="138.02" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (28 samples, 0.09%)</title><rect x="1084.1" y="805" width="1.1" height="15.0" fill="rgb(213,19,52)" rx="2" ry="2" />
<text  x="1087.13" y="815.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (6 samples, 0.02%)</title><rect x="1061.5" y="869" width="0.2" height="15.0" fill="rgb(218,74,2)" rx="2" ry="2" />
<text  x="1064.49" y="879.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (15 samples, 0.05%)</title><rect x="117.5" y="1093" width="0.5" height="15.0" fill="rgb(212,90,27)" rx="2" ry="2" />
<text  x="120.48" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.14%)</title><rect x="494.7" y="53" width="1.6" height="15.0" fill="rgb(233,128,10)" rx="2" ry="2" />
<text  x="497.71" y="63.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="193.4" y="1093" width="0.3" height="15.0" fill="rgb(219,62,32)" rx="2" ry="2" />
<text  x="196.43" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="622.5" y="773" width="0.3" height="15.0" fill="rgb(250,50,25)" rx="2" ry="2" />
<text  x="625.51" y="783.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (8 samples, 0.03%)</title><rect x="263.4" y="597" width="0.3" height="15.0" fill="rgb(225,87,36)" rx="2" ry="2" />
<text  x="266.37" y="607.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::value_of (5 samples, 0.02%)</title><rect x="194.1" y="1125" width="0.2" height="15.0" fill="rgb(253,15,35)" rx="2" ry="2" />
<text  x="197.15" y="1135.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="660.1" y="789" width="0.1" height="15.0" fill="rgb(211,127,10)" rx="2" ry="2" />
<text  x="663.09" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="641.7" y="629" width="0.1" height="15.0" fill="rgb(253,187,26)" rx="2" ry="2" />
<text  x="644.65" y="639.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (18 samples, 0.06%)</title><rect x="1063.1" y="837" width="0.7" height="15.0" fill="rgb(225,28,37)" rx="2" ry="2" />
<text  x="1066.14" y="847.5" ></text>
</g>
<g >
<title>deno::ops::io::StreamResourceHolder::new (24 samples, 0.08%)</title><rect x="832.7" y="885" width="0.9" height="15.0" fill="rgb(208,20,54)" rx="2" ry="2" />
<text  x="835.75" y="895.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert (15 samples, 0.05%)</title><rect x="836.0" y="853" width="0.6" height="15.0" fill="rgb(237,90,30)" rx="2" ry="2" />
<text  x="839.05" y="863.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (7 samples, 0.02%)</title><rect x="85.8" y="1061" width="0.3" height="15.0" fill="rgb(215,42,19)" rx="2" ry="2" />
<text  x="88.80" y="1071.5" ></text>
</g>
<g >
<title>rusty_v8::scope::TryCatch&lt;P&gt;::new (3 samples, 0.01%)</title><rect x="1097.1" y="869" width="0.1" height="15.0" fill="rgb(248,173,1)" rx="2" ry="2" />
<text  x="1100.08" y="879.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str_contents (133 samples, 0.42%)</title><rect x="1161.3" y="517" width="5.0" height="15.0" fill="rgb(210,213,20)" rx="2" ry="2" />
<text  x="1164.28" y="527.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (12 samples, 0.04%)</title><rect x="549.1" y="245" width="0.5" height="15.0" fill="rgb(237,113,1)" rx="2" ry="2" />
<text  x="552.15" y="255.5" ></text>
</g>
<g >
<title>deno::flags::config_arg (10 samples, 0.03%)</title><rect x="178.0" y="1125" width="0.4" height="15.0" fill="rgb(213,63,30)" rx="2" ry="2" />
<text  x="181.00" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="645.6" y="821" width="0.4" height="15.0" fill="rgb(208,102,49)" rx="2" ry="2" />
<text  x="648.63" y="831.5" ></text>
</g>
<g >
<title>encoding_rs::Encoding::for_label::_{{closure}} (6 samples, 0.02%)</title><rect x="615.2" y="501" width="0.2" height="15.0" fill="rgb(248,197,0)" rx="2" ry="2" />
<text  x="618.19" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="1033.6" y="741" width="0.2" height="15.0" fill="rgb(207,14,27)" rx="2" ry="2" />
<text  x="1036.60" y="751.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (8,071 samples, 25.68%)</title><rect x="270.5" y="533" width="303.0" height="15.0" fill="rgb(229,72,53)" rx="2" ry="2" />
<text  x="273.51" y="543.5" >_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; a..</text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (5 samples, 0.02%)</title><rect x="195.6" y="1109" width="0.2" height="15.0" fill="rgb(246,129,3)" rx="2" ry="2" />
<text  x="198.65" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="1089.8" y="725" width="0.1" height="15.0" fill="rgb(227,34,53)" rx="2" ry="2" />
<text  x="1092.84" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="154.4" y="1029" width="0.1" height="15.0" fill="rgb(237,114,14)" rx="2" ry="2" />
<text  x="157.39" y="1039.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_str (10 samples, 0.03%)</title><rect x="548.6" y="197" width="0.4" height="15.0" fill="rgb(227,210,51)" rx="2" ry="2" />
<text  x="551.59" y="207.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..Visitor&gt;::visit_str (9 samples, 0.03%)</title><rect x="321.4" y="325" width="0.3" height="15.0" fill="rgb(247,199,41)" rx="2" ry="2" />
<text  x="324.38" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="666.1" y="837" width="0.1" height="15.0" fill="rgb(235,58,28)" rx="2" ry="2" />
<text  x="669.09" y="847.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (21 samples, 0.07%)</title><rect x="99.1" y="1125" width="0.8" height="15.0" fill="rgb(236,195,34)" rx="2" ry="2" />
<text  x="102.09" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (103 samples, 0.33%)</title><rect x="53.6" y="1061" width="3.9" height="15.0" fill="rgb(210,191,47)" rx="2" ry="2" />
<text  x="56.62" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="1186.6" y="869" width="0.3" height="15.0" fill="rgb(239,181,27)" rx="2" ry="2" />
<text  x="1189.62" y="879.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (9 samples, 0.03%)</title><rect x="260.3" y="565" width="0.3" height="15.0" fill="rgb(252,130,9)" rx="2" ry="2" />
<text  x="263.30" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (10 samples, 0.03%)</title><rect x="1071.6" y="805" width="0.4" height="15.0" fill="rgb(222,200,8)" rx="2" ry="2" />
<text  x="1074.59" y="815.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_entry (2,380 samples, 7.57%)</title><rect x="381.1" y="293" width="89.3" height="15.0" fill="rgb(217,69,0)" rx="2" ry="2" />
<text  x="384.07" y="303.5" >serde::de:..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="121.2" y="1077" width="0.2" height="15.0" fill="rgb(244,197,16)" rx="2" ry="2" />
<text  x="124.24" y="1087.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="25.3" y="1093" width="0.2" height="15.0" fill="rgb(223,26,29)" rx="2" ry="2" />
<text  x="28.28" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="225.2" y="421" width="0.3" height="15.0" fill="rgb(238,21,43)" rx="2" ry="2" />
<text  x="228.23" y="431.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (23 samples, 0.07%)</title><rect x="231.3" y="613" width="0.9" height="15.0" fill="rgb(226,170,9)" rx="2" ry="2" />
<text  x="234.31" y="623.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="575.8" y="517" width="0.3" height="15.0" fill="rgb(238,135,53)" rx="2" ry="2" />
<text  x="578.84" y="527.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next::_{{closure}} (3 samples, 0.01%)</title><rect x="232.7" y="549" width="0.1" height="15.0" fill="rgb(215,17,42)" rx="2" ry="2" />
<text  x="235.70" y="559.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="644.5" y="517" width="0.1" height="15.0" fill="rgb(234,66,16)" rx="2" ry="2" />
<text  x="647.51" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="218.2" y="645" width="0.2" height="15.0" fill="rgb(205,65,28)" rx="2" ry="2" />
<text  x="221.17" y="655.5" ></text>
</g>
<g >
<title>deno::permissions::Permissions::from_flags (15 samples, 0.05%)</title><rect x="831.2" y="917" width="0.6" height="15.0" fill="rgb(247,31,23)" rx="2" ry="2" />
<text  x="834.21" y="927.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (10 samples, 0.03%)</title><rect x="1056.8" y="741" width="0.3" height="15.0" fill="rgb(213,158,5)" rx="2" ry="2" />
<text  x="1059.76" y="751.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="114.8" y="1141" width="0.5" height="15.0" fill="rgb(241,143,30)" rx="2" ry="2" />
<text  x="117.78" y="1151.5" ></text>
</g>
<g >
<title>rustls::anchors::OwnedTrustAnchor::from_trust_anchor (1,818 samples, 5.78%)</title><rect x="760.3" y="853" width="68.2" height="15.0" fill="rgb(241,61,40)" rx="2" ry="2" />
<text  x="763.29" y="863.5" >rustls:..</text>
</g>
<g >
<title>_&lt;deno..file_fetcher..SourceFileFetcher as core..clone..Clone&gt;::clone (22 samples, 0.07%)</title><rect x="660.2" y="917" width="0.8" height="15.0" fill="rgb(250,168,6)" rx="2" ry="2" />
<text  x="663.20" y="927.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="1005.0" y="805" width="0.6" height="15.0" fill="rgb(247,149,9)" rx="2" ry="2" />
<text  x="1008.03" y="815.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="1064.3" y="837" width="0.3" height="15.0" fill="rgb(252,192,3)" rx="2" ry="2" />
<text  x="1067.35" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="633.1" y="661" width="0.1" height="15.0" fill="rgb(250,76,51)" rx="2" ry="2" />
<text  x="636.13" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (6 samples, 0.02%)</title><rect x="1059.2" y="805" width="0.2" height="15.0" fill="rgb(235,170,32)" rx="2" ry="2" />
<text  x="1062.20" y="815.5" ></text>
</g>
<g >
<title>core::iter::adapters::filter_fold::_{{closure}} (14 samples, 0.04%)</title><rect x="22.1" y="821" width="0.6" height="15.0" fill="rgb(239,114,35)" rx="2" ry="2" />
<text  x="25.13" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="189.3" y="1061" width="0.1" height="15.0" fill="rgb(250,181,5)" rx="2" ry="2" />
<text  x="192.27" y="1071.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="98.0" y="1125" width="0.3" height="15.0" fill="rgb(235,5,18)" rx="2" ry="2" />
<text  x="100.96" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="142.3" y="1061" width="0.2" height="15.0" fill="rgb(236,176,28)" rx="2" ry="2" />
<text  x="145.34" y="1071.5" ></text>
</g>
<g >
<title>clap::app::App::new (13 samples, 0.04%)</title><rect x="139.2" y="1125" width="0.5" height="15.0" fill="rgb(243,27,50)" rx="2" ry="2" />
<text  x="142.18" y="1135.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="1000.9" y="741" width="0.2" height="15.0" fill="rgb(219,92,31)" rx="2" ry="2" />
<text  x="1003.94" y="751.5" ></text>
</g>
<g >
<title>_&lt;swc_ecma_ast..expr..Expr as swc_ecma_visit..VisitWith&lt;V&gt;&gt;::visit_children_with (6 samples, 0.02%)</title><rect x="238.9" y="549" width="0.2" height="15.0" fill="rgb(240,229,12)" rx="2" ry="2" />
<text  x="241.90" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (31 samples, 0.10%)</title><rect x="643.8" y="549" width="1.2" height="15.0" fill="rgb(219,59,44)" rx="2" ry="2" />
<text  x="646.83" y="559.5" ></text>
</g>
<g >
<title>_&lt;char as unicode_xid..UnicodeXID&gt;::is_xid_start (4 samples, 0.01%)</title><rect x="235.7" y="341" width="0.2" height="15.0" fill="rgb(227,158,24)" rx="2" ry="2" />
<text  x="238.74" y="351.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="153.9" y="1093" width="0.3" height="15.0" fill="rgb(227,163,19)" rx="2" ry="2" />
<text  x="156.90" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (13 samples, 0.04%)</title><rect x="829.9" y="693" width="0.5" height="15.0" fill="rgb(216,80,5)" rx="2" ry="2" />
<text  x="832.89" y="703.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (39 samples, 0.12%)</title><rect x="609.7" y="581" width="1.4" height="15.0" fill="rgb(211,14,36)" rx="2" ry="2" />
<text  x="612.67" y="591.5" ></text>
</g>
<g >
<title>rustls::client::ClientConfig::new (10 samples, 0.03%)</title><rect x="998.9" y="869" width="0.4" height="15.0" fill="rgb(241,22,50)" rx="2" ry="2" />
<text  x="1001.95" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="268.3" y="629" width="0.1" height="15.0" fill="rgb(248,86,3)" rx="2" ry="2" />
<text  x="271.26" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (65 samples, 0.21%)</title><rect x="627.6" y="677" width="2.4" height="15.0" fill="rgb(237,199,44)" rx="2" ry="2" />
<text  x="630.58" y="687.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (29 samples, 0.09%)</title><rect x="610.0" y="565" width="1.1" height="15.0" fill="rgb(207,188,9)" rx="2" ry="2" />
<text  x="613.04" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (236 samples, 0.75%)</title><rect x="649.3" y="517" width="8.8" height="15.0" fill="rgb(247,17,7)" rx="2" ry="2" />
<text  x="652.27" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="1033.4" y="789" width="0.4" height="15.0" fill="rgb(220,61,44)" rx="2" ry="2" />
<text  x="1036.37" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2,374 samples, 7.55%)</title><rect x="668.9" y="773" width="89.2" height="15.0" fill="rgb(252,229,19)" rx="2" ry="2" />
<text  x="671.95" y="783.5" >alloc::vec..</text>
</g>
<g >
<title>clap::app::usage::get_required_usage_from (6 samples, 0.02%)</title><rect x="25.8" y="1061" width="0.2" height="15.0" fill="rgb(218,199,20)" rx="2" ry="2" />
<text  x="28.81" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="618.5" y="773" width="0.2" height="15.0" fill="rgb(224,13,6)" rx="2" ry="2" />
<text  x="621.53" y="783.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="118.8" y="1125" width="0.5" height="15.0" fill="rgb(253,5,41)" rx="2" ry="2" />
<text  x="121.84" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="1065.2" y="757" width="0.3" height="15.0" fill="rgb(231,206,5)" rx="2" ry="2" />
<text  x="1068.17" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="24.0" y="1013" width="0.1" height="15.0" fill="rgb(209,80,23)" rx="2" ry="2" />
<text  x="26.97" y="1023.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_token (19 samples, 0.06%)</title><rect x="236.9" y="309" width="0.7" height="15.0" fill="rgb(227,57,51)" rx="2" ry="2" />
<text  x="239.91" y="319.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.04%)</title><rect x="175.6" y="1029" width="0.4" height="15.0" fill="rgb(250,39,35)" rx="2" ry="2" />
<text  x="178.56" y="1039.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (20 samples, 0.06%)</title><rect x="1093.5" y="693" width="0.7" height="15.0" fill="rgb(207,78,0)" rx="2" ry="2" />
<text  x="1096.48" y="703.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc..collections..btree..node..NodeRef&lt;alloc..collections..btree..node..marker..Mut,K,V,alloc..collections..btree..node..marker..Leaf&gt;,alloc..collections..btree..node..marker..Edge&gt;::insert_recursing (4 samples, 0.01%)</title><rect x="22.5" y="709" width="0.2" height="15.0" fill="rgb(212,191,18)" rx="2" ry="2" />
<text  x="25.50" y="719.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc..string..String,serde_json..value..Value&gt;::insert (23 samples, 0.07%)</title><rect x="573.5" y="597" width="0.9" height="15.0" fill="rgb(230,100,23)" rx="2" ry="2" />
<text  x="576.51" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (6 samples, 0.02%)</title><rect x="572.1" y="437" width="0.2" height="15.0" fill="rgb(213,78,36)" rx="2" ry="2" />
<text  x="575.12" y="447.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (4 samples, 0.01%)</title><rect x="14.6" y="1093" width="0.1" height="15.0" fill="rgb(251,17,16)" rx="2" ry="2" />
<text  x="17.58" y="1103.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once::_{{closure}} (9 samples, 0.03%)</title><rect x="758.6" y="821" width="0.3" height="15.0" fill="rgb(249,147,23)" rx="2" ry="2" />
<text  x="761.56" y="831.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="200.4" y="1093" width="0.1" height="15.0" fill="rgb(216,157,32)" rx="2" ry="2" />
<text  x="203.38" y="1103.5" ></text>
</g>
<g >
<title>clap::app::validator::Validator::validate_required (8 samples, 0.03%)</title><rect x="23.8" y="1077" width="0.3" height="15.0" fill="rgb(213,91,35)" rx="2" ry="2" />
<text  x="26.82" y="1087.5" ></text>
</g>
<g >
<title>deno::module_graph::ModuleGraphLoader::add_to_graph::_{{closure}} (797 samples, 2.54%)</title><rect x="211.3" y="709" width="30.0" height="15.0" fill="rgb(220,3,6)" rx="2" ry="2" />
<text  x="214.34" y="719.5" >de..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="839.3" y="789" width="0.5" height="15.0" fill="rgb(226,86,23)" rx="2" ry="2" />
<text  x="842.32" y="799.5" ></text>
</g>
<g >
<title>_&lt;rustls..client..ClientConfig as core..clone..Clone&gt;::clone (2,429 samples, 7.73%)</title><rect x="838.0" y="853" width="91.2" height="15.0" fill="rgb(242,212,1)" rx="2" ry="2" />
<text  x="841.00" y="863.5" >_&lt;rustls....</text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="12.6" y="1013" width="0.1" height="15.0" fill="rgb(230,14,25)" rx="2" ry="2" />
<text  x="15.55" y="1023.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (56 samples, 0.18%)</title><rect x="91.9" y="1093" width="2.1" height="15.0" fill="rgb(225,218,17)" rx="2" ry="2" />
<text  x="94.88" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="154.0" y="1045" width="0.2" height="15.0" fill="rgb(224,189,5)" rx="2" ry="2" />
<text  x="157.01" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (6 samples, 0.02%)</title><rect x="1134.8" y="485" width="0.3" height="15.0" fill="rgb(223,100,32)" rx="2" ry="2" />
<text  x="1137.85" y="495.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (261 samples, 0.83%)</title><rect x="1014.0" y="853" width="9.8" height="15.0" fill="rgb(228,134,28)" rx="2" ry="2" />
<text  x="1016.96" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (266 samples, 0.85%)</title><rect x="249.0" y="277" width="10.0" height="15.0" fill="rgb(213,42,35)" rx="2" ry="2" />
<text  x="252.00" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="114.2" y="1061" width="0.2" height="15.0" fill="rgb(211,129,31)" rx="2" ry="2" />
<text  x="117.22" y="1071.5" ></text>
</g>
<g >
<title>core::slice::_&lt;impl [T]&gt;::binary_search_by (8 samples, 0.03%)</title><rect x="224.1" y="613" width="0.3" height="15.0" fill="rgb(223,168,17)" rx="2" ry="2" />
<text  x="227.07" y="623.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (156 samples, 0.50%)</title><rect x="51.6" y="1093" width="5.9" height="15.0" fill="rgb(220,84,47)" rx="2" ry="2" />
<text  x="54.63" y="1103.5" ></text>
</g>
<g >
<title>deno::flags::ca_file_arg (9 samples, 0.03%)</title><rect x="110.9" y="1141" width="0.4" height="15.0" fill="rgb(208,178,24)" rx="2" ry="2" />
<text  x="113.91" y="1151.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="757.8" y="549" width="0.3" height="15.0" fill="rgb(251,129,0)" rx="2" ry="2" />
<text  x="760.77" y="559.5" ></text>
</g>
<g >
<title>deno::flags::ca_file_arg_parse (6 samples, 0.02%)</title><rect x="193.7" y="1141" width="0.2" height="15.0" fill="rgb(205,77,20)" rx="2" ry="2" />
<text  x="196.66" y="1151.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="136.4" y="1077" width="0.2" height="15.0" fill="rgb(225,102,41)" rx="2" ry="2" />
<text  x="139.41" y="1087.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (20 samples, 0.06%)</title><rect x="1114.7" y="693" width="0.7" height="15.0" fill="rgb(227,144,25)" rx="2" ry="2" />
<text  x="1117.65" y="703.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="213.6" y="405" width="0.1" height="15.0" fill="rgb(237,224,51)" rx="2" ry="2" />
<text  x="216.56" y="415.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="138.9" y="1061" width="0.2" height="15.0" fill="rgb(222,121,29)" rx="2" ry="2" />
<text  x="141.88" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="86.9" y="1093" width="0.4" height="15.0" fill="rgb(216,19,18)" rx="2" ry="2" />
<text  x="89.92" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="86.2" y="1077" width="0.2" height="15.0" fill="rgb(236,223,42)" rx="2" ry="2" />
<text  x="89.21" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1005.6" y="837" width="0.1" height="15.0" fill="rgb(250,104,14)" rx="2" ry="2" />
<text  x="1008.59" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (14 samples, 0.04%)</title><rect x="217.2" y="533" width="0.6" height="15.0" fill="rgb(229,215,52)" rx="2" ry="2" />
<text  x="220.23" y="543.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (13 samples, 0.04%)</title><rect x="582.0" y="501" width="0.5" height="15.0" fill="rgb(242,197,9)" rx="2" ry="2" />
<text  x="585.00" y="511.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (1,937 samples, 6.16%)</title><rect x="855.7" y="613" width="72.7" height="15.0" fill="rgb(244,41,17)" rx="2" ry="2" />
<text  x="858.72" y="623.5" >_&lt;alloc...</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="613.0" y="389" width="0.1" height="15.0" fill="rgb(206,66,49)" rx="2" ry="2" />
<text  x="615.97" y="399.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="184.9" y="1013" width="0.3" height="15.0" fill="rgb(223,28,27)" rx="2" ry="2" />
<text  x="187.95" y="1023.5" ></text>
</g>
<g >
<title>_&lt;serde_json..map..Map&lt;alloc..string..String,serde_json..value..Value&gt; as core..ops..index..Index&lt;&amp;Q&gt;&gt;::index (8 samples, 0.03%)</title><rect x="243.6" y="677" width="0.3" height="15.0" fill="rgb(241,129,34)" rx="2" ry="2" />
<text  x="246.63" y="687.5" ></text>
</g>
<g >
<title>_&lt;deno..flags..Flags as core..clone..Clone&gt;::clone (48 samples, 0.15%)</title><rect x="10.2" y="1205" width="1.8" height="15.0" fill="rgb(206,180,52)" rx="2" ry="2" />
<text  x="13.19" y="1215.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.03%)</title><rect x="1066.2" y="821" width="0.4" height="15.0" fill="rgb(211,185,20)" rx="2" ry="2" />
<text  x="1069.22" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (20 samples, 0.06%)</title><rect x="225.6" y="597" width="0.8" height="15.0" fill="rgb(216,108,13)" rx="2" ry="2" />
<text  x="228.64" y="607.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (63 samples, 0.20%)</title><rect x="1132.7" y="565" width="2.4" height="15.0" fill="rgb(210,67,0)" rx="2" ry="2" />
<text  x="1135.71" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1186.2" y="805" width="0.1" height="15.0" fill="rgb(245,57,12)" rx="2" ry="2" />
<text  x="1189.17" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.02%)</title><rect x="164.7" y="1013" width="0.2" height="15.0" fill="rgb(228,1,24)" rx="2" ry="2" />
<text  x="167.68" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (26 samples, 0.08%)</title><rect x="1129.1" y="485" width="0.9" height="15.0" fill="rgb(220,114,52)" rx="2" ry="2" />
<text  x="1132.07" y="495.5" ></text>
</g>
<g >
<title>deno::flags::unstable_arg (7 samples, 0.02%)</title><rect x="89.3" y="1141" width="0.3" height="15.0" fill="rgb(206,19,19)" rx="2" ry="2" />
<text  x="92.33" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.06%)</title><rect x="584.7" y="485" width="0.8" height="15.0" fill="rgb(206,75,31)" rx="2" ry="2" />
<text  x="587.74" y="495.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.01%)</title><rect x="24.2" y="1061" width="0.1" height="15.0" fill="rgb(240,188,37)" rx="2" ry="2" />
<text  x="27.19" y="1071.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_url (278 samples, 0.88%)</title><rect x="575.4" y="645" width="10.5" height="15.0" fill="rgb(238,22,11)" rx="2" ry="2" />
<text  x="578.43" y="655.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_subscript (12 samples, 0.04%)</title><rect x="233.8" y="293" width="0.5" height="15.0" fill="rgb(242,47,38)" rx="2" ry="2" />
<text  x="236.83" y="303.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (41 samples, 0.13%)</title><rect x="183.3" y="1029" width="1.5" height="15.0" fill="rgb(217,195,28)" rx="2" ry="2" />
<text  x="186.30" y="1039.5" ></text>
</g>
<g >
<title>http::header::map::hash_elem_using (13 samples, 0.04%)</title><rect x="1000.7" y="821" width="0.5" height="15.0" fill="rgb(250,15,38)" rx="2" ry="2" />
<text  x="1003.75" y="831.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (36 samples, 0.11%)</title><rect x="151.8" y="1045" width="1.3" height="15.0" fill="rgb(219,202,15)" rx="2" ry="2" />
<text  x="154.76" y="1055.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (122 samples, 0.39%)</title><rect x="546.3" y="341" width="4.5" height="15.0" fill="rgb(224,90,52)" rx="2" ry="2" />
<text  x="549.26" y="351.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::new (222 samples, 0.71%)</title><rect x="1086.5" y="885" width="8.3" height="15.0" fill="rgb(234,111,49)" rx="2" ry="2" />
<text  x="1089.46" y="895.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (16 samples, 0.05%)</title><rect x="155.2" y="1109" width="0.6" height="15.0" fill="rgb(252,35,42)" rx="2" ry="2" />
<text  x="158.18" y="1119.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="87.8" y="1109" width="0.2" height="15.0" fill="rgb(236,99,34)" rx="2" ry="2" />
<text  x="90.75" y="1119.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (35 samples, 0.11%)</title><rect x="94.6" y="1077" width="1.3" height="15.0" fill="rgb(228,135,38)" rx="2" ry="2" />
<text  x="97.58" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (68 samples, 0.22%)</title><rect x="594.5" y="645" width="2.6" height="15.0" fill="rgb(206,158,54)" rx="2" ry="2" />
<text  x="597.54" y="655.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (69 samples, 0.22%)</title><rect x="608.5" y="629" width="2.6" height="15.0" fill="rgb(205,139,53)" rx="2" ry="2" />
<text  x="611.54" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="617.1" y="421" width="0.3" height="15.0" fill="rgb(253,193,28)" rx="2" ry="2" />
<text  x="620.14" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="217.6" y="485" width="0.2" height="15.0" fill="rgb(243,44,44)" rx="2" ry="2" />
<text  x="220.57" y="495.5" ></text>
</g>
<g >
<title>tokio::runtime::io::variant::create_driver (47 samples, 0.15%)</title><rect x="202.9" y="1141" width="1.8" height="15.0" fill="rgb(249,142,51)" rx="2" ry="2" />
<text  x="205.89" y="1151.5" ></text>
</g>
<g >
<title>core::mem::drop (7 samples, 0.02%)</title><rect x="23.0" y="981" width="0.2" height="15.0" fill="rgb(244,90,28)" rx="2" ry="2" />
<text  x="25.95" y="991.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.03%)</title><rect x="140.9" y="1077" width="0.3" height="15.0" fill="rgb(218,7,8)" rx="2" ry="2" />
<text  x="143.87" y="1087.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (5,155 samples, 16.40%)</title><rect x="352.6" y="341" width="193.5" height="15.0" fill="rgb(216,24,7)" rx="2" ry="2" />
<text  x="355.58" y="351.5" >serde_json::value::de::_&lt;..</text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (5 samples, 0.02%)</title><rect x="1117.0" y="613" width="0.2" height="15.0" fill="rgb(253,217,17)" rx="2" ry="2" />
<text  x="1120.02" y="623.5" ></text>
</g>
<g >
<title>std::collections::hash::map::RandomState::new (3 samples, 0.01%)</title><rect x="829.1" y="773" width="0.1" height="15.0" fill="rgb(205,80,15)" rx="2" ry="2" />
<text  x="832.07" y="783.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (7 samples, 0.02%)</title><rect x="1095.6" y="837" width="0.3" height="15.0" fill="rgb(218,9,21)" rx="2" ry="2" />
<text  x="1098.62" y="847.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (6 samples, 0.02%)</title><rect x="132.5" y="1077" width="0.3" height="15.0" fill="rgb(221,121,33)" rx="2" ry="2" />
<text  x="135.54" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (14 samples, 0.04%)</title><rect x="225.9" y="501" width="0.5" height="15.0" fill="rgb(220,146,36)" rx="2" ry="2" />
<text  x="228.87" y="511.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="185.8" y="1029" width="0.1" height="15.0" fill="rgb(211,225,28)" rx="2" ry="2" />
<text  x="188.77" y="1039.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::enter (26,179 samples, 83.29%)</title><rect x="206.9" y="1109" width="982.8" height="15.0" fill="rgb(232,211,43)" rx="2" ry="2" />
<text  x="209.87" y="1119.5" >tokio::runtime::basic_scheduler::enter</text>
</g>
<g >
<title>rusty_v8::string::_&lt;impl rusty_v8..data..String&gt;::new (4 samples, 0.01%)</title><rect x="1180.2" y="885" width="0.2" height="15.0" fill="rgb(243,81,47)" rx="2" ry="2" />
<text  x="1183.20" y="895.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (370 samples, 1.18%)</title><rect x="645.3" y="885" width="13.9" height="15.0" fill="rgb(254,152,42)" rx="2" ry="2" />
<text  x="648.33" y="895.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (69 samples, 0.22%)</title><rect x="630.4" y="693" width="2.6" height="15.0" fill="rgb(254,168,16)" rx="2" ry="2" />
<text  x="633.43" y="703.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_fold::_{{closure}} (2,367 samples, 7.53%)</title><rect x="840.2" y="661" width="88.8" height="15.0" fill="rgb(235,68,34)" rx="2" ry="2" />
<text  x="843.18" y="671.5" >core::iter..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (45 samples, 0.14%)</title><rect x="319.2" y="149" width="1.7" height="15.0" fill="rgb(242,152,18)" rx="2" ry="2" />
<text  x="322.24" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="998.7" y="757" width="0.2" height="15.0" fill="rgb(245,101,23)" rx="2" ry="2" />
<text  x="1001.72" y="767.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="665.3" y="725" width="0.1" height="15.0" fill="rgb(225,129,1)" rx="2" ry="2" />
<text  x="668.27" y="735.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.02%)</title><rect x="198.8" y="1093" width="0.3" height="15.0" fill="rgb(226,145,51)" rx="2" ry="2" />
<text  x="201.80" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="15.9" y="1045" width="0.3" height="15.0" fill="rgb(232,113,14)" rx="2" ry="2" />
<text  x="18.93" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="645.8" y="757" width="0.2" height="15.0" fill="rgb(247,184,51)" rx="2" ry="2" />
<text  x="648.78" y="767.5" ></text>
</g>
<g >
<title>reqwest::connect::HttpConnector::new_gai (4 samples, 0.01%)</title><rect x="758.3" y="869" width="0.1" height="15.0" fill="rgb(229,210,23)" rx="2" ry="2" />
<text  x="761.30" y="879.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="263.0" y="565" width="0.3" height="15.0" fill="rgb(239,18,21)" rx="2" ry="2" />
<text  x="266.04" y="575.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (8,072 samples, 25.68%)</title><rect x="270.5" y="549" width="303.0" height="15.0" fill="rgb(219,149,8)" rx="2" ry="2" />
<text  x="273.47" y="559.5" >serde_json::value::de::_&lt;impl serde..de...</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.04%)</title><rect x="1056.6" y="757" width="0.5" height="15.0" fill="rgb(249,164,52)" rx="2" ry="2" />
<text  x="1059.65" y="767.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="1087.3" y="805" width="0.4" height="15.0" fill="rgb(254,163,35)" rx="2" ry="2" />
<text  x="1090.32" y="815.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::is_present (6 samples, 0.02%)</title><rect x="197.8" y="1125" width="0.3" height="15.0" fill="rgb(233,72,18)" rx="2" ry="2" />
<text  x="200.83" y="1135.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (14 samples, 0.04%)</title><rect x="73.1" y="1157" width="0.5" height="15.0" fill="rgb(250,201,7)" rx="2" ry="2" />
<text  x="76.07" y="1167.5" ></text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for &amp;mut W&gt;::write_all (8 samples, 0.03%)</title><rect x="1121.8" y="469" width="0.3" height="15.0" fill="rgb(209,151,28)" rx="2" ry="2" />
<text  x="1124.82" y="479.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (84 samples, 0.27%)</title><rect x="146.1" y="1045" width="3.2" height="15.0" fill="rgb(208,71,18)" rx="2" ry="2" />
<text  x="149.13" y="1055.5" ></text>
</g>
<g >
<title>deno_core::module_specifier::ModuleSpecifier::specifier_has_uri_scheme (3 samples, 0.01%)</title><rect x="1189.5" y="917" width="0.1" height="15.0" fill="rgb(218,229,45)" rx="2" ry="2" />
<text  x="1192.51" y="927.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (18 samples, 0.06%)</title><rect x="225.7" y="565" width="0.7" height="15.0" fill="rgb(220,186,27)" rx="2" ry="2" />
<text  x="228.72" y="575.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (353 samples, 1.12%)</title><rect x="307.7" y="261" width="13.2" height="15.0" fill="rgb(248,152,16)" rx="2" ry="2" />
<text  x="310.67" y="271.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="96.5" y="1109" width="0.3" height="15.0" fill="rgb(248,77,52)" rx="2" ry="2" />
<text  x="99.46" y="1119.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="1070.8" y="805" width="0.1" height="15.0" fill="rgb(218,120,25)" rx="2" ry="2" />
<text  x="1073.80" y="815.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_word_as_str (17 samples, 0.05%)</title><rect x="237.0" y="277" width="0.6" height="15.0" fill="rgb(229,147,52)" rx="2" ry="2" />
<text  x="239.98" y="287.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="194.2" y="1109" width="0.1" height="15.0" fill="rgb(224,132,49)" rx="2" ry="2" />
<text  x="197.18" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1070.4" y="837" width="0.2" height="15.0" fill="rgb(220,99,12)" rx="2" ry="2" />
<text  x="1073.43" y="847.5" ></text>
</g>
<g >
<title>_&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8..support..CFnFrom&lt;F&gt;&gt;::mapping::c_fn (2,000 samples, 6.36%)</title><rect x="1097.4" y="821" width="75.1" height="15.0" fill="rgb(215,61,48)" rx="2" ry="2" />
<text  x="1100.42" y="831.5" >_&lt;extern..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (6 samples, 0.02%)</title><rect x="113.8" y="1093" width="0.3" height="15.0" fill="rgb(242,110,18)" rx="2" ry="2" />
<text  x="116.84" y="1103.5" ></text>
</g>
<g >
<title>_&lt;S as futures_core..stream..TryStream&gt;::try_poll_next (167 samples, 0.53%)</title><rect x="611.5" y="773" width="6.3" height="15.0" fill="rgb(222,70,7)" rx="2" ry="2" />
<text  x="614.54" y="783.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (14 samples, 0.04%)</title><rect x="321.2" y="405" width="0.5" height="15.0" fill="rgb(221,223,3)" rx="2" ry="2" />
<text  x="324.19" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="110.7" y="1013" width="0.2" height="15.0" fill="rgb(252,25,39)" rx="2" ry="2" />
<text  x="113.73" y="1023.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (18 samples, 0.06%)</title><rect x="149.3" y="1077" width="0.7" height="15.0" fill="rgb(218,217,46)" rx="2" ry="2" />
<text  x="152.28" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="828.7" y="821" width="0.2" height="15.0" fill="rgb(251,163,25)" rx="2" ry="2" />
<text  x="831.65" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="218.5" y="597" width="0.3" height="15.0" fill="rgb(227,40,2)" rx="2" ry="2" />
<text  x="221.55" y="607.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::with_buf (16 samples, 0.05%)</title><rect x="237.0" y="261" width="0.6" height="15.0" fill="rgb(218,37,9)" rx="2" ry="2" />
<text  x="240.02" y="271.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (22 samples, 0.07%)</title><rect x="93.2" y="1029" width="0.8" height="15.0" fill="rgb(230,170,7)" rx="2" ry="2" />
<text  x="96.16" y="1039.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (28 samples, 0.09%)</title><rect x="1056.1" y="837" width="1.0" height="15.0" fill="rgb(230,213,36)" rx="2" ry="2" />
<text  x="1059.09" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (39 samples, 0.12%)</title><rect x="631.6" y="645" width="1.4" height="15.0" fill="rgb(222,127,42)" rx="2" ry="2" />
<text  x="634.55" y="655.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (13 samples, 0.04%)</title><rect x="218.9" y="661" width="0.5" height="15.0" fill="rgb(205,78,3)" rx="2" ry="2" />
<text  x="221.92" y="671.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (12 samples, 0.04%)</title><rect x="149.5" y="1029" width="0.5" height="15.0" fill="rgb(254,71,12)" rx="2" ry="2" />
<text  x="152.51" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (5 samples, 0.02%)</title><rect x="118.2" y="1061" width="0.2" height="15.0" fill="rgb(220,14,30)" rx="2" ry="2" />
<text  x="121.20" y="1071.5" ></text>
</g>
<g >
<title>bytes::bytes::shared_drop (4 samples, 0.01%)</title><rect x="645.1" y="629" width="0.2" height="15.0" fill="rgb(242,167,2)" rx="2" ry="2" />
<text  x="648.11" y="639.5" ></text>
</g>
<g >
<title>tokio::runtime::Runtime::block_on::_{{closure}} (26,181 samples, 83.30%)</title><rect x="206.8" y="1141" width="982.9" height="15.0" fill="rgb(211,110,44)" rx="2" ry="2" />
<text  x="209.80" y="1151.5" >tokio::runtime::Runtime::block_on::_{{closure}}</text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="96.2" y="1093" width="0.2" height="15.0" fill="rgb(247,111,25)" rx="2" ry="2" />
<text  x="99.20" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="1080.4" y="821" width="0.4" height="15.0" fill="rgb(239,90,16)" rx="2" ry="2" />
<text  x="1083.41" y="831.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::requires (6 samples, 0.02%)</title><rect x="180.4" y="1109" width="0.2" height="15.0" fill="rgb(220,212,29)" rx="2" ry="2" />
<text  x="183.41" y="1119.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (9 samples, 0.03%)</title><rect x="187.6" y="1125" width="0.3" height="15.0" fill="rgb(207,207,43)" rx="2" ry="2" />
<text  x="190.58" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (3 samples, 0.01%)</title><rect x="1079.8" y="821" width="0.1" height="15.0" fill="rgb(239,163,28)" rx="2" ry="2" />
<text  x="1082.81" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (86 samples, 0.27%)</title><rect x="376.9" y="101" width="3.2" height="15.0" fill="rgb(229,226,25)" rx="2" ry="2" />
<text  x="379.87" y="111.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (15 samples, 0.05%)</title><rect x="1177.0" y="821" width="0.5" height="15.0" fill="rgb(235,139,8)" rx="2" ry="2" />
<text  x="1179.97" y="831.5" ></text>
</g>
<g >
<title>deno::flags::inspect_args (36 samples, 0.11%)</title><rect x="111.3" y="1141" width="1.3" height="15.0" fill="rgb(210,208,38)" rx="2" ry="2" />
<text  x="114.25" y="1151.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="17.4" y="1013" width="0.1" height="15.0" fill="rgb(213,226,36)" rx="2" ry="2" />
<text  x="20.40" y="1023.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="166.8" y="1029" width="0.2" height="15.0" fill="rgb(227,50,33)" rx="2" ry="2" />
<text  x="169.82" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="238.0" y="261" width="0.1" height="15.0" fill="rgb(253,188,28)" rx="2" ry="2" />
<text  x="240.96" y="271.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (18 samples, 0.06%)</title><rect x="286.4" y="261" width="0.7" height="15.0" fill="rgb(234,193,39)" rx="2" ry="2" />
<text  x="289.43" y="271.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="187.2" y="1061" width="0.2" height="15.0" fill="rgb(229,53,49)" rx="2" ry="2" />
<text  x="190.24" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="575.9" y="501" width="0.2" height="15.0" fill="rgb(232,11,35)" rx="2" ry="2" />
<text  x="578.88" y="511.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (15 samples, 0.05%)</title><rect x="269.8" y="565" width="0.6" height="15.0" fill="rgb(219,77,47)" rx="2" ry="2" />
<text  x="272.79" y="575.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (18 samples, 0.06%)</title><rect x="1073.8" y="869" width="0.7" height="15.0" fill="rgb(214,178,11)" rx="2" ry="2" />
<text  x="1076.84" y="879.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="549.3" y="181" width="0.3" height="15.0" fill="rgb(223,13,26)" rx="2" ry="2" />
<text  x="552.30" y="191.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (20 samples, 0.06%)</title><rect x="838.6" y="709" width="0.7" height="15.0" fill="rgb(218,129,41)" rx="2" ry="2" />
<text  x="841.56" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_desugared (14 samples, 0.04%)</title><rect x="12.1" y="1141" width="0.6" height="15.0" fill="rgb(246,141,36)" rx="2" ry="2" />
<text  x="15.14" y="1151.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (10 samples, 0.03%)</title><rect x="1123.1" y="533" width="0.4" height="15.0" fill="rgb(244,142,33)" rx="2" ry="2" />
<text  x="1126.10" y="543.5" ></text>
</g>
<g >
<title>_&lt;string_cache..atom..Atom&lt;Static&gt; as core..convert..From&lt;alloc..borrow..Cow&lt;str&gt;&gt;&gt;::from (24 samples, 0.08%)</title><rect x="234.7" y="277" width="0.9" height="15.0" fill="rgb(237,181,6)" rx="2" ry="2" />
<text  x="237.69" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="1081.8" y="725" width="0.2" height="15.0" fill="rgb(250,57,45)" rx="2" ry="2" />
<text  x="1084.76" y="735.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="292.0" y="293" width="0.4" height="15.0" fill="rgb(216,121,41)" rx="2" ry="2" />
<text  x="294.98" y="303.5" ></text>
</g>
<g >
<title>http::header::value::HeaderValue::try_from_generic (9 samples, 0.03%)</title><rect x="663.4" y="837" width="0.4" height="15.0" fill="rgb(247,80,7)" rx="2" ry="2" />
<text  x="666.43" y="847.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::new (29 samples, 0.09%)</title><rect x="1087.2" y="837" width="1.1" height="15.0" fill="rgb(219,102,27)" rx="2" ry="2" />
<text  x="1090.25" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="19.4" y="853" width="0.1" height="15.0" fill="rgb(222,172,28)" rx="2" ry="2" />
<text  x="22.42" y="863.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner (43 samples, 0.14%)</title><rect x="234.3" y="453" width="1.6" height="15.0" fill="rgb(206,117,9)" rx="2" ry="2" />
<text  x="237.28" y="463.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="165.8" y="1029" width="0.2" height="15.0" fill="rgb(253,168,52)" rx="2" ry="2" />
<text  x="168.80" y="1039.5" ></text>
</g>
<g >
<title>mio::poll::Poll::register (3 samples, 0.01%)</title><rect x="203.5" y="1109" width="0.1" height="15.0" fill="rgb(230,228,42)" rx="2" ry="2" />
<text  x="206.49" y="1119.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (12 samples, 0.04%)</title><rect x="190.0" y="1045" width="0.5" height="15.0" fill="rgb(254,115,8)" rx="2" ry="2" />
<text  x="193.02" y="1055.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (19 samples, 0.06%)</title><rect x="999.7" y="757" width="0.7" height="15.0" fill="rgb(206,226,14)" rx="2" ry="2" />
<text  x="1002.73" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1060.7" y="837" width="0.2" height="15.0" fill="rgb(244,219,18)" rx="2" ry="2" />
<text  x="1063.70" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="119.0" y="1061" width="0.2" height="15.0" fill="rgb(218,25,7)" rx="2" ry="2" />
<text  x="121.99" y="1071.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (8 samples, 0.03%)</title><rect x="102.4" y="1077" width="0.3" height="15.0" fill="rgb(249,83,44)" rx="2" ry="2" />
<text  x="105.43" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="134.8" y="1077" width="0.2" height="15.0" fill="rgb(229,78,18)" rx="2" ry="2" />
<text  x="137.79" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (33 samples, 0.10%)</title><rect x="643.8" y="565" width="1.2" height="15.0" fill="rgb(223,216,45)" rx="2" ry="2" />
<text  x="646.76" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1176.1" y="869" width="0.2" height="15.0" fill="rgb(221,76,48)" rx="2" ry="2" />
<text  x="1179.15" y="879.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (26 samples, 0.08%)</title><rect x="133.0" y="1061" width="1.0" height="15.0" fill="rgb(252,139,26)" rx="2" ry="2" />
<text  x="136.03" y="1071.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner::_{{closure}} (9 samples, 0.03%)</title><rect x="238.5" y="405" width="0.3" height="15.0" fill="rgb(214,182,35)" rx="2" ry="2" />
<text  x="241.48" y="415.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (178 samples, 0.57%)</title><rect x="564.7" y="357" width="6.7" height="15.0" fill="rgb(252,140,50)" rx="2" ry="2" />
<text  x="567.69" y="367.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="17.6" y="1045" width="0.3" height="15.0" fill="rgb(221,57,36)" rx="2" ry="2" />
<text  x="20.62" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (384 samples, 1.22%)</title><rect x="244.6" y="581" width="14.4" height="15.0" fill="rgb(205,114,11)" rx="2" ry="2" />
<text  x="247.57" y="591.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="217.6" y="453" width="0.2" height="15.0" fill="rgb(224,125,23)" rx="2" ry="2" />
<text  x="220.65" y="463.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="259.7" y="597" width="0.1" height="15.0" fill="rgb(215,58,21)" rx="2" ry="2" />
<text  x="262.73" y="607.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (15 samples, 0.05%)</title><rect x="569.6" y="309" width="0.6" height="15.0" fill="rgb(246,197,46)" rx="2" ry="2" />
<text  x="572.65" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="157.7" y="1029" width="0.3" height="15.0" fill="rgb(214,0,39)" rx="2" ry="2" />
<text  x="160.73" y="1039.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="197.7" y="1093" width="0.1" height="15.0" fill="rgb(251,4,2)" rx="2" ry="2" />
<text  x="200.68" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..slice..Iter&lt;T&gt; as core..iter..traits..iterator..Iterator&gt;::any (7 samples, 0.02%)</title><rect x="213.0" y="485" width="0.3" height="15.0" fill="rgb(216,199,23)" rx="2" ry="2" />
<text  x="215.99" y="495.5" ></text>
</g>
<g >
<title>_&lt;core..pin..Pin&lt;P&gt; as core..future..future..Future&gt;::poll (156 samples, 0.50%)</title><rect x="611.7" y="693" width="5.9" height="15.0" fill="rgb(249,90,8)" rx="2" ry="2" />
<text  x="614.73" y="703.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (11 samples, 0.03%)</title><rect x="274.4" y="341" width="0.4" height="15.0" fill="rgb(219,112,8)" rx="2" ry="2" />
<text  x="277.41" y="351.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (67 samples, 0.21%)</title><rect x="642.8" y="677" width="2.5" height="15.0" fill="rgb(205,62,12)" rx="2" ry="2" />
<text  x="645.82" y="687.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="104.8" y="1029" width="0.2" height="15.0" fill="rgb(236,24,38)" rx="2" ry="2" />
<text  x="107.79" y="1039.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="659.9" y="869" width="0.3" height="15.0" fill="rgb(244,49,15)" rx="2" ry="2" />
<text  x="662.90" y="879.5" ></text>
</g>
<g >
<title>tokio::time::driver::Driver&lt;T&gt;::new (27 samples, 0.09%)</title><rect x="204.7" y="1125" width="1.0" height="15.0" fill="rgb(249,21,23)" rx="2" ry="2" />
<text  x="207.70" y="1135.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="1115.2" y="581" width="0.2" height="15.0" fill="rgb(222,7,46)" rx="2" ry="2" />
<text  x="1118.18" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (4 samples, 0.01%)</title><rect x="197.9" y="1093" width="0.2" height="15.0" fill="rgb(222,79,21)" rx="2" ry="2" />
<text  x="200.90" y="1103.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="219.7" y="549" width="0.1" height="15.0" fill="rgb(230,83,12)" rx="2" ry="2" />
<text  x="222.71" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="634.4" y="757" width="0.1" height="15.0" fill="rgb(211,34,33)" rx="2" ry="2" />
<text  x="637.37" y="767.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="136.1" y="1093" width="0.3" height="15.0" fill="rgb(206,182,24)" rx="2" ry="2" />
<text  x="139.14" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="89.1" y="1077" width="0.2" height="15.0" fill="rgb(212,191,6)" rx="2" ry="2" />
<text  x="92.14" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="155.9" y="1061" width="0.2" height="15.0" fill="rgb(207,25,32)" rx="2" ry="2" />
<text  x="158.93" y="1071.5" ></text>
</g>
<g >
<title>_&lt;swc_common..input..StringInput as swc_common..input..Input&gt;::uncons_while (7 samples, 0.02%)</title><rect x="231.9" y="469" width="0.3" height="15.0" fill="rgb(248,48,23)" rx="2" ry="2" />
<text  x="234.91" y="479.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (21 samples, 0.07%)</title><rect x="1113.6" y="501" width="0.8" height="15.0" fill="rgb(223,214,50)" rx="2" ry="2" />
<text  x="1116.56" y="511.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (7 samples, 0.02%)</title><rect x="1138.0" y="693" width="0.3" height="15.0" fill="rgb(253,66,8)" rx="2" ry="2" />
<text  x="1141.00" y="703.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (16 samples, 0.05%)</title><rect x="149.4" y="1061" width="0.6" height="15.0" fill="rgb(239,222,19)" rx="2" ry="2" />
<text  x="152.36" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (21 samples, 0.07%)</title><rect x="225.6" y="613" width="0.8" height="15.0" fill="rgb(248,97,11)" rx="2" ry="2" />
<text  x="228.61" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (306 samples, 0.97%)</title><rect x="647.4" y="677" width="11.5" height="15.0" fill="rgb(235,217,38)" rx="2" ry="2" />
<text  x="650.40" y="687.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (98 samples, 0.31%)</title><rect x="35.2" y="1045" width="3.7" height="15.0" fill="rgb(240,139,10)" rx="2" ry="2" />
<text  x="38.23" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (27 samples, 0.09%)</title><rect x="1072.2" y="837" width="1.0" height="15.0" fill="rgb(240,130,35)" rx="2" ry="2" />
<text  x="1075.19" y="847.5" ></text>
</g>
<g >
<title>rusty_v8::string::_&lt;impl rusty_v8..data..String&gt;::to_rust_string_lossy (6 samples, 0.02%)</title><rect x="636.1" y="773" width="0.3" height="15.0" fill="rgb(236,224,34)" rx="2" ry="2" />
<text  x="639.13" y="783.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="75.2" y="1045" width="0.3" height="15.0" fill="rgb(240,1,33)" rx="2" ry="2" />
<text  x="78.25" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="267.5" y="581" width="0.2" height="15.0" fill="rgb(220,0,27)" rx="2" ry="2" />
<text  x="270.54" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (15 samples, 0.05%)</title><rect x="181.8" y="1077" width="0.6" height="15.0" fill="rgb(254,28,53)" rx="2" ry="2" />
<text  x="184.83" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="82.0" y="1061" width="0.1" height="15.0" fill="rgb(225,65,6)" rx="2" ry="2" />
<text  x="84.97" y="1071.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (3 samples, 0.01%)</title><rect x="181.7" y="1077" width="0.1" height="15.0" fill="rgb(244,68,7)" rx="2" ry="2" />
<text  x="184.72" y="1087.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (5 samples, 0.02%)</title><rect x="195.4" y="1109" width="0.2" height="15.0" fill="rgb(212,99,50)" rx="2" ry="2" />
<text  x="198.39" y="1119.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="267.1" y="421" width="0.3" height="15.0" fill="rgb(231,214,39)" rx="2" ry="2" />
<text  x="270.05" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="636.2" y="741" width="0.2" height="15.0" fill="rgb(216,63,25)" rx="2" ry="2" />
<text  x="639.21" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="585.6" y="533" width="0.1" height="15.0" fill="rgb(252,118,50)" rx="2" ry="2" />
<text  x="588.60" y="543.5" ></text>
</g>
<g >
<title>rusty_v8::script::_&lt;impl rusty_v8..data..Script&gt;::run (2,022 samples, 6.43%)</title><rect x="1097.3" y="869" width="75.9" height="15.0" fill="rgb(240,114,13)" rx="2" ry="2" />
<text  x="1100.31" y="879.5" >rusty_v8..</text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="23.3" y="997" width="0.2" height="15.0" fill="rgb(247,145,9)" rx="2" ry="2" />
<text  x="26.29" y="1007.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (14 samples, 0.04%)</title><rect x="268.6" y="597" width="0.6" height="15.0" fill="rgb(218,170,54)" rx="2" ry="2" />
<text  x="271.63" y="607.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (101 samples, 0.32%)</title><rect x="1181.6" y="869" width="3.8" height="15.0" fill="rgb(210,73,46)" rx="2" ry="2" />
<text  x="1184.63" y="879.5" ></text>
</g>
<g >
<title>rusty_v8::string::_&lt;impl rusty_v8..data..String&gt;::to_rust_string_lossy (6 samples, 0.02%)</title><rect x="1098.4" y="757" width="0.3" height="15.0" fill="rgb(251,83,50)" rx="2" ry="2" />
<text  x="1101.43" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="1175.5" y="725" width="0.3" height="15.0" fill="rgb(212,61,24)" rx="2" ry="2" />
<text  x="1178.47" y="735.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="1171.1" y="725" width="0.2" height="15.0" fill="rgb(216,203,52)" rx="2" ry="2" />
<text  x="1174.12" y="735.5" ></text>
</g>
<g >
<title>deno::flags::lock_arg (9 samples, 0.03%)</title><rect x="97.9" y="1141" width="0.4" height="15.0" fill="rgb(237,106,54)" rx="2" ry="2" />
<text  x="100.92" y="1151.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="136.9" y="1077" width="0.3" height="15.0" fill="rgb(254,195,26)" rx="2" ry="2" />
<text  x="139.93" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="121.1" y="1077" width="0.1" height="15.0" fill="rgb(252,15,38)" rx="2" ry="2" />
<text  x="124.05" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (7 samples, 0.02%)</title><rect x="100.6" y="1045" width="0.2" height="15.0" fill="rgb(217,9,51)" rx="2" ry="2" />
<text  x="103.55" y="1055.5" ></text>
</g>
<g >
<title>alloc::string::String::split_off (6 samples, 0.02%)</title><rect x="599.8" y="677" width="0.2" height="15.0" fill="rgb(220,161,35)" rx="2" ry="2" />
<text  x="602.79" y="687.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (10 samples, 0.03%)</title><rect x="1064.3" y="853" width="0.3" height="15.0" fill="rgb(218,83,32)" rx="2" ry="2" />
<text  x="1067.27" y="863.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (126 samples, 0.40%)</title><rect x="546.1" y="405" width="4.7" height="15.0" fill="rgb(208,218,39)" rx="2" ry="2" />
<text  x="549.11" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1036.4" y="725" width="0.1" height="15.0" fill="rgb(210,121,16)" rx="2" ry="2" />
<text  x="1039.38" y="735.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (8,147 samples, 25.92%)</title><rect x="268.5" y="645" width="305.9" height="15.0" fill="rgb(223,71,29)" rx="2" ry="2" />
<text  x="271.52" y="655.5" >serde_json::value::de::_&lt;impl serde..de....</text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::State::update (8 samples, 0.03%)</title><rect x="237.8" y="341" width="0.3" height="15.0" fill="rgb(221,227,38)" rx="2" ry="2" />
<text  x="240.77" y="351.5" ></text>
</g>
<g >
<title>url::Url::to_file_path (47 samples, 0.15%)</title><rect x="241.8" y="661" width="1.8" height="15.0" fill="rgb(227,63,4)" rx="2" ry="2" />
<text  x="244.83" y="671.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="166.7" y="1093" width="0.3" height="15.0" fill="rgb(238,49,41)" rx="2" ry="2" />
<text  x="169.67" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.02%)</title><rect x="179.8" y="1013" width="0.2" height="15.0" fill="rgb(214,109,35)" rx="2" ry="2" />
<text  x="182.84" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (831 samples, 2.64%)</title><rect x="967.1" y="789" width="31.2" height="15.0" fill="rgb(206,103,54)" rx="2" ry="2" />
<text  x="970.15" y="799.5" >al..</text>
</g>
<g >
<title>_&lt;rusty_v8..isolate..OwnedIsolate as rusty_v8..scope..getter..GetScopeData&gt;::get_scope_data_mut (5 samples, 0.02%)</title><rect x="1179.2" y="869" width="0.2" height="15.0" fill="rgb(228,39,17)" rx="2" ry="2" />
<text  x="1182.19" y="879.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="633.8" y="709" width="0.1" height="15.0" fill="rgb(246,25,53)" rx="2" ry="2" />
<text  x="636.81" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="1068.1" y="821" width="0.1" height="15.0" fill="rgb(207,215,45)" rx="2" ry="2" />
<text  x="1071.06" y="831.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (150 samples, 0.48%)</title><rect x="278.8" y="277" width="5.6" height="15.0" fill="rgb(220,115,23)" rx="2" ry="2" />
<text  x="281.77" y="287.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.03%)</title><rect x="1036.5" y="853" width="0.4" height="15.0" fill="rgb(234,138,42)" rx="2" ry="2" />
<text  x="1039.53" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1060.7" y="821" width="0.2" height="15.0" fill="rgb(253,141,46)" rx="2" ry="2" />
<text  x="1063.74" y="831.5" ></text>
</g>
<g >
<title>deno_core::module_specifier::ModuleSpecifier::resolve_import (274 samples, 0.87%)</title><rect x="590.0" y="789" width="10.2" height="15.0" fill="rgb(250,119,27)" rx="2" ry="2" />
<text  x="592.96" y="799.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::requires (6 samples, 0.02%)</title><rect x="98.3" y="1125" width="0.2" height="15.0" fill="rgb(251,154,1)" rx="2" ry="2" />
<text  x="101.30" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="98.3" y="1109" width="0.2" height="15.0" fill="rgb(245,213,5)" rx="2" ry="2" />
<text  x="101.34" y="1119.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (93 samples, 0.30%)</title><rect x="1076.4" y="885" width="3.5" height="15.0" fill="rgb(228,181,15)" rx="2" ry="2" />
<text  x="1079.43" y="895.5" ></text>
</g>
<g >
<title>_&lt;serde_json..ser..Compound&lt;W,F&gt; as serde..ser..SerializeMap&gt;::serialize_value (159 samples, 0.51%)</title><rect x="1118.1" y="629" width="6.0" height="15.0" fill="rgb(207,83,36)" rx="2" ry="2" />
<text  x="1121.11" y="639.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::next (8 samples, 0.03%)</title><rect x="20.9" y="1013" width="0.3" height="15.0" fill="rgb(206,212,46)" rx="2" ry="2" />
<text  x="23.89" y="1023.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="1058.2" y="773" width="0.2" height="15.0" fill="rgb(210,90,45)" rx="2" ry="2" />
<text  x="1061.23" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="198.6" y="1109" width="0.1" height="15.0" fill="rgb(240,88,15)" rx="2" ry="2" />
<text  x="201.58" y="1119.5" ></text>
</g>
<g >
<title>rusty_v8::external_references::ExternalReferences::new (13 samples, 0.04%)</title><rect x="1086.8" y="757" width="0.4" height="15.0" fill="rgb(231,48,27)" rx="2" ry="2" />
<text  x="1089.76" y="767.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (4 samples, 0.01%)</title><rect x="74.3" y="1109" width="0.2" height="15.0" fill="rgb(224,106,35)" rx="2" ry="2" />
<text  x="77.31" y="1119.5" ></text>
</g>
<g >
<title>serde_json::value::index::_&lt;impl core..ops..index..Index&lt;I&gt; for serde_json..value..Value&gt;::index (21 samples, 0.07%)</title><rect x="574.4" y="677" width="0.8" height="15.0" fill="rgb(229,38,2)" rx="2" ry="2" />
<text  x="577.38" y="687.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (10 samples, 0.03%)</title><rect x="100.4" y="1093" width="0.4" height="15.0" fill="rgb(253,158,17)" rx="2" ry="2" />
<text  x="103.44" y="1103.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut F as core..future..future..Future&gt;::poll (76 samples, 0.24%)</title><rect x="207.3" y="933" width="2.9" height="15.0" fill="rgb(249,228,29)" rx="2" ry="2" />
<text  x="210.32" y="943.5" ></text>
</g>
<g >
<title>deno::ops::io::get_stdio_stream (45 samples, 0.14%)</title><rect x="832.6" y="901" width="1.7" height="15.0" fill="rgb(251,119,32)" rx="2" ry="2" />
<text  x="835.63" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (3 samples, 0.01%)</title><rect x="617.5" y="453" width="0.1" height="15.0" fill="rgb(242,114,50)" rx="2" ry="2" />
<text  x="620.48" y="463.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::ident::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_maybe_private_name (26 samples, 0.08%)</title><rect x="236.6" y="405" width="1.0" height="15.0" fill="rgb(205,77,23)" rx="2" ry="2" />
<text  x="239.64" y="415.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="215.8" y="469" width="0.1" height="15.0" fill="rgb(205,43,25)" rx="2" ry="2" />
<text  x="218.77" y="479.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (13 samples, 0.04%)</title><rect x="200.9" y="1061" width="0.5" height="15.0" fill="rgb(238,89,52)" rx="2" ry="2" />
<text  x="203.90" y="1071.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="268.9" y="501" width="0.3" height="15.0" fill="rgb(216,55,19)" rx="2" ry="2" />
<text  x="271.86" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="240.5" y="421" width="0.1" height="15.0" fill="rgb(213,43,21)" rx="2" ry="2" />
<text  x="243.51" y="431.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="618.2" y="805" width="0.2" height="15.0" fill="rgb(238,96,44)" rx="2" ry="2" />
<text  x="621.19" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="620.6" y="693" width="0.1" height="15.0" fill="rgb(227,41,5)" rx="2" ry="2" />
<text  x="623.55" y="703.5" ></text>
</g>
<g >
<title>deno_core::modules::RecursiveModuleLoad::prepare::_{{closure}} (10,368 samples, 32.99%)</title><rect x="211.0" y="821" width="389.2" height="15.0" fill="rgb(251,63,25)" rx="2" ry="2" />
<text  x="214.00" y="831.5" >deno_core::modules::RecursiveModuleLoad::prepare::_{..</text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (132 samples, 0.42%)</title><rect x="58.5" y="1077" width="5.0" height="15.0" fill="rgb(216,81,21)" rx="2" ry="2" />
<text  x="61.54" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="64.5" y="1061" width="0.2" height="15.0" fill="rgb(232,11,29)" rx="2" ry="2" />
<text  x="67.51" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (17 samples, 0.05%)</title><rect x="11.4" y="1125" width="0.6" height="15.0" fill="rgb(226,17,39)" rx="2" ry="2" />
<text  x="14.35" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="17.3" y="1045" width="0.2" height="15.0" fill="rgb(209,69,31)" rx="2" ry="2" />
<text  x="20.28" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (12 samples, 0.04%)</title><rect x="212.4" y="421" width="0.4" height="15.0" fill="rgb(245,27,13)" rx="2" ry="2" />
<text  x="215.35" y="431.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.03%)</title><rect x="1166.7" y="533" width="0.4" height="15.0" fill="rgb(240,182,7)" rx="2" ry="2" />
<text  x="1169.72" y="543.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (14 samples, 0.04%)</title><rect x="100.3" y="1141" width="0.6" height="15.0" fill="rgb(250,50,45)" rx="2" ry="2" />
<text  x="103.33" y="1151.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as core..fmt..Display&gt;::fmt (52 samples, 0.17%)</title><rect x="220.4" y="645" width="2.0" height="15.0" fill="rgb(238,52,32)" rx="2" ry="2" />
<text  x="223.43" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="660.9" y="757" width="0.1" height="15.0" fill="rgb(205,32,31)" rx="2" ry="2" />
<text  x="663.88" y="767.5" ></text>
</g>
<g >
<title>_&lt;alloc..alloc..Global as core..alloc..AllocRef&gt;::grow (4 samples, 0.01%)</title><rect x="1185.3" y="677" width="0.1" height="15.0" fill="rgb(214,4,42)" rx="2" ry="2" />
<text  x="1188.27" y="687.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="549.3" y="197" width="0.3" height="15.0" fill="rgb(250,62,17)" rx="2" ry="2" />
<text  x="552.26" y="207.5" ></text>
</g>
<g >
<title>clap::app::validator::Validator::validate_matched_args (3 samples, 0.01%)</title><rect x="23.7" y="1077" width="0.1" height="15.0" fill="rgb(250,20,35)" rx="2" ry="2" />
<text  x="26.70" y="1087.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_map (121 samples, 0.38%)</title><rect x="546.3" y="325" width="4.5" height="15.0" fill="rgb(227,75,21)" rx="2" ry="2" />
<text  x="549.30" y="335.5" ></text>
</g>
<g >
<title>deno_core::modules::Modules::register (36 samples, 0.11%)</title><rect x="620.3" y="805" width="1.3" height="15.0" fill="rgb(240,36,15)" rx="2" ry="2" />
<text  x="623.29" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..rc..Rc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (13 samples, 0.04%)</title><rect x="72.2" y="933" width="0.5" height="15.0" fill="rgb(220,51,52)" rx="2" ry="2" />
<text  x="75.21" y="943.5" ></text>
</g>
<g >
<title>deno::file_fetcher::TextDocument::new (3 samples, 0.01%)</title><rect x="615.5" y="533" width="0.1" height="15.0" fill="rgb(222,146,24)" rx="2" ry="2" />
<text  x="618.52" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="1081.7" y="741" width="0.3" height="15.0" fill="rgb(239,180,17)" rx="2" ry="2" />
<text  x="1084.65" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="141.0" y="1045" width="0.2" height="15.0" fill="rgb(206,115,36)" rx="2" ry="2" />
<text  x="144.02" y="1055.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="1005.0" y="821" width="0.6" height="15.0" fill="rgb(239,90,45)" rx="2" ry="2" />
<text  x="1007.95" y="831.5" ></text>
</g>
<g >
<title>futures_util::future::future::FutureExt::poll_unpin (74 samples, 0.24%)</title><rect x="207.4" y="901" width="2.8" height="15.0" fill="rgb(221,148,25)" rx="2" ry="2" />
<text  x="210.40" y="911.5" ></text>
</g>
<g >
<title>swc_common::syntax_pos::analyze_source_file::analyze_source_file (9 samples, 0.03%)</title><rect x="230.5" y="613" width="0.4" height="15.0" fill="rgb(231,193,29)" rx="2" ry="2" />
<text  x="233.52" y="623.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="127.8" y="1077" width="0.3" height="15.0" fill="rgb(230,19,26)" rx="2" ry="2" />
<text  x="130.77" y="1087.5" ></text>
</g>
<g >
<title>futures_util::stream::stream::StreamExt::poll_next_unpin (11 samples, 0.03%)</title><rect x="209.6" y="837" width="0.4" height="15.0" fill="rgb(218,210,41)" rx="2" ry="2" />
<text  x="212.58" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="157.5" y="1061" width="0.5" height="15.0" fill="rgb(254,137,6)" rx="2" ry="2" />
<text  x="160.50" y="1071.5" ></text>
</g>
<g >
<title>_&lt;deno_core..module_specifier..ModuleSpecifier as core..fmt..Display&gt;::fmt (24 samples, 0.08%)</title><rect x="211.9" y="517" width="0.9" height="15.0" fill="rgb(252,166,37)" rx="2" ry="2" />
<text  x="214.90" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="638.4" y="821" width="0.2" height="15.0" fill="rgb(208,107,40)" rx="2" ry="2" />
<text  x="641.42" y="831.5" ></text>
</g>
<g >
<title>_&lt;core..option..Option&lt;T&gt; as core..clone..Clone&gt;::clone (116 samples, 0.37%)</title><rect x="28.8" y="1061" width="4.3" height="15.0" fill="rgb(231,184,34)" rx="2" ry="2" />
<text  x="31.77" y="1071.5" ></text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="659.8" y="901" width="0.4" height="15.0" fill="rgb(251,148,12)" rx="2" ry="2" />
<text  x="662.82" y="911.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once (3 samples, 0.01%)</title><rect x="1092.4" y="741" width="0.1" height="15.0" fill="rgb(254,25,45)" rx="2" ry="2" />
<text  x="1095.43" y="751.5" ></text>
</g>
<g >
<title>deno::global_state::GlobalState::fetch_compiled_module::_{{closure}} (151 samples, 0.48%)</title><rect x="611.9" y="613" width="5.7" height="15.0" fill="rgb(251,4,4)" rx="2" ry="2" />
<text  x="614.92" y="623.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="153.2" y="1109" width="0.3" height="15.0" fill="rgb(208,17,48)" rx="2" ry="2" />
<text  x="156.19" y="1119.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (354 samples, 1.13%)</title><rect x="1101.3" y="661" width="13.3" height="15.0" fill="rgb(218,140,32)" rx="2" ry="2" />
<text  x="1104.32" y="671.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="646.8" y="773" width="0.1" height="15.0" fill="rgb(226,110,51)" rx="2" ry="2" />
<text  x="649.76" y="783.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..Visitor&gt;::visit_str (9 samples, 0.03%)</title><rect x="546.5" y="229" width="0.4" height="15.0" fill="rgb(246,118,51)" rx="2" ry="2" />
<text  x="549.52" y="239.5" ></text>
</g>
<g >
<title>unicode_xid::tables::derived_property::XID_Continue (3 samples, 0.01%)</title><rect x="232.1" y="405" width="0.1" height="15.0" fill="rgb(219,30,16)" rx="2" ry="2" />
<text  x="235.06" y="415.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (8 samples, 0.03%)</title><rect x="184.9" y="1045" width="0.3" height="15.0" fill="rgb(229,132,10)" rx="2" ry="2" />
<text  x="187.87" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="233.2" y="453" width="0.2" height="15.0" fill="rgb(205,175,41)" rx="2" ry="2" />
<text  x="236.19" y="463.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="13.4" y="1093" width="0.2" height="15.0" fill="rgb(223,214,29)" rx="2" ry="2" />
<text  x="16.38" y="1103.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (8 samples, 0.03%)</title><rect x="101.3" y="1109" width="0.3" height="15.0" fill="rgb(214,14,10)" rx="2" ry="2" />
<text  x="104.34" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="191.7" y="1093" width="0.2" height="15.0" fill="rgb(209,50,29)" rx="2" ry="2" />
<text  x="194.67" y="1103.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::requires (6 samples, 0.02%)</title><rect x="114.6" y="1141" width="0.2" height="15.0" fill="rgb(237,156,13)" rx="2" ry="2" />
<text  x="117.56" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (28 samples, 0.09%)</title><rect x="291.4" y="309" width="1.0" height="15.0" fill="rgb(224,83,37)" rx="2" ry="2" />
<text  x="294.38" y="319.5" ></text>
</g>
<g >
<title>rusty_v8::function::_&lt;impl rusty_v8..data..Function&gt;::call (3 samples, 0.01%)</title><rect x="209.3" y="821" width="0.1" height="15.0" fill="rgb(245,130,2)" rx="2" ry="2" />
<text  x="212.28" y="831.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..vec..SpecFromElem&gt;::from_elem (4 samples, 0.01%)</title><rect x="235.0" y="165" width="0.1" height="15.0" fill="rgb(251,127,38)" rx="2" ry="2" />
<text  x="237.95" y="175.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::get (6 samples, 0.02%)</title><rect x="16.9" y="1045" width="0.2" height="15.0" fill="rgb(219,160,48)" rx="2" ry="2" />
<text  x="19.87" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="1084.7" y="741" width="0.5" height="15.0" fill="rgb(212,162,51)" rx="2" ry="2" />
<text  x="1087.73" y="751.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="142.6" y="1093" width="0.3" height="15.0" fill="rgb(233,30,51)" rx="2" ry="2" />
<text  x="145.56" y="1103.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_map (6,665 samples, 21.21%)</title><rect x="321.2" y="421" width="250.2" height="15.0" fill="rgb(231,107,29)" rx="2" ry="2" />
<text  x="324.15" y="431.5" >_&lt;serde_json..value..de..&lt;impl se..</text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..default..Default&gt;::default (7 samples, 0.02%)</title><rect x="663.0" y="885" width="0.3" height="15.0" fill="rgb(224,15,54)" rx="2" ry="2" />
<text  x="666.02" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="154.8" y="1077" width="0.2" height="15.0" fill="rgb(229,102,45)" rx="2" ry="2" />
<text  x="157.76" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.02%)</title><rect x="621.0" y="741" width="0.3" height="15.0" fill="rgb(234,174,49)" rx="2" ry="2" />
<text  x="624.01" y="751.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (132 samples, 0.42%)</title><rect x="1008.0" y="853" width="5.0" height="15.0" fill="rgb(232,148,32)" rx="2" ry="2" />
<text  x="1011.03" y="863.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (156 samples, 0.50%)</title><rect x="1118.2" y="597" width="5.9" height="15.0" fill="rgb(237,130,38)" rx="2" ry="2" />
<text  x="1121.22" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="104.8" y="1013" width="0.2" height="15.0" fill="rgb(215,181,9)" rx="2" ry="2" />
<text  x="107.83" y="1023.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="166.3" y="1061" width="0.1" height="15.0" fill="rgb(207,39,4)" rx="2" ry="2" />
<text  x="169.25" y="1071.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (567 samples, 1.80%)</title><rect x="449.1" y="213" width="21.3" height="15.0" fill="rgb(221,178,50)" rx="2" ry="2" />
<text  x="452.14" y="223.5" >_..</text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (43 samples, 0.14%)</title><rect x="838.2" y="821" width="1.6" height="15.0" fill="rgb(217,89,14)" rx="2" ry="2" />
<text  x="841.15" y="831.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (262 samples, 0.83%)</title><rect x="167.5" y="1109" width="9.9" height="15.0" fill="rgb(225,3,38)" rx="2" ry="2" />
<text  x="170.53" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2,374 samples, 7.55%)</title><rect x="839.9" y="773" width="89.1" height="15.0" fill="rgb(211,65,42)" rx="2" ry="2" />
<text  x="842.92" y="783.5" >alloc::vec..</text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="200.1" y="1077" width="0.1" height="15.0" fill="rgb(240,104,45)" rx="2" ry="2" />
<text  x="203.08" y="1087.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="96.5" y="1077" width="0.3" height="15.0" fill="rgb(240,65,17)" rx="2" ry="2" />
<text  x="99.54" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="641.0" y="517" width="0.4" height="15.0" fill="rgb(242,127,39)" rx="2" ry="2" />
<text  x="644.02" y="527.5" ></text>
</g>
<g >
<title>deno::flags::lock_write_arg (7 samples, 0.02%)</title><rect x="88.7" y="1141" width="0.3" height="15.0" fill="rgb(236,136,14)" rx="2" ry="2" />
<text  x="91.69" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_mut (3 samples, 0.01%)</title><rect x="24.2" y="1045" width="0.1" height="15.0" fill="rgb(238,95,42)" rx="2" ry="2" />
<text  x="27.23" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="207.6" y="805" width="0.1" height="15.0" fill="rgb(219,119,38)" rx="2" ry="2" />
<text  x="210.62" y="815.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="1178.8" y="837" width="0.3" height="15.0" fill="rgb(226,23,45)" rx="2" ry="2" />
<text  x="1181.81" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="96.1" y="1045" width="0.1" height="15.0" fill="rgb(211,19,47)" rx="2" ry="2" />
<text  x="99.09" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="23.4" y="949" width="0.1" height="15.0" fill="rgb(228,63,11)" rx="2" ry="2" />
<text  x="26.40" y="959.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (20 samples, 0.06%)</title><rect x="1079.2" y="853" width="0.7" height="15.0" fill="rgb(252,112,19)" rx="2" ry="2" />
<text  x="1082.17" y="863.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="166.4" y="1077" width="0.2" height="15.0" fill="rgb(226,170,47)" rx="2" ry="2" />
<text  x="169.40" y="1087.5" ></text>
</g>
<g >
<title>alloc::string::String::split_off (6 samples, 0.02%)</title><rect x="611.1" y="645" width="0.3" height="15.0" fill="rgb(218,80,9)" rx="2" ry="2" />
<text  x="614.13" y="655.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.01%)</title><rect x="1065.5" y="837" width="0.2" height="15.0" fill="rgb(251,28,27)" rx="2" ry="2" />
<text  x="1068.55" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (20 samples, 0.06%)</title><rect x="224.8" y="581" width="0.8" height="15.0" fill="rgb(252,110,1)" rx="2" ry="2" />
<text  x="227.82" y="591.5" ></text>
</g>
<g >
<title>_&lt;core..pin..Pin&lt;P&gt; as core..future..future..Future&gt;::poll (168 samples, 0.53%)</title><rect x="211.5" y="645" width="6.3" height="15.0" fill="rgb(211,79,28)" rx="2" ry="2" />
<text  x="214.49" y="655.5" ></text>
</g>
<g >
<title>deno::file_fetcher::TextDocument::to_string (13 samples, 0.04%)</title><rect x="614.9" y="581" width="0.5" height="15.0" fill="rgb(213,31,8)" rx="2" ry="2" />
<text  x="617.92" y="591.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..StandardHeader as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="1000.9" y="757" width="0.2" height="15.0" fill="rgb(238,116,29)" rx="2" ry="2" />
<text  x="1003.90" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="201.8" y="1061" width="0.3" height="15.0" fill="rgb(238,172,26)" rx="2" ry="2" />
<text  x="204.84" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="546.7" y="149" width="0.2" height="15.0" fill="rgb(251,43,54)" rx="2" ry="2" />
<text  x="549.71" y="159.5" ></text>
</g>
<g >
<title>serde_json::de::from_str (29 samples, 0.09%)</title><rect x="266.3" y="629" width="1.1" height="15.0" fill="rgb(207,175,5)" rx="2" ry="2" />
<text  x="269.27" y="639.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="1186.0" y="869" width="0.3" height="15.0" fill="rgb(216,85,36)" rx="2" ry="2" />
<text  x="1189.02" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (4 samples, 0.01%)</title><rect x="293.0" y="245" width="0.2" height="15.0" fill="rgb(229,150,29)" rx="2" ry="2" />
<text  x="296.03" y="255.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as core..hash..Hash&gt;::hash (11 samples, 0.03%)</title><rect x="666.5" y="773" width="0.5" height="15.0" fill="rgb(248,127,47)" rx="2" ry="2" />
<text  x="669.54" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="213.5" y="421" width="0.2" height="15.0" fill="rgb(234,228,7)" rx="2" ry="2" />
<text  x="216.52" y="431.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (22 samples, 0.07%)</title><rect x="204.9" y="1045" width="0.8" height="15.0" fill="rgb(234,201,10)" rx="2" ry="2" />
<text  x="207.88" y="1055.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once::_{{closure}} (16 samples, 0.05%)</title><rect x="1086.6" y="805" width="0.6" height="15.0" fill="rgb(251,193,41)" rx="2" ry="2" />
<text  x="1089.65" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="660.4" y="837" width="0.1" height="15.0" fill="rgb(212,7,15)" rx="2" ry="2" />
<text  x="663.42" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="621.1" y="693" width="0.2" height="15.0" fill="rgb(234,207,48)" rx="2" ry="2" />
<text  x="624.12" y="703.5" ></text>
</g>
<g >
<title>_&lt;rustls..anchors..RootCertStore as core..clone..Clone&gt;::clone (2,382 samples, 7.58%)</title><rect x="668.8" y="837" width="89.4" height="15.0" fill="rgb(217,151,53)" rx="2" ry="2" />
<text  x="671.80" y="847.5" >_&lt;rustls....</text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="222.4" y="661" width="0.4" height="15.0" fill="rgb(218,33,8)" rx="2" ry="2" />
<text  x="225.42" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.02%)</title><rect x="241.0" y="645" width="0.3" height="15.0" fill="rgb(253,101,51)" rx="2" ry="2" />
<text  x="244.00" y="655.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="133.3" y="1045" width="0.1" height="15.0" fill="rgb(248,31,27)" rx="2" ry="2" />
<text  x="136.25" y="1055.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..raw..RawTable&lt;T&gt; as core..ops..drop..Drop&gt;::drop (12 samples, 0.04%)</title><rect x="225.1" y="469" width="0.5" height="15.0" fill="rgb(207,7,7)" rx="2" ry="2" />
<text  x="228.12" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.03%)</title><rect x="1091.9" y="645" width="0.4" height="15.0" fill="rgb(224,74,35)" rx="2" ry="2" />
<text  x="1094.94" y="655.5" ></text>
</g>
<g >
<title>_&lt;swc_ecma_ast..expr..ExprOrSuper as core..clone..Clone&gt;::clone (4 samples, 0.01%)</title><rect x="240.4" y="421" width="0.1" height="15.0" fill="rgb(238,53,24)" rx="2" ry="2" />
<text  x="243.36" y="431.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="999.1" y="805" width="0.1" height="15.0" fill="rgb(233,120,28)" rx="2" ry="2" />
<text  x="1002.10" y="815.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (11 samples, 0.03%)</title><rect x="571.9" y="453" width="0.4" height="15.0" fill="rgb(227,130,54)" rx="2" ry="2" />
<text  x="574.94" y="463.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..raw..RawTable&lt;T&gt; as core..ops..drop..Drop&gt;::drop (50 samples, 0.16%)</title><rect x="656.3" y="293" width="1.8" height="15.0" fill="rgb(207,190,3)" rx="2" ry="2" />
<text  x="659.26" y="303.5" ></text>
</g>
<g >
<title>deno::ops::io::init (46 samples, 0.15%)</title><rect x="1035.1" y="901" width="1.8" height="15.0" fill="rgb(212,192,44)" rx="2" ry="2" />
<text  x="1038.14" y="911.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="261.2" y="549" width="0.2" height="15.0" fill="rgb(209,60,23)" rx="2" ry="2" />
<text  x="264.20" y="559.5" ></text>
</g>
<g >
<title>serde::de::impls::_&lt;impl serde..de..Deserialize for alloc..string..String&gt;::deserialize (1,119 samples, 3.56%)</title><rect x="394.3" y="229" width="42.0" height="15.0" fill="rgb(234,35,6)" rx="2" ry="2" />
<text  x="397.32" y="239.5" >ser..</text>
</g>
<g >
<title>tokio::runtime::enter::Enter::block_on::_{{closure}} (4 samples, 0.01%)</title><rect x="198.9" y="1045" width="0.2" height="15.0" fill="rgb(248,112,41)" rx="2" ry="2" />
<text  x="201.91" y="1055.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..ser..MapKeySerializer as serde..ser..Serializer&gt;::serialize_str (117 samples, 0.37%)</title><rect x="1125.7" y="597" width="4.3" height="15.0" fill="rgb(238,43,28)" rx="2" ry="2" />
<text  x="1128.65" y="607.5" ></text>
</g>
<g >
<title>_&lt;serde_json..number..Number as serde..ser..Serialize&gt;::serialize (13 samples, 0.04%)</title><rect x="1123.5" y="549" width="0.5" height="15.0" fill="rgb(229,84,14)" rx="2" ry="2" />
<text  x="1126.47" y="559.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1055.7" y="789" width="0.2" height="15.0" fill="rgb(253,126,43)" rx="2" ry="2" />
<text  x="1058.75" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (19 samples, 0.06%)</title><rect x="667.6" y="693" width="0.7" height="15.0" fill="rgb(226,144,34)" rx="2" ry="2" />
<text  x="670.63" y="703.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.01%)</title><rect x="1062.2" y="837" width="0.1" height="15.0" fill="rgb(216,39,11)" rx="2" ry="2" />
<text  x="1065.17" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="614.7" y="437" width="0.2" height="15.0" fill="rgb(210,155,24)" rx="2" ry="2" />
<text  x="617.70" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="274.7" y="213" width="0.1" height="15.0" fill="rgb(234,182,1)" rx="2" ry="2" />
<text  x="277.71" y="223.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="142.3" y="1093" width="0.2" height="15.0" fill="rgb(238,186,38)" rx="2" ry="2" />
<text  x="145.26" y="1103.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="206.4" y="1093" width="0.2" height="15.0" fill="rgb(232,227,40)" rx="2" ry="2" />
<text  x="209.42" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (79 samples, 0.25%)</title><rect x="638.8" y="869" width="3.0" height="15.0" fill="rgb(244,147,11)" rx="2" ry="2" />
<text  x="641.84" y="879.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="97.0" y="1093" width="0.2" height="15.0" fill="rgb(205,83,47)" rx="2" ry="2" />
<text  x="99.99" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="216.1" y="501" width="0.2" height="15.0" fill="rgb(206,86,53)" rx="2" ry="2" />
<text  x="219.07" y="511.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="548.7" y="149" width="0.3" height="15.0" fill="rgb(229,168,9)" rx="2" ry="2" />
<text  x="551.70" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (3 samples, 0.01%)</title><rect x="82.0" y="1045" width="0.1" height="15.0" fill="rgb(252,148,38)" rx="2" ry="2" />
<text  x="85.01" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="192.0" y="1141" width="0.1" height="15.0" fill="rgb(242,168,1)" rx="2" ry="2" />
<text  x="194.97" y="1151.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="111.0" y="1109" width="0.3" height="15.0" fill="rgb(238,0,16)" rx="2" ry="2" />
<text  x="113.99" y="1119.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (26 samples, 0.08%)</title><rect x="289.2" y="341" width="1.0" height="15.0" fill="rgb(205,80,36)" rx="2" ry="2" />
<text  x="292.20" y="351.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (5 samples, 0.02%)</title><rect x="620.1" y="789" width="0.2" height="15.0" fill="rgb(238,189,49)" rx="2" ry="2" />
<text  x="623.10" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="587.0" y="661" width="0.1" height="15.0" fill="rgb(223,153,7)" rx="2" ry="2" />
<text  x="589.99" y="671.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="193.7" y="1109" width="0.2" height="15.0" fill="rgb(211,132,41)" rx="2" ry="2" />
<text  x="196.73" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="239.5" y="581" width="0.1" height="15.0" fill="rgb(210,183,16)" rx="2" ry="2" />
<text  x="242.54" y="591.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_subscripts (13 samples, 0.04%)</title><rect x="238.3" y="469" width="0.5" height="15.0" fill="rgb(209,123,38)" rx="2" ry="2" />
<text  x="241.33" y="479.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc..string..String,serde_json..value..Value&gt;::insert (121 samples, 0.38%)</title><rect x="1130.5" y="613" width="4.6" height="15.0" fill="rgb(229,115,21)" rx="2" ry="2" />
<text  x="1133.53" y="623.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="18.1" y="1061" width="0.2" height="15.0" fill="rgb(218,26,14)" rx="2" ry="2" />
<text  x="21.07" y="1071.5" ></text>
</g>
<g >
<title>_&lt;mio..poll..RegistrationInner as core..ops..drop..Drop&gt;::drop (6 samples, 0.02%)</title><rect x="201.9" y="1045" width="0.2" height="15.0" fill="rgb(221,89,36)" rx="2" ry="2" />
<text  x="204.88" y="1055.5" ></text>
</g>
<g >
<title>reqwest::async_impl::client::ClientBuilder::build (4,379 samples, 13.93%)</title><rect x="666.0" y="885" width="164.4" height="15.0" fill="rgb(246,189,9)" rx="2" ry="2" />
<text  x="668.98" y="895.5" >reqwest::async_impl::..</text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (28 samples, 0.09%)</title><rect x="999.4" y="837" width="1.0" height="15.0" fill="rgb(248,143,1)" rx="2" ry="2" />
<text  x="1002.40" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="179.8" y="1029" width="0.2" height="15.0" fill="rgb(217,148,41)" rx="2" ry="2" />
<text  x="182.77" y="1039.5" ></text>
</g>
<g >
<title>url::ParseOptions::parse (284 samples, 0.90%)</title><rect x="575.2" y="661" width="10.7" height="15.0" fill="rgb(242,52,25)" rx="2" ry="2" />
<text  x="578.20" y="671.5" ></text>
</g>
<g >
<title>_&lt;core..option..Option&lt;T&gt; as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="75.2" y="1061" width="0.3" height="15.0" fill="rgb(208,164,13)" rx="2" ry="2" />
<text  x="78.21" y="1071.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::get_index_of (18 samples, 0.06%)</title><rect x="545.4" y="229" width="0.7" height="15.0" fill="rgb(252,75,14)" rx="2" ry="2" />
<text  x="548.43" y="239.5" ></text>
</g>
<g >
<title>mio::poll::release_node (5 samples, 0.02%)</title><rect x="201.9" y="1029" width="0.2" height="15.0" fill="rgb(207,58,47)" rx="2" ry="2" />
<text  x="204.92" y="1039.5" ></text>
</g>
<g >
<title>deno::ops::permissions::init (71 samples, 0.23%)</title><rect x="1055.0" y="901" width="2.7" height="15.0" fill="rgb(240,142,43)" rx="2" ry="2" />
<text  x="1058.03" y="911.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_expr_or_spread (24 samples, 0.08%)</title><rect x="233.4" y="453" width="0.9" height="15.0" fill="rgb(205,100,12)" rx="2" ry="2" />
<text  x="236.38" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (134 samples, 0.43%)</title><rect x="254.0" y="229" width="5.0" height="15.0" fill="rgb(239,99,5)" rx="2" ry="2" />
<text  x="256.95" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1087.5" y="709" width="0.2" height="15.0" fill="rgb(254,51,45)" rx="2" ry="2" />
<text  x="1090.55" y="719.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::get2 (15 samples, 0.05%)</title><rect x="837.4" y="837" width="0.6" height="15.0" fill="rgb(216,166,18)" rx="2" ry="2" />
<text  x="840.40" y="847.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..SourceFile as core..clone..Clone&gt;::clone (19 samples, 0.06%)</title><rect x="262.6" y="629" width="0.7" height="15.0" fill="rgb(243,226,1)" rx="2" ry="2" />
<text  x="265.59" y="639.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (18 samples, 0.06%)</title><rect x="1069.7" y="837" width="0.7" height="15.0" fill="rgb(233,128,42)" rx="2" ry="2" />
<text  x="1072.71" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="658.9" y="837" width="0.3" height="15.0" fill="rgb(249,220,40)" rx="2" ry="2" />
<text  x="661.89" y="847.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="547.6" y="165" width="0.6" height="15.0" fill="rgb(243,125,48)" rx="2" ry="2" />
<text  x="550.57" y="175.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_token (6 samples, 0.02%)</title><rect x="238.6" y="357" width="0.2" height="15.0" fill="rgb(229,138,1)" rx="2" ry="2" />
<text  x="241.60" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="12.3" y="1077" width="0.4" height="15.0" fill="rgb(241,129,47)" rx="2" ry="2" />
<text  x="15.29" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="206.0" y="1061" width="0.2" height="15.0" fill="rgb(219,137,45)" rx="2" ry="2" />
<text  x="209.05" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize::_{{closure}} (6 samples, 0.02%)</title><rect x="1028.2" y="725" width="0.3" height="15.0" fill="rgb(234,89,53)" rx="2" ry="2" />
<text  x="1031.23" y="735.5" ></text>
</g>
<g >
<title>deno::worker::Worker::execute (2,164 samples, 6.88%)</title><rect x="1094.8" y="917" width="81.2" height="15.0" fill="rgb(213,32,9)" rx="2" ry="2" />
<text  x="1097.79" y="927.5" >deno::wor..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.01%)</title><rect x="161.4" y="1013" width="0.2" height="15.0" fill="rgb(221,19,5)" rx="2" ry="2" />
<text  x="164.45" y="1023.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="13.3" y="1125" width="0.3" height="15.0" fill="rgb(215,144,9)" rx="2" ry="2" />
<text  x="16.30" y="1135.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="104.2" y="1093" width="0.1" height="15.0" fill="rgb(233,130,30)" rx="2" ry="2" />
<text  x="107.16" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Enumerate&lt;I&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (3 samples, 0.01%)</title><rect x="1090.0" y="805" width="0.1" height="15.0" fill="rgb(211,132,34)" rx="2" ry="2" />
<text  x="1093.02" y="815.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (10 samples, 0.03%)</title><rect x="1004.4" y="853" width="0.3" height="15.0" fill="rgb(220,193,16)" rx="2" ry="2" />
<text  x="1007.35" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="260.5" y="469" width="0.1" height="15.0" fill="rgb(230,120,5)" rx="2" ry="2" />
<text  x="263.52" y="479.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping (4 samples, 0.01%)</title><rect x="86.7" y="1045" width="0.1" height="15.0" fill="rgb(206,171,11)" rx="2" ry="2" />
<text  x="89.66" y="1055.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (222 samples, 0.71%)</title><rect x="169.0" y="1093" width="8.4" height="15.0" fill="rgb(238,159,9)" rx="2" ry="2" />
<text  x="172.03" y="1103.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (54 samples, 0.17%)</title><rect x="1187.3" y="853" width="2.0" height="15.0" fill="rgb(253,40,12)" rx="2" ry="2" />
<text  x="1190.26" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="1036.0" y="805" width="0.5" height="15.0" fill="rgb(209,30,26)" rx="2" ry="2" />
<text  x="1039.00" y="815.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (60 samples, 0.19%)</title><rect x="134.3" y="1125" width="2.3" height="15.0" fill="rgb(250,171,31)" rx="2" ry="2" />
<text  x="137.30" y="1135.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (6 samples, 0.02%)</title><rect x="287.2" y="389" width="0.2" height="15.0" fill="rgb(213,114,6)" rx="2" ry="2" />
<text  x="290.18" y="399.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="1054.8" y="693" width="0.1" height="15.0" fill="rgb(228,208,45)" rx="2" ry="2" />
<text  x="1057.81" y="703.5" ></text>
</g>
<g >
<title>_&lt;alloc..collections..btree..map..IntoIter&lt;K,V&gt; as core..ops..drop..Drop&gt;::drop (5 samples, 0.02%)</title><rect x="23.0" y="949" width="0.2" height="15.0" fill="rgb(243,75,44)" rx="2" ry="2" />
<text  x="26.03" y="959.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (11 samples, 0.03%)</title><rect x="190.6" y="1093" width="0.4" height="15.0" fill="rgb(214,161,49)" rx="2" ry="2" />
<text  x="193.58" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (217 samples, 0.69%)</title><rect x="371.9" y="149" width="8.2" height="15.0" fill="rgb(245,73,17)" rx="2" ry="2" />
<text  x="374.95" y="159.5" ></text>
</g>
<g >
<title>http::header::map::hash_elem_using (13 samples, 0.04%)</title><rect x="830.7" y="821" width="0.5" height="15.0" fill="rgb(217,194,8)" rx="2" ry="2" />
<text  x="833.72" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.03%)</title><rect x="64.8" y="1093" width="0.3" height="15.0" fill="rgb(237,32,20)" rx="2" ry="2" />
<text  x="67.77" y="1103.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::TokenContexts::push (6 samples, 0.02%)</title><rect x="237.8" y="309" width="0.3" height="15.0" fill="rgb(235,46,13)" rx="2" ry="2" />
<text  x="240.85" y="319.5" ></text>
</g>
<g >
<title>clap::app::App::arg (29 samples, 0.09%)</title><rect x="141.4" y="1141" width="1.1" height="15.0" fill="rgb(240,209,13)" rx="2" ry="2" />
<text  x="144.36" y="1151.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..StandardHeader as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="837.6" y="741" width="0.2" height="15.0" fill="rgb(253,82,37)" rx="2" ry="2" />
<text  x="840.63" y="751.5" ></text>
</g>
<g >
<title>clap::app::App::arg (198 samples, 0.63%)</title><rect x="120.1" y="1141" width="7.4" height="15.0" fill="rgb(205,152,12)" rx="2" ry="2" />
<text  x="123.11" y="1151.5" ></text>
</g>
<g >
<title>alloc::string::String::split_off (6 samples, 0.02%)</title><rect x="633.0" y="709" width="0.2" height="15.0" fill="rgb(227,121,18)" rx="2" ry="2" />
<text  x="636.02" y="719.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (56 samples, 0.18%)</title><rect x="122.0" y="1077" width="2.1" height="15.0" fill="rgb(219,156,48)" rx="2" ry="2" />
<text  x="124.95" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (18 samples, 0.06%)</title><rect x="1115.7" y="661" width="0.7" height="15.0" fill="rgb(252,75,38)" rx="2" ry="2" />
<text  x="1118.70" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="195.7" y="1077" width="0.1" height="15.0" fill="rgb(220,159,41)" rx="2" ry="2" />
<text  x="198.72" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (18 samples, 0.06%)</title><rect x="224.9" y="549" width="0.7" height="15.0" fill="rgb(208,185,33)" rx="2" ry="2" />
<text  x="227.89" y="559.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (5 samples, 0.02%)</title><rect x="1034.3" y="853" width="0.2" height="15.0" fill="rgb(236,8,53)" rx="2" ry="2" />
<text  x="1037.27" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (309 samples, 0.98%)</title><rect x="309.3" y="245" width="11.6" height="15.0" fill="rgb(243,164,49)" rx="2" ry="2" />
<text  x="312.33" y="255.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="155.9" y="1093" width="0.2" height="15.0" fill="rgb(212,227,23)" rx="2" ry="2" />
<text  x="158.85" y="1103.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.03%)</title><rect x="99.9" y="1125" width="0.4" height="15.0" fill="rgb(217,23,9)" rx="2" ry="2" />
<text  x="102.91" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="241.1" y="597" width="0.2" height="15.0" fill="rgb(251,145,41)" rx="2" ry="2" />
<text  x="244.11" y="607.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (8 samples, 0.03%)</title><rect x="190.2" y="1029" width="0.3" height="15.0" fill="rgb(240,99,16)" rx="2" ry="2" />
<text  x="193.17" y="1039.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (84 samples, 0.27%)</title><rect x="35.8" y="1029" width="3.1" height="15.0" fill="rgb(230,35,7)" rx="2" ry="2" />
<text  x="38.75" y="1039.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (8 samples, 0.03%)</title><rect x="160.4" y="1045" width="0.3" height="15.0" fill="rgb(228,220,27)" rx="2" ry="2" />
<text  x="163.43" y="1055.5" ></text>
</g>
<g >
<title>swc_ecma_visit::Visit::visit_module_items (21 samples, 0.07%)</title><rect x="239.9" y="629" width="0.8" height="15.0" fill="rgb(218,74,22)" rx="2" ry="2" />
<text  x="242.87" y="639.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (12 samples, 0.04%)</title><rect x="622.4" y="805" width="0.4" height="15.0" fill="rgb(242,122,28)" rx="2" ry="2" />
<text  x="625.36" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (31 samples, 0.10%)</title><rect x="71.7" y="949" width="1.1" height="15.0" fill="rgb(223,141,33)" rx="2" ry="2" />
<text  x="74.68" y="959.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (33 samples, 0.10%)</title><rect x="92.7" y="1045" width="1.3" height="15.0" fill="rgb(234,30,5)" rx="2" ry="2" />
<text  x="95.74" y="1055.5" ></text>
</g>
<g >
<title>core::alloc::layout::Layout::array (3 samples, 0.01%)</title><rect x="998.2" y="741" width="0.1" height="15.0" fill="rgb(234,101,19)" rx="2" ry="2" />
<text  x="1001.23" y="751.5" ></text>
</g>
<g >
<title>_&lt;serde_json..ser..Compound&lt;W,F&gt; as serde..ser..SerializeMap&gt;::serialize_key (91 samples, 0.29%)</title><rect x="1118.7" y="581" width="3.4" height="15.0" fill="rgb(224,48,48)" rx="2" ry="2" />
<text  x="1121.71" y="591.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (15 samples, 0.05%)</title><rect x="1060.9" y="853" width="0.5" height="15.0" fill="rgb(252,194,31)" rx="2" ry="2" />
<text  x="1063.85" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="222.6" y="581" width="0.2" height="15.0" fill="rgb(218,218,24)" rx="2" ry="2" />
<text  x="225.60" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (8 samples, 0.03%)</title><rect x="261.5" y="613" width="0.3" height="15.0" fill="rgb(237,132,30)" rx="2" ry="2" />
<text  x="264.46" y="623.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::new_handle_scope_data_with_context (4 samples, 0.01%)</title><rect x="1179.4" y="869" width="0.1" height="15.0" fill="rgb(224,71,20)" rx="2" ry="2" />
<text  x="1182.38" y="879.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::with_buf (31 samples, 0.10%)</title><rect x="234.5" y="341" width="1.2" height="15.0" fill="rgb(246,220,10)" rx="2" ry="2" />
<text  x="237.54" y="351.5" ></text>
</g>
<g >
<title>deno::ops::timers::init (72 samples, 0.23%)</title><rect x="1073.7" y="901" width="2.7" height="15.0" fill="rgb(214,76,19)" rx="2" ry="2" />
<text  x="1076.69" y="911.5" ></text>
</g>
<g >
<title>_&lt;deno_core..module_specifier..ModuleSpecifier as core..fmt..Display&gt;::fmt (12 samples, 0.04%)</title><rect x="587.6" y="661" width="0.4" height="15.0" fill="rgb(216,160,15)" rx="2" ry="2" />
<text  x="590.59" y="671.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::requires (6 samples, 0.02%)</title><rect x="118.6" y="1141" width="0.2" height="15.0" fill="rgb(250,64,5)" rx="2" ry="2" />
<text  x="121.57" y="1151.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (113 samples, 0.36%)</title><rect x="603.9" y="629" width="4.3" height="15.0" fill="rgb(221,98,25)" rx="2" ry="2" />
<text  x="606.92" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="18.6" y="901" width="0.2" height="15.0" fill="rgb(224,148,33)" rx="2" ry="2" />
<text  x="21.63" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.02%)</title><rect x="760.0" y="789" width="0.3" height="15.0" fill="rgb(237,151,49)" rx="2" ry="2" />
<text  x="763.03" y="799.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="191.1" y="1109" width="0.4" height="15.0" fill="rgb(216,99,41)" rx="2" ry="2" />
<text  x="194.14" y="1119.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="548.7" y="165" width="0.3" height="15.0" fill="rgb(205,155,51)" rx="2" ry="2" />
<text  x="551.66" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.01%)</title><rect x="73.9" y="1029" width="0.2" height="15.0" fill="rgb(228,189,23)" rx="2" ry="2" />
<text  x="76.93" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="201.7" y="997" width="0.1" height="15.0" fill="rgb(227,5,40)" rx="2" ry="2" />
<text  x="204.65" y="1007.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as core..fmt..Display&gt;::fmt (13 samples, 0.04%)</title><rect x="262.1" y="613" width="0.4" height="15.0" fill="rgb(222,27,15)" rx="2" ry="2" />
<text  x="265.06" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="177.9" y="1029" width="0.1" height="15.0" fill="rgb(225,114,46)" rx="2" ry="2" />
<text  x="180.89" y="1039.5" ></text>
</g>
<g >
<title>deno::worker::Worker::preload_module::_{{closure}} (11,302 samples, 35.96%)</title><rect x="210.3" y="885" width="424.3" height="15.0" fill="rgb(232,179,25)" rx="2" ry="2" />
<text  x="213.29" y="895.5" >deno::worker::Worker::preload_module::_{{closure}}</text>
</g>
<g >
<title>_&lt;deno_core..module_specifier..ModuleSpecifier as core..fmt..Display&gt;::fmt (12 samples, 0.04%)</title><rect x="210.5" y="789" width="0.5" height="15.0" fill="rgb(244,228,12)" rx="2" ry="2" />
<text  x="213.51" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="114.6" y="1125" width="0.2" height="15.0" fill="rgb(217,22,5)" rx="2" ry="2" />
<text  x="117.59" y="1135.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (42 samples, 0.13%)</title><rect x="1064.1" y="885" width="1.6" height="15.0" fill="rgb(226,66,37)" rx="2" ry="2" />
<text  x="1067.12" y="895.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::drop (316 samples, 1.01%)</title><rect x="647.0" y="757" width="11.9" height="15.0" fill="rgb(230,61,19)" rx="2" ry="2" />
<text  x="650.02" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="635.1" y="837" width="0.2" height="15.0" fill="rgb(228,84,48)" rx="2" ry="2" />
<text  x="638.12" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="195.1" y="1077" width="0.2" height="15.0" fill="rgb(212,206,23)" rx="2" ry="2" />
<text  x="198.08" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (260 samples, 0.83%)</title><rect x="370.3" y="165" width="9.8" height="15.0" fill="rgb(222,173,15)" rx="2" ry="2" />
<text  x="373.33" y="175.5" ></text>
</g>
<g >
<title>deno::deno_dir::DenoDir::new (8 samples, 0.03%)</title><rect x="662.6" y="917" width="0.3" height="15.0" fill="rgb(211,75,33)" rx="2" ry="2" />
<text  x="665.64" y="927.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="75.3" y="1013" width="0.2" height="15.0" fill="rgb(245,115,47)" rx="2" ry="2" />
<text  x="78.32" y="1023.5" ></text>
</g>
<g >
<title>deno::flags::config_arg (10 samples, 0.03%)</title><rect x="97.2" y="1141" width="0.4" height="15.0" fill="rgb(251,76,1)" rx="2" ry="2" />
<text  x="100.21" y="1151.5" ></text>
</g>
<g >
<title>clap::app::App::get_matches_from_safe_borrow (1,397 samples, 4.44%)</title><rect x="13.1" y="1157" width="52.4" height="15.0" fill="rgb(253,32,52)" rx="2" ry="2" />
<text  x="16.08" y="1167.5" >clap:..</text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (93 samples, 0.30%)</title><rect x="1082.5" y="885" width="3.5" height="15.0" fill="rgb(207,108,19)" rx="2" ry="2" />
<text  x="1085.48" y="895.5" ></text>
</g>
<g >
<title>_&lt;serde_json..ser..Compound&lt;W,F&gt; as serde..ser..SerializeMap&gt;::serialize_value (52 samples, 0.17%)</title><rect x="1122.1" y="581" width="2.0" height="15.0" fill="rgb(208,160,21)" rx="2" ry="2" />
<text  x="1125.12" y="591.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner (24 samples, 0.08%)</title><rect x="236.7" y="389" width="0.9" height="15.0" fill="rgb(233,0,44)" rx="2" ry="2" />
<text  x="239.72" y="399.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_lhs_expr (152 samples, 0.48%)</title><rect x="233.1" y="485" width="5.7" height="15.0" fill="rgb(212,175,29)" rx="2" ry="2" />
<text  x="236.12" y="495.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="114.9" y="1109" width="0.3" height="15.0" fill="rgb(238,220,34)" rx="2" ry="2" />
<text  x="117.86" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="111.5" y="1093" width="0.2" height="15.0" fill="rgb(208,161,52)" rx="2" ry="2" />
<text  x="114.52" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (10,087 samples, 32.09%)</title><rect x="211.1" y="789" width="378.7" height="15.0" fill="rgb(211,53,47)" rx="2" ry="2" />
<text  x="214.08" y="799.5" >_&lt;core..future..from_generator..GenFuture&lt;T&gt; as cor..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="623.6" y="597" width="0.2" height="15.0" fill="rgb(252,160,23)" rx="2" ry="2" />
<text  x="626.63" y="607.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::find (13 samples, 0.04%)</title><rect x="666.5" y="805" width="0.5" height="15.0" fill="rgb(242,78,51)" rx="2" ry="2" />
<text  x="669.47" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1094.1" y="517" width="0.1" height="15.0" fill="rgb(251,94,33)" rx="2" ry="2" />
<text  x="1097.12" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="110.7" y="1029" width="0.2" height="15.0" fill="rgb(227,8,38)" rx="2" ry="2" />
<text  x="113.69" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="154.1" y="1029" width="0.1" height="15.0" fill="rgb(228,88,45)" rx="2" ry="2" />
<text  x="157.05" y="1039.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (74 samples, 0.24%)</title><rect x="1058.6" y="885" width="2.8" height="15.0" fill="rgb(233,133,45)" rx="2" ry="2" />
<text  x="1061.64" y="895.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="633.7" y="741" width="0.2" height="15.0" fill="rgb(236,127,47)" rx="2" ry="2" />
<text  x="636.73" y="751.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (5 samples, 0.02%)</title><rect x="590.6" y="645" width="0.2" height="15.0" fill="rgb(218,44,21)" rx="2" ry="2" />
<text  x="593.60" y="655.5" ></text>
</g>
<g >
<title>unicode_xid::tables::derived_property::XID_Start (3 samples, 0.01%)</title><rect x="238.2" y="277" width="0.1" height="15.0" fill="rgb(228,119,23)" rx="2" ry="2" />
<text  x="241.22" y="287.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="111.6" y="1077" width="0.1" height="15.0" fill="rgb(206,68,47)" rx="2" ry="2" />
<text  x="114.55" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="620.3" y="789" width="0.4" height="15.0" fill="rgb(236,97,5)" rx="2" ry="2" />
<text  x="623.33" y="799.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="834.8" y="773" width="0.2" height="15.0" fill="rgb(243,3,46)" rx="2" ry="2" />
<text  x="837.77" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="1189.3" y="853" width="0.2" height="15.0" fill="rgb(219,175,22)" rx="2" ry="2" />
<text  x="1192.32" y="863.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="210.7" y="709" width="0.3" height="15.0" fill="rgb(212,146,41)" rx="2" ry="2" />
<text  x="213.70" y="719.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (6 samples, 0.02%)</title><rect x="1134.3" y="501" width="0.2" height="15.0" fill="rgb(220,136,26)" rx="2" ry="2" />
<text  x="1137.29" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1058.3" y="757" width="0.1" height="15.0" fill="rgb(220,92,39)" rx="2" ry="2" />
<text  x="1061.26" y="767.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::reserve_one (12 samples, 0.04%)</title><rect x="664.0" y="837" width="0.4" height="15.0" fill="rgb(235,157,22)" rx="2" ry="2" />
<text  x="666.99" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="1070.4" y="853" width="0.2" height="15.0" fill="rgb(251,69,21)" rx="2" ry="2" />
<text  x="1073.39" y="863.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for alloc..vec..Vec&lt;T&gt;&gt;::serialize (7 samples, 0.02%)</title><rect x="1137.7" y="549" width="0.2" height="15.0" fill="rgb(224,17,42)" rx="2" ry="2" />
<text  x="1140.67" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="1177.9" y="837" width="0.2" height="15.0" fill="rgb(240,142,32)" rx="2" ry="2" />
<text  x="1180.95" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (8 samples, 0.03%)</title><rect x="239.3" y="613" width="0.3" height="15.0" fill="rgb(244,225,36)" rx="2" ry="2" />
<text  x="242.35" y="623.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (108 samples, 0.34%)</title><rect x="145.2" y="1077" width="4.1" height="15.0" fill="rgb(250,140,39)" rx="2" ry="2" />
<text  x="148.23" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (10 samples, 0.03%)</title><rect x="569.8" y="293" width="0.4" height="15.0" fill="rgb(230,83,6)" rx="2" ry="2" />
<text  x="572.83" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="89.2" y="1061" width="0.1" height="15.0" fill="rgb(222,198,18)" rx="2" ry="2" />
<text  x="92.18" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="649.0" y="485" width="0.2" height="15.0" fill="rgb(244,221,31)" rx="2" ry="2" />
<text  x="652.05" y="495.5" ></text>
</g>
<g >
<title>clap::app::App::arg (86 samples, 0.27%)</title><rect x="115.3" y="1141" width="3.3" height="15.0" fill="rgb(216,181,8)" rx="2" ry="2" />
<text  x="118.34" y="1151.5" ></text>
</g>
<g >
<title>_&lt;deno..disk_cache..DiskCache as core..clone..Clone&gt;::clone (11 samples, 0.03%)</title><rect x="659.8" y="917" width="0.4" height="15.0" fill="rgb(245,86,39)" rx="2" ry="2" />
<text  x="662.79" y="927.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="629.8" y="597" width="0.2" height="15.0" fill="rgb(221,193,18)" rx="2" ry="2" />
<text  x="632.79" y="607.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (128 samples, 0.41%)</title><rect x="52.7" y="1077" width="4.8" height="15.0" fill="rgb(235,145,51)" rx="2" ry="2" />
<text  x="55.69" y="1087.5" ></text>
</g>
<g >
<title>_&lt;&lt;alloc..vec..IntoIter&lt;T&gt; as core..ops..drop..Drop&gt;..drop..DropGuard&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="65.4" y="1077" width="0.1" height="15.0" fill="rgb(220,180,35)" rx="2" ry="2" />
<text  x="68.38" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (18 samples, 0.06%)</title><rect x="189.8" y="1077" width="0.7" height="15.0" fill="rgb(220,181,43)" rx="2" ry="2" />
<text  x="192.79" y="1087.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::get_root_mut (3 samples, 0.01%)</title><rect x="1096.0" y="805" width="0.1" height="15.0" fill="rgb(215,51,21)" rx="2" ry="2" />
<text  x="1098.96" y="815.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next::_{{closure}} (20 samples, 0.06%)</title><rect x="236.9" y="325" width="0.7" height="15.0" fill="rgb(254,121,38)" rx="2" ry="2" />
<text  x="239.87" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (12 samples, 0.04%)</title><rect x="73.7" y="1125" width="0.5" height="15.0" fill="rgb(240,193,31)" rx="2" ry="2" />
<text  x="76.71" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="1112.6" y="485" width="0.2" height="15.0" fill="rgb(206,219,11)" rx="2" ry="2" />
<text  x="1115.59" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve_exact (172 samples, 0.55%)</title><rect x="539.0" y="197" width="6.4" height="15.0" fill="rgb(249,158,36)" rx="2" ry="2" />
<text  x="541.97" y="207.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (21 samples, 0.07%)</title><rect x="1072.4" y="805" width="0.8" height="15.0" fill="rgb(212,194,37)" rx="2" ry="2" />
<text  x="1075.42" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="219.2" y="549" width="0.2" height="15.0" fill="rgb(236,40,36)" rx="2" ry="2" />
<text  x="222.19" y="559.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::stmt::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_stmt_internal (170 samples, 0.54%)</title><rect x="232.9" y="597" width="6.3" height="15.0" fill="rgb(226,88,23)" rx="2" ry="2" />
<text  x="235.85" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1180.9" y="805" width="0.1" height="15.0" fill="rgb(236,24,26)" rx="2" ry="2" />
<text  x="1183.88" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (173 samples, 0.55%)</title><rect x="463.7" y="85" width="6.5" height="15.0" fill="rgb(212,201,36)" rx="2" ry="2" />
<text  x="466.66" y="95.5" ></text>
</g>
<g >
<title>url::Url::parse (277 samples, 0.88%)</title><rect x="601.1" y="741" width="10.4" height="15.0" fill="rgb(221,221,51)" rx="2" ry="2" />
<text  x="604.07" y="751.5" ></text>
</g>
<g >
<title>phf_shared::hash (3 samples, 0.01%)</title><rect x="235.1" y="261" width="0.1" height="15.0" fill="rgb(240,24,25)" rx="2" ry="2" />
<text  x="238.11" y="271.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (23 samples, 0.07%)</title><rect x="829.5" y="805" width="0.9" height="15.0" fill="rgb(226,165,49)" rx="2" ry="2" />
<text  x="832.52" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1070.5" y="821" width="0.1" height="15.0" fill="rgb(239,132,13)" rx="2" ry="2" />
<text  x="1073.46" y="831.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (48 samples, 0.15%)</title><rect x="1039.2" y="821" width="1.8" height="15.0" fill="rgb(222,214,48)" rx="2" ry="2" />
<text  x="1042.15" y="831.5" ></text>
</g>
<g >
<title>serde::de::impls::_&lt;impl serde..de..Deserialize for alloc..string..String&gt;::deserialize (26 samples, 0.08%)</title><rect x="547.2" y="245" width="1.0" height="15.0" fill="rgb(208,80,17)" rx="2" ry="2" />
<text  x="550.20" y="255.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="186.5" y="997" width="0.3" height="15.0" fill="rgb(206,0,47)" rx="2" ry="2" />
<text  x="189.49" y="1007.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="600.7" y="629" width="0.3" height="15.0" fill="rgb(235,55,54)" rx="2" ry="2" />
<text  x="603.73" y="639.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (8 samples, 0.03%)</title><rect x="660.7" y="821" width="0.3" height="15.0" fill="rgb(217,195,16)" rx="2" ry="2" />
<text  x="663.73" y="831.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for std..path..Path&gt;::serialize (11 samples, 0.03%)</title><rect x="1112.4" y="565" width="0.4" height="15.0" fill="rgb(247,211,2)" rx="2" ry="2" />
<text  x="1115.40" y="575.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="836.3" y="741" width="0.2" height="15.0" fill="rgb(251,227,43)" rx="2" ry="2" />
<text  x="839.31" y="751.5" ></text>
</g>
<g >
<title>rusty_v8::scope::CallbackScope::new (3 samples, 0.01%)</title><rect x="1173.1" y="789" width="0.1" height="15.0" fill="rgb(213,145,26)" rx="2" ry="2" />
<text  x="1176.11" y="799.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="623.4" y="677" width="0.4" height="15.0" fill="rgb(237,79,42)" rx="2" ry="2" />
<text  x="626.45" y="687.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3 samples, 0.01%)</title><rect x="199.7" y="1109" width="0.1" height="15.0" fill="rgb(220,158,5)" rx="2" ry="2" />
<text  x="202.66" y="1119.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (34 samples, 0.11%)</title><rect x="59.6" y="1061" width="1.2" height="15.0" fill="rgb(251,187,19)" rx="2" ry="2" />
<text  x="62.56" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="261.5" y="597" width="0.2" height="15.0" fill="rgb(242,180,16)" rx="2" ry="2" />
<text  x="264.50" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="262.8" y="549" width="0.1" height="15.0" fill="rgb(235,92,48)" rx="2" ry="2" />
<text  x="265.77" y="559.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (26 samples, 0.08%)</title><rect x="108.8" y="1077" width="1.0" height="15.0" fill="rgb(242,42,5)" rx="2" ry="2" />
<text  x="111.85" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::cmp (4 samples, 0.01%)</title><rect x="224.2" y="581" width="0.2" height="15.0" fill="rgb(254,62,36)" rx="2" ry="2" />
<text  x="227.22" y="591.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (119 samples, 0.38%)</title><rect x="68.4" y="1029" width="4.4" height="15.0" fill="rgb(223,56,10)" rx="2" ry="2" />
<text  x="71.38" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="222.2" y="453" width="0.2" height="15.0" fill="rgb(208,5,7)" rx="2" ry="2" />
<text  x="225.23" y="463.5" ></text>
</g>
<g >
<title>serde::de::SeqAccess::next_element (708 samples, 2.25%)</title><rect x="294.4" y="389" width="26.6" height="15.0" fill="rgb(247,72,14)" rx="2" ry="2" />
<text  x="297.38" y="399.5" >s..</text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="228.2" y="645" width="0.4" height="15.0" fill="rgb(226,183,1)" rx="2" ry="2" />
<text  x="231.23" y="655.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (5 samples, 0.02%)</title><rect x="140.5" y="1093" width="0.1" height="15.0" fill="rgb(254,174,44)" rx="2" ry="2" />
<text  x="143.46" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="115.0" y="1045" width="0.2" height="15.0" fill="rgb(219,85,52)" rx="2" ry="2" />
<text  x="118.01" y="1055.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (17 samples, 0.05%)</title><rect x="1093.6" y="677" width="0.6" height="15.0" fill="rgb(247,229,10)" rx="2" ry="2" />
<text  x="1096.59" y="687.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (2,373 samples, 7.55%)</title><rect x="840.0" y="757" width="89.0" height="15.0" fill="rgb(223,222,30)" rx="2" ry="2" />
<text  x="842.95" y="767.5" >_&lt;alloc..v..</text>
</g>
<g >
<title>deno::file_fetcher::SourceFileCache::get (30 samples, 0.10%)</title><rect x="588.0" y="709" width="1.2" height="15.0" fill="rgb(236,181,3)" rx="2" ry="2" />
<text  x="591.04" y="719.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::enter::_{{closure}} (26,176 samples, 83.28%)</title><rect x="207.0" y="1077" width="982.7" height="15.0" fill="rgb(231,98,13)" rx="2" ry="2" />
<text  x="209.99" y="1087.5" >tokio::runtime::basic_scheduler::enter::_{{closure}}</text>
</g>
<g >
<title>deno::colors::use_color (4 samples, 0.01%)</title><rect x="1106.7" y="629" width="0.2" height="15.0" fill="rgb(214,176,41)" rx="2" ry="2" />
<text  x="1109.73" y="639.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="119.1" y="1029" width="0.1" height="15.0" fill="rgb(231,15,4)" rx="2" ry="2" />
<text  x="122.06" y="1039.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (18 samples, 0.06%)</title><rect x="1035.9" y="837" width="0.6" height="15.0" fill="rgb(233,219,54)" rx="2" ry="2" />
<text  x="1038.85" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (8 samples, 0.03%)</title><rect x="1106.4" y="613" width="0.3" height="15.0" fill="rgb(244,153,2)" rx="2" ry="2" />
<text  x="1109.43" y="623.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (354 samples, 1.13%)</title><rect x="245.7" y="309" width="13.3" height="15.0" fill="rgb(209,94,42)" rx="2" ry="2" />
<text  x="248.69" y="319.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="19.8" y="853" width="0.1" height="15.0" fill="rgb(247,150,19)" rx="2" ry="2" />
<text  x="22.76" y="863.5" ></text>
</g>
<g >
<title>unicode_xid::tables::bsearch_range_table (3 samples, 0.01%)</title><rect x="237.5" y="149" width="0.1" height="15.0" fill="rgb(215,216,54)" rx="2" ry="2" />
<text  x="240.51" y="159.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for std..path..PathBuf&gt;::serialize (12 samples, 0.04%)</title><rect x="1112.4" y="581" width="0.4" height="15.0" fill="rgb(206,81,8)" rx="2" ry="2" />
<text  x="1115.36" y="591.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (6 samples, 0.02%)</title><rect x="1034.2" y="869" width="0.3" height="15.0" fill="rgb(242,176,20)" rx="2" ry="2" />
<text  x="1037.24" y="879.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (647 samples, 2.06%)</title><rect x="472.0" y="277" width="24.3" height="15.0" fill="rgb(241,37,54)" rx="2" ry="2" />
<text  x="475.04" y="287.5" >_..</text>
</g>
<g >
<title>serde_json::ser::Formatter::write_u32 (10 samples, 0.03%)</title><rect x="1170.6" y="549" width="0.4" height="15.0" fill="rgb(207,204,38)" rx="2" ry="2" />
<text  x="1173.63" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="97.1" y="1061" width="0.1" height="15.0" fill="rgb(239,112,29)" rx="2" ry="2" />
<text  x="100.06" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (278 samples, 0.88%)</title><rect x="747.0" y="517" width="10.5" height="15.0" fill="rgb(223,103,26)" rx="2" ry="2" />
<text  x="750.04" y="527.5" ></text>
</g>
<g >
<title>_&lt;deno..flags..Flags as core..clone..Clone&gt;::clone (42 samples, 0.13%)</title><rect x="637.0" y="933" width="1.6" height="15.0" fill="rgb(229,54,3)" rx="2" ry="2" />
<text  x="640.04" y="943.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="1185.6" y="837" width="0.3" height="15.0" fill="rgb(221,97,29)" rx="2" ry="2" />
<text  x="1188.65" y="847.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_string (1,033 samples, 3.29%)</title><rect x="397.6" y="213" width="38.7" height="15.0" fill="rgb(217,157,5)" rx="2" ry="2" />
<text  x="400.55" y="223.5" >_&lt;s..</text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="188.2" y="1029" width="0.2" height="15.0" fill="rgb(221,58,50)" rx="2" ry="2" />
<text  x="191.18" y="1039.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (144 samples, 0.46%)</title><rect x="1049.6" y="805" width="5.4" height="15.0" fill="rgb(223,190,33)" rx="2" ry="2" />
<text  x="1052.63" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="1121.9" y="437" width="0.2" height="15.0" fill="rgb(217,94,29)" rx="2" ry="2" />
<text  x="1124.90" y="447.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (53 samples, 0.17%)</title><rect x="643.0" y="661" width="2.0" height="15.0" fill="rgb(247,11,34)" rx="2" ry="2" />
<text  x="646.00" y="671.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="659.9" y="853" width="0.3" height="15.0" fill="rgb(251,192,8)" rx="2" ry="2" />
<text  x="662.94" y="863.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping (4 samples, 0.01%)</title><rect x="103.9" y="1045" width="0.1" height="15.0" fill="rgb(252,161,53)" rx="2" ry="2" />
<text  x="106.89" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="20.1" y="885" width="0.1" height="15.0" fill="rgb(229,81,54)" rx="2" ry="2" />
<text  x="23.06" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53 samples, 0.17%)</title><rect x="1021.8" y="725" width="2.0" height="15.0" fill="rgb(220,175,47)" rx="2" ry="2" />
<text  x="1024.77" y="735.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="20.5" y="917" width="0.2" height="15.0" fill="rgb(212,156,43)" rx="2" ry="2" />
<text  x="23.47" y="927.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (372 samples, 1.18%)</title><rect x="245.0" y="421" width="14.0" height="15.0" fill="rgb(252,207,14)" rx="2" ry="2" />
<text  x="248.02" y="431.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Cloned&lt;I&gt; as core..iter..traits..iterator..Iterator&gt;::fold (21 samples, 0.07%)</title><rect x="999.7" y="789" width="0.7" height="15.0" fill="rgb(213,198,42)" rx="2" ry="2" />
<text  x="1002.66" y="799.5" ></text>
</g>
<g >
<title>clap::app::usage::create_help_usage::_{{closure}} (9 samples, 0.03%)</title><rect x="18.4" y="981" width="0.4" height="15.0" fill="rgb(251,159,41)" rx="2" ry="2" />
<text  x="21.45" y="991.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_fold::_{{closure}} (18 samples, 0.06%)</title><rect x="999.8" y="741" width="0.6" height="15.0" fill="rgb(219,104,14)" rx="2" ry="2" />
<text  x="1002.77" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="1189.8" y="1253" width="0.2" height="15.0" fill="rgb(248,197,40)" rx="2" ry="2" />
<text  x="1192.81" y="1263.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="587.0" y="677" width="0.1" height="15.0" fill="rgb(237,93,16)" rx="2" ry="2" />
<text  x="589.95" y="687.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (20 samples, 0.06%)</title><rect x="667.6" y="709" width="0.7" height="15.0" fill="rgb(216,156,19)" rx="2" ry="2" />
<text  x="670.60" y="719.5" ></text>
</g>
<g >
<title>_&lt;deno..http_cache..HttpCache as core..clone..Clone&gt;::clone (11 samples, 0.03%)</title><rect x="218.4" y="661" width="0.4" height="15.0" fill="rgb(222,121,47)" rx="2" ry="2" />
<text  x="221.40" y="671.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="142.6" y="1061" width="0.3" height="15.0" fill="rgb(226,115,1)" rx="2" ry="2" />
<text  x="145.64" y="1071.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.03%)</title><rect x="588.8" y="693" width="0.4" height="15.0" fill="rgb(213,56,33)" rx="2" ry="2" />
<text  x="591.79" y="703.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (45 samples, 0.14%)</title><rect x="1090.6" y="757" width="1.7" height="15.0" fill="rgb(210,174,48)" rx="2" ry="2" />
<text  x="1093.62" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="644.8" y="485" width="0.2" height="15.0" fill="rgb(240,70,6)" rx="2" ry="2" />
<text  x="647.84" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1186.7" y="821" width="0.2" height="15.0" fill="rgb(242,220,43)" rx="2" ry="2" />
<text  x="1189.73" y="831.5" ></text>
</g>
<g >
<title>rusty_v8::V8::set_flags_from_command_line::_{{closure}} (10 samples, 0.03%)</title><rect x="1093.9" y="629" width="0.3" height="15.0" fill="rgb(232,187,21)" rx="2" ry="2" />
<text  x="1096.85" y="639.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_url (270 samples, 0.86%)</title><rect x="601.3" y="709" width="10.2" height="15.0" fill="rgb(252,144,19)" rx="2" ry="2" />
<text  x="604.33" y="719.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="219.3" y="517" width="0.1" height="15.0" fill="rgb(206,196,52)" rx="2" ry="2" />
<text  x="222.26" y="527.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="180.1" y="1109" width="0.3" height="15.0" fill="rgb(247,159,54)" rx="2" ry="2" />
<text  x="183.07" y="1119.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="99.7" y="1077" width="0.2" height="15.0" fill="rgb(226,110,19)" rx="2" ry="2" />
<text  x="102.73" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_desugared (21 samples, 0.07%)</title><rect x="242.6" y="597" width="0.8" height="15.0" fill="rgb(206,116,33)" rx="2" ry="2" />
<text  x="245.61" y="607.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..StandardHeader as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="666.6" y="741" width="0.2" height="15.0" fill="rgb(249,29,47)" rx="2" ry="2" />
<text  x="669.62" y="751.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.03%)</title><rect x="24.7" y="1109" width="0.3" height="15.0" fill="rgb(233,211,47)" rx="2" ry="2" />
<text  x="27.72" y="1119.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::_{{closure}} (26,170 samples, 83.26%)</title><rect x="207.1" y="1013" width="982.5" height="15.0" fill="rgb(227,193,15)" rx="2" ry="2" />
<text  x="210.14" y="1023.5" >tokio::coop::with_budget::_{{closure}}</text>
</g>
<g >
<title>core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="241.4" y="661" width="0.3" height="15.0" fill="rgb(239,70,49)" rx="2" ry="2" />
<text  x="244.37" y="671.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::find (6 samples, 0.02%)</title><rect x="1027.3" y="821" width="0.2" height="15.0" fill="rgb(212,115,9)" rx="2" ry="2" />
<text  x="1030.29" y="831.5" ></text>
</g>
<g >
<title>swc_ecma_visit::visit_module_items (20 samples, 0.06%)</title><rect x="239.9" y="613" width="0.8" height="15.0" fill="rgb(205,146,15)" rx="2" ry="2" />
<text  x="242.91" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="633.4" y="773" width="0.1" height="15.0" fill="rgb(239,99,35)" rx="2" ry="2" />
<text  x="636.43" y="783.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="166.6" y="1125" width="0.4" height="15.0" fill="rgb(214,222,52)" rx="2" ry="2" />
<text  x="169.59" y="1135.5" ></text>
</g>
<g >
<title>deno::swc_util::AstParser::parse_module (314 samples, 1.00%)</title><rect x="227.4" y="661" width="11.8" height="15.0" fill="rgb(251,42,10)" rx="2" ry="2" />
<text  x="230.45" y="671.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="243.7" y="645" width="0.2" height="15.0" fill="rgb(244,180,53)" rx="2" ry="2" />
<text  x="246.70" y="655.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="142.7" y="1029" width="0.2" height="15.0" fill="rgb(210,62,11)" rx="2" ry="2" />
<text  x="145.71" y="1039.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.03%)</title><rect x="645.6" y="853" width="0.4" height="15.0" fill="rgb(252,65,23)" rx="2" ry="2" />
<text  x="648.56" y="863.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (14 samples, 0.04%)</title><rect x="1108.3" y="581" width="0.6" height="15.0" fill="rgb(209,40,34)" rx="2" ry="2" />
<text  x="1111.34" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1087.8" y="773" width="0.1" height="15.0" fill="rgb(246,133,49)" rx="2" ry="2" />
<text  x="1090.77" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 0.01%)</title><rect x="1135.0" y="469" width="0.1" height="15.0" fill="rgb(240,35,24)" rx="2" ry="2" />
<text  x="1137.96" y="479.5" ></text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (11 samples, 0.03%)</title><rect x="216.3" y="549" width="0.4" height="15.0" fill="rgb(245,86,45)" rx="2" ry="2" />
<text  x="219.26" y="559.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="620.2" y="757" width="0.1" height="15.0" fill="rgb(248,187,4)" rx="2" ry="2" />
<text  x="623.18" y="767.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="1138.3" y="709" width="0.3" height="15.0" fill="rgb(211,73,19)" rx="2" ry="2" />
<text  x="1141.34" y="719.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (16 samples, 0.05%)</title><rect x="140.6" y="1125" width="0.6" height="15.0" fill="rgb(215,45,34)" rx="2" ry="2" />
<text  x="143.65" y="1135.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_str (518 samples, 1.65%)</title><rect x="360.6" y="261" width="19.5" height="15.0" fill="rgb(211,199,35)" rx="2" ry="2" />
<text  x="363.65" y="271.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (23 samples, 0.07%)</title><rect x="1061.5" y="885" width="0.8" height="15.0" fill="rgb(244,13,30)" rx="2" ry="2" />
<text  x="1064.45" y="895.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="219.7" y="565" width="0.1" height="15.0" fill="rgb(211,104,49)" rx="2" ry="2" />
<text  x="222.68" y="575.5" ></text>
</g>
<g >
<title>_&lt;u128 as swc_common..rustc_data_structures..stable_hasher..StableHasherResult&gt;::finish (3 samples, 0.01%)</title><rect x="229.8" y="597" width="0.1" height="15.0" fill="rgb(220,118,37)" rx="2" ry="2" />
<text  x="232.81" y="607.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (16 samples, 0.05%)</title><rect x="1177.5" y="901" width="0.6" height="15.0" fill="rgb(208,92,27)" rx="2" ry="2" />
<text  x="1180.54" y="911.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.03%)</title><rect x="126.8" y="1029" width="0.3" height="15.0" fill="rgb(220,116,27)" rx="2" ry="2" />
<text  x="129.76" y="1039.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (3 samples, 0.01%)</title><rect x="141.8" y="1061" width="0.2" height="15.0" fill="rgb(220,12,35)" rx="2" ry="2" />
<text  x="144.85" y="1071.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_path (252 samples, 0.80%)</title><rect x="590.8" y="693" width="9.4" height="15.0" fill="rgb(232,128,39)" rx="2" ry="2" />
<text  x="593.78" y="703.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="213.3" y="501" width="0.4" height="15.0" fill="rgb(219,214,3)" rx="2" ry="2" />
<text  x="216.33" y="511.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="166.7" y="1077" width="0.3" height="15.0" fill="rgb(223,215,26)" rx="2" ry="2" />
<text  x="169.70" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="239.1" y="565" width="0.1" height="15.0" fill="rgb(209,110,52)" rx="2" ry="2" />
<text  x="242.12" y="575.5" ></text>
</g>
<g >
<title>swc_ecma_visit::visit_expr (10 samples, 0.03%)</title><rect x="240.3" y="453" width="0.4" height="15.0" fill="rgb(245,100,35)" rx="2" ry="2" />
<text  x="243.29" y="463.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..string..ToString&gt;::to_string (15 samples, 0.05%)</title><rect x="587.5" y="709" width="0.5" height="15.0" fill="rgb(234,33,6)" rx="2" ry="2" />
<text  x="590.48" y="719.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="596.8" y="565" width="0.2" height="15.0" fill="rgb(223,196,43)" rx="2" ry="2" />
<text  x="599.79" y="575.5" ></text>
</g>
<g >
<title>core::ops::function::FnMut::call_mut (16 samples, 0.05%)</title><rect x="999.8" y="725" width="0.6" height="15.0" fill="rgb(226,168,42)" rx="2" ry="2" />
<text  x="1002.85" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="193.0" y="1093" width="0.1" height="15.0" fill="rgb(211,189,11)" rx="2" ry="2" />
<text  x="196.02" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (11 samples, 0.03%)</title><rect x="205.8" y="1141" width="0.4" height="15.0" fill="rgb(206,186,37)" rx="2" ry="2" />
<text  x="208.78" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1058.3" y="741" width="0.1" height="15.0" fill="rgb(212,218,19)" rx="2" ry="2" />
<text  x="1061.30" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1123.9" y="421" width="0.1" height="15.0" fill="rgb(246,8,40)" rx="2" ry="2" />
<text  x="1126.85" y="431.5" ></text>
</g>
<g >
<title>deno::worker::Worker::new (235 samples, 0.75%)</title><rect x="1086.0" y="901" width="8.8" height="15.0" fill="rgb(239,199,48)" rx="2" ry="2" />
<text  x="1088.97" y="911.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (6 samples, 0.02%)</title><rect x="550.4" y="229" width="0.2" height="15.0" fill="rgb(223,70,51)" rx="2" ry="2" />
<text  x="553.39" y="239.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="114.7" y="1093" width="0.1" height="15.0" fill="rgb(221,168,42)" rx="2" ry="2" />
<text  x="117.67" y="1103.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="1132.6" y="517" width="0.1" height="15.0" fill="rgb(224,225,19)" rx="2" ry="2" />
<text  x="1135.60" y="527.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (14 samples, 0.04%)</title><rect x="155.3" y="1093" width="0.5" height="15.0" fill="rgb(208,124,52)" rx="2" ry="2" />
<text  x="158.25" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (20 samples, 0.06%)</title><rect x="999.7" y="773" width="0.7" height="15.0" fill="rgb(225,28,12)" rx="2" ry="2" />
<text  x="1002.70" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="1070.0" y="773" width="0.4" height="15.0" fill="rgb(227,12,54)" rx="2" ry="2" />
<text  x="1073.01" y="783.5" ></text>
</g>
<g >
<title>core::mem::replace (3 samples, 0.01%)</title><rect x="208.0" y="757" width="0.1" height="15.0" fill="rgb(238,73,18)" rx="2" ry="2" />
<text  x="211.00" y="767.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::long (6 samples, 0.02%)</title><rect x="79.0" y="1157" width="0.3" height="15.0" fill="rgb(240,172,22)" rx="2" ry="2" />
<text  x="82.04" y="1167.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="139.4" y="1029" width="0.2" height="15.0" fill="rgb(245,139,39)" rx="2" ry="2" />
<text  x="142.41" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="930.4" y="789" width="0.4" height="15.0" fill="rgb(225,60,14)" rx="2" ry="2" />
<text  x="933.39" y="799.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (48 samples, 0.15%)</title><rect x="125.3" y="1077" width="1.8" height="15.0" fill="rgb(239,21,25)" rx="2" ry="2" />
<text  x="128.26" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (5 samples, 0.02%)</title><rect x="23.9" y="1029" width="0.2" height="15.0" fill="rgb(217,127,53)" rx="2" ry="2" />
<text  x="26.93" y="1039.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::short (3 samples, 0.01%)</title><rect x="162.4" y="1109" width="0.1" height="15.0" fill="rgb(231,211,30)" rx="2" ry="2" />
<text  x="165.39" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="268.9" y="485" width="0.3" height="15.0" fill="rgb(232,30,41)" rx="2" ry="2" />
<text  x="271.89" y="495.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..Repr&lt;T&gt; as core..hash..Hash&gt;::hash (10 samples, 0.03%)</title><rect x="836.2" y="773" width="0.4" height="15.0" fill="rgb(232,70,4)" rx="2" ry="2" />
<text  x="839.24" y="783.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert (27 samples, 0.09%)</title><rect x="663.9" y="885" width="1.0" height="15.0" fill="rgb(215,104,50)" rx="2" ry="2" />
<text  x="666.88" y="895.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (24 samples, 0.08%)</title><rect x="150.9" y="1045" width="0.9" height="15.0" fill="rgb(221,4,20)" rx="2" ry="2" />
<text  x="153.86" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (102 samples, 0.32%)</title><rect x="29.3" y="1045" width="3.8" height="15.0" fill="rgb(229,180,0)" rx="2" ry="2" />
<text  x="32.30" y="1055.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="633.6" y="789" width="0.3" height="15.0" fill="rgb(251,36,18)" rx="2" ry="2" />
<text  x="636.62" y="799.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="162.6" y="1109" width="0.3" height="15.0" fill="rgb(239,62,14)" rx="2" ry="2" />
<text  x="165.57" y="1119.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg..Arg as core..convert..From&lt;&amp;clap..args..arg..Arg&gt;&gt;::from (10 samples, 0.03%)</title><rect x="75.1" y="1093" width="0.4" height="15.0" fill="rgb(251,101,33)" rx="2" ry="2" />
<text  x="78.14" y="1103.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (12 samples, 0.04%)</title><rect x="1100.4" y="741" width="0.5" height="15.0" fill="rgb(243,78,18)" rx="2" ry="2" />
<text  x="1103.42" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (301 samples, 0.96%)</title><rect x="485.0" y="149" width="11.3" height="15.0" fill="rgb(215,111,34)" rx="2" ry="2" />
<text  x="488.03" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="140.3" y="1093" width="0.2" height="15.0" fill="rgb(229,99,39)" rx="2" ry="2" />
<text  x="143.27" y="1103.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::is_present (12 samples, 0.04%)</title><rect x="193.2" y="1141" width="0.5" height="15.0" fill="rgb(254,205,8)" rx="2" ry="2" />
<text  x="196.21" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="1073.0" y="725" width="0.2" height="15.0" fill="rgb(243,11,41)" rx="2" ry="2" />
<text  x="1075.98" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (10 samples, 0.03%)</title><rect x="1085.5" y="821" width="0.4" height="15.0" fill="rgb(233,46,31)" rx="2" ry="2" />
<text  x="1088.48" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="266.1" y="565" width="0.1" height="15.0" fill="rgb(207,150,37)" rx="2" ry="2" />
<text  x="269.08" y="575.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="836.3" y="725" width="0.2" height="15.0" fill="rgb(206,16,49)" rx="2" ry="2" />
<text  x="839.35" y="735.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (5 samples, 0.02%)</title><rect x="157.1" y="1077" width="0.2" height="15.0" fill="rgb(207,186,13)" rx="2" ry="2" />
<text  x="160.09" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="87.5" y="1077" width="0.1" height="15.0" fill="rgb(207,39,23)" rx="2" ry="2" />
<text  x="90.45" y="1087.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="1112.5" y="517" width="0.3" height="15.0" fill="rgb(239,48,23)" rx="2" ry="2" />
<text  x="1115.51" y="527.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_str (441 samples, 1.40%)</title><rect x="304.4" y="293" width="16.5" height="15.0" fill="rgb(225,110,29)" rx="2" ry="2" />
<text  x="307.37" y="303.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="1180.6" y="869" width="0.4" height="15.0" fill="rgb(242,26,22)" rx="2" ry="2" />
<text  x="1183.58" y="879.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_str (10 samples, 0.03%)</title><rect x="549.2" y="213" width="0.4" height="15.0" fill="rgb(227,204,44)" rx="2" ry="2" />
<text  x="552.22" y="223.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (1,661 samples, 5.28%)</title><rect x="866.1" y="597" width="62.3" height="15.0" fill="rgb(220,62,1)" rx="2" ry="2" />
<text  x="869.08" y="607.5" >alloc:..</text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for alloc..vec..Vec&lt;u8&gt;&gt;::write_all (31 samples, 0.10%)</title><rect x="1165.1" y="469" width="1.2" height="15.0" fill="rgb(250,217,7)" rx="2" ry="2" />
<text  x="1168.11" y="479.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (96 samples, 0.31%)</title><rect x="145.7" y="1061" width="3.6" height="15.0" fill="rgb(220,45,33)" rx="2" ry="2" />
<text  x="148.68" y="1071.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (15 samples, 0.05%)</title><rect x="1058.9" y="853" width="0.5" height="15.0" fill="rgb(229,127,14)" rx="2" ry="2" />
<text  x="1061.86" y="863.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::get2 (15 samples, 0.05%)</title><rect x="666.4" y="837" width="0.6" height="15.0" fill="rgb(248,80,2)" rx="2" ry="2" />
<text  x="669.39" y="847.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (20 samples, 0.06%)</title><rect x="1064.7" y="853" width="0.8" height="15.0" fill="rgb(213,187,2)" rx="2" ry="2" />
<text  x="1067.72" y="863.5" ></text>
</g>
<g >
<title>std::sync::once::Once::call_once (15 samples, 0.05%)</title><rect x="74.2" y="1141" width="0.6" height="15.0" fill="rgb(232,20,28)" rx="2" ry="2" />
<text  x="77.24" y="1151.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::channel (3 samples, 0.01%)</title><rect x="1086.0" y="869" width="0.2" height="15.0" fill="rgb(205,33,9)" rx="2" ry="2" />
<text  x="1089.04" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (7 samples, 0.02%)</title><rect x="1189.0" y="709" width="0.3" height="15.0" fill="rgb(241,79,52)" rx="2" ry="2" />
<text  x="1192.02" y="719.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="154.0" y="1061" width="0.2" height="15.0" fill="rgb(209,210,5)" rx="2" ry="2" />
<text  x="156.98" y="1071.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (24 samples, 0.08%)</title><rect x="126.2" y="1061" width="0.9" height="15.0" fill="rgb(241,163,8)" rx="2" ry="2" />
<text  x="129.16" y="1071.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="166.6" y="1141" width="0.4" height="15.0" fill="rgb(247,108,24)" rx="2" ry="2" />
<text  x="169.55" y="1151.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="127.4" y="1061" width="0.1" height="15.0" fill="rgb(240,122,2)" rx="2" ry="2" />
<text  x="130.43" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="191.3" y="1029" width="0.2" height="15.0" fill="rgb(209,90,32)" rx="2" ry="2" />
<text  x="194.33" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="121.3" y="1061" width="0.1" height="15.0" fill="rgb(209,215,0)" rx="2" ry="2" />
<text  x="124.28" y="1071.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="666.8" y="741" width="0.2" height="15.0" fill="rgb(231,67,27)" rx="2" ry="2" />
<text  x="669.81" y="751.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::get_index_of (6 samples, 0.02%)</title><rect x="293.2" y="325" width="0.2" height="15.0" fill="rgb(212,111,44)" rx="2" ry="2" />
<text  x="296.18" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="193.8" y="1093" width="0.1" height="15.0" fill="rgb(236,100,37)" rx="2" ry="2" />
<text  x="196.77" y="1103.5" ></text>
</g>
<g >
<title>url::path_to_file_url_segments (62 samples, 0.20%)</title><rect x="1173.7" y="885" width="2.3" height="15.0" fill="rgb(205,94,39)" rx="2" ry="2" />
<text  x="1176.71" y="895.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (60 samples, 0.19%)</title><rect x="1038.7" y="853" width="2.3" height="15.0" fill="rgb(211,151,28)" rx="2" ry="2" />
<text  x="1041.70" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (105 samples, 0.33%)</title><rect x="280.5" y="229" width="3.9" height="15.0" fill="rgb(208,148,27)" rx="2" ry="2" />
<text  x="283.46" y="239.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="116.1" y="1093" width="0.3" height="15.0" fill="rgb(236,67,9)" rx="2" ry="2" />
<text  x="119.06" y="1103.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.08%)</title><rect x="203.7" y="1077" width="1.0" height="15.0" fill="rgb(235,178,7)" rx="2" ry="2" />
<text  x="206.68" y="1087.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for alloc..string..String&gt;::serialize (10 samples, 0.03%)</title><rect x="1117.7" y="613" width="0.4" height="15.0" fill="rgb(254,172,43)" rx="2" ry="2" />
<text  x="1120.73" y="623.5" ></text>
</g>
<g >
<title>_&lt;serde_json..ser..Compound&lt;W,F&gt; as serde..ser..SerializeMap&gt;::serialize_value (105 samples, 0.33%)</title><rect x="1167.1" y="613" width="3.9" height="15.0" fill="rgb(245,139,8)" rx="2" ry="2" />
<text  x="1170.06" y="623.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="110.1" y="1093" width="0.2" height="15.0" fill="rgb(232,6,25)" rx="2" ry="2" />
<text  x="113.13" y="1103.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..SourceFile as core..clone..Clone&gt;::clone (19 samples, 0.06%)</title><rect x="613.1" y="565" width="0.7" height="15.0" fill="rgb(227,77,17)" rx="2" ry="2" />
<text  x="616.12" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.04%)</title><rect x="151.3" y="1029" width="0.5" height="15.0" fill="rgb(236,129,30)" rx="2" ry="2" />
<text  x="154.31" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (304 samples, 0.97%)</title><rect x="647.5" y="661" width="11.4" height="15.0" fill="rgb(229,105,5)" rx="2" ry="2" />
<text  x="650.47" y="671.5" ></text>
</g>
<g >
<title>clap::app::usage::get_required_usage_from (8 samples, 0.03%)</title><rect x="24.4" y="1109" width="0.3" height="15.0" fill="rgb(246,205,3)" rx="2" ry="2" />
<text  x="27.38" y="1119.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (15 samples, 0.05%)</title><rect x="1134.5" y="533" width="0.6" height="15.0" fill="rgb(205,211,0)" rx="2" ry="2" />
<text  x="1137.51" y="543.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="109.1" y="1061" width="0.1" height="15.0" fill="rgb(221,193,50)" rx="2" ry="2" />
<text  x="112.07" y="1071.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::insert2 (14 samples, 0.04%)</title><rect x="830.7" y="837" width="0.5" height="15.0" fill="rgb(216,136,33)" rx="2" ry="2" />
<text  x="833.68" y="847.5" ></text>
</g>
<g >
<title>deno::flags::install_subcommand (373 samples, 1.19%)</title><rect x="120.1" y="1157" width="14.0" height="15.0" fill="rgb(238,174,10)" rx="2" ry="2" />
<text  x="123.07" y="1167.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (28 samples, 0.09%)</title><rect x="211.8" y="549" width="1.0" height="15.0" fill="rgb(230,199,33)" rx="2" ry="2" />
<text  x="214.75" y="559.5" ></text>
</g>
<g >
<title>_&lt;tokio..sync..mutex..MutexGuard&lt;T&gt; as core..ops..drop..Drop&gt;::drop (6 samples, 0.02%)</title><rect x="612.2" y="565" width="0.2" height="15.0" fill="rgb(247,195,43)" rx="2" ry="2" />
<text  x="615.22" y="575.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (12 samples, 0.04%)</title><rect x="1172.6" y="789" width="0.4" height="15.0" fill="rgb(227,84,4)" rx="2" ry="2" />
<text  x="1175.58" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="192.2" y="1109" width="0.1" height="15.0" fill="rgb(231,127,19)" rx="2" ry="2" />
<text  x="195.23" y="1119.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="16.9" y="1029" width="0.2" height="15.0" fill="rgb(243,202,12)" rx="2" ry="2" />
<text  x="19.91" y="1039.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="617.9" y="789" width="0.1" height="15.0" fill="rgb(245,49,2)" rx="2" ry="2" />
<text  x="620.93" y="799.5" ></text>
</g>
<g >
<title>deno::ops::fs::init (703 samples, 2.24%)</title><rect x="1006.0" y="901" width="26.4" height="15.0" fill="rgb(236,5,0)" rx="2" ry="2" />
<text  x="1009.04" y="911.5" >d..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="664.3" y="773" width="0.1" height="15.0" fill="rgb(217,95,24)" rx="2" ry="2" />
<text  x="667.33" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve_exact (12 samples, 0.04%)</title><rect x="1110.8" y="533" width="0.5" height="15.0" fill="rgb(250,48,2)" rx="2" ry="2" />
<text  x="1113.82" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::find (4 samples, 0.01%)</title><rect x="1049.2" y="821" width="0.1" height="15.0" fill="rgb(228,158,46)" rx="2" ry="2" />
<text  x="1052.18" y="831.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (21 samples, 0.07%)</title><rect x="1085.2" y="853" width="0.8" height="15.0" fill="rgb(242,126,33)" rx="2" ry="2" />
<text  x="1088.18" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="629.9" y="565" width="0.1" height="15.0" fill="rgb(242,209,50)" rx="2" ry="2" />
<text  x="632.90" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (16 samples, 0.05%)</title><rect x="1068.4" y="773" width="0.6" height="15.0" fill="rgb(228,206,39)" rx="2" ry="2" />
<text  x="1071.40" y="783.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_member_expr_or_new_expr (64 samples, 0.20%)</title><rect x="235.9" y="453" width="2.4" height="15.0" fill="rgb(232,67,1)" rx="2" ry="2" />
<text  x="238.93" y="463.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (73 samples, 0.23%)</title><rect x="642.6" y="709" width="2.7" height="15.0" fill="rgb(220,168,8)" rx="2" ry="2" />
<text  x="645.59" y="719.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (79 samples, 0.25%)</title><rect x="642.4" y="725" width="2.9" height="15.0" fill="rgb(208,114,43)" rx="2" ry="2" />
<text  x="645.37" y="735.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (8 samples, 0.03%)</title><rect x="292.1" y="277" width="0.3" height="15.0" fill="rgb(252,91,38)" rx="2" ry="2" />
<text  x="295.13" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="110.0" y="1045" width="0.1" height="15.0" fill="rgb(235,66,32)" rx="2" ry="2" />
<text  x="113.01" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.01%)</title><rect x="658.4" y="485" width="0.2" height="15.0" fill="rgb(232,22,13)" rx="2" ry="2" />
<text  x="661.43" y="495.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::needs_more_vals (7 samples, 0.02%)</title><rect x="16.8" y="1061" width="0.3" height="15.0" fill="rgb(207,173,53)" rx="2" ry="2" />
<text  x="19.83" y="1071.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileFetcher::new (4,482 samples, 14.26%)</title><rect x="662.9" y="917" width="168.3" height="15.0" fill="rgb(239,82,22)" rx="2" ry="2" />
<text  x="665.94" y="927.5" >deno::file_fetcher::S..</text>
</g>
<g >
<title>alloc::vec::from_elem (5 samples, 0.02%)</title><rect x="234.9" y="181" width="0.2" height="15.0" fill="rgb(215,140,17)" rx="2" ry="2" />
<text  x="237.92" y="191.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (14 samples, 0.04%)</title><rect x="549.1" y="277" width="0.5" height="15.0" fill="rgb(226,200,48)" rx="2" ry="2" />
<text  x="552.07" y="287.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 0.07%)</title><rect x="838.5" y="757" width="0.8" height="15.0" fill="rgb(234,102,32)" rx="2" ry="2" />
<text  x="841.45" y="767.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="1002.3" y="773" width="0.4" height="15.0" fill="rgb(238,89,7)" rx="2" ry="2" />
<text  x="1005.29" y="783.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="177.8" y="1061" width="0.2" height="15.0" fill="rgb(236,115,5)" rx="2" ry="2" />
<text  x="180.82" y="1071.5" ></text>
</g>
<g >
<title>deno::flags::importmap_arg (9 samples, 0.03%)</title><rect x="178.4" y="1125" width="0.3" height="15.0" fill="rgb(207,129,10)" rx="2" ry="2" />
<text  x="181.38" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="87.0" y="1061" width="0.3" height="15.0" fill="rgb(244,133,3)" rx="2" ry="2" />
<text  x="90.00" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="177.9" y="1045" width="0.1" height="15.0" fill="rgb(242,108,30)" rx="2" ry="2" />
<text  x="180.85" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1087.7" y="789" width="0.2" height="15.0" fill="rgb(254,41,34)" rx="2" ry="2" />
<text  x="1090.73" y="799.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_fold::_{{closure}} (2,367 samples, 7.53%)</title><rect x="669.2" y="661" width="88.9" height="15.0" fill="rgb(239,169,17)" rx="2" ry="2" />
<text  x="672.21" y="671.5" >core::iter..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="227.9" y="549" width="0.3" height="15.0" fill="rgb(227,223,11)" rx="2" ry="2" />
<text  x="230.93" y="559.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (78 samples, 0.25%)</title><rect x="1127.1" y="549" width="2.9" height="15.0" fill="rgb(211,16,39)" rx="2" ry="2" />
<text  x="1130.12" y="559.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (32 samples, 0.10%)</title><rect x="272.5" y="357" width="1.2" height="15.0" fill="rgb(207,61,50)" rx="2" ry="2" />
<text  x="275.46" y="367.5" ></text>
</g>
<g >
<title>deno::flags::clap_root (3,136 samples, 9.98%)</title><rect x="74.2" y="1173" width="117.7" height="15.0" fill="rgb(249,188,1)" rx="2" ry="2" />
<text  x="77.16" y="1183.5" >deno::flags::c..</text>
</g>
<g >
<title>deno::ops::resources::init (43 samples, 0.14%)</title><rect x="1064.1" y="901" width="1.6" height="15.0" fill="rgb(239,29,40)" rx="2" ry="2" />
<text  x="1067.08" y="911.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="89.1" y="1093" width="0.2" height="15.0" fill="rgb(219,227,17)" rx="2" ry="2" />
<text  x="92.10" y="1103.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (10 samples, 0.03%)</title><rect x="233.9" y="261" width="0.4" height="15.0" fill="rgb(236,223,21)" rx="2" ry="2" />
<text  x="236.90" y="271.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (1,256 samples, 4.00%)</title><rect x="273.8" y="453" width="47.2" height="15.0" fill="rgb(221,164,44)" rx="2" ry="2" />
<text  x="276.81" y="463.5" >_&lt;co..</text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.05%)</title><rect x="12.1" y="1157" width="0.6" height="15.0" fill="rgb(241,120,22)" rx="2" ry="2" />
<text  x="15.10" y="1167.5" ></text>
</g>
<g >
<title>deno::flags::permission_args (161 samples, 0.51%)</title><rect x="156.5" y="1125" width="6.0" height="15.0" fill="rgb(248,170,21)" rx="2" ry="2" />
<text  x="159.45" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::split_off (5 samples, 0.02%)</title><rect x="191.9" y="1157" width="0.2" height="15.0" fill="rgb(228,80,22)" rx="2" ry="2" />
<text  x="194.93" y="1167.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..string..ToString&gt;::to_string (43 samples, 0.14%)</title><rect x="19.0" y="1013" width="1.7" height="15.0" fill="rgb(251,85,29)" rx="2" ry="2" />
<text  x="22.05" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (24 samples, 0.08%)</title><rect x="598.9" y="597" width="0.9" height="15.0" fill="rgb(223,100,52)" rx="2" ry="2" />
<text  x="601.89" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (46 samples, 0.15%)</title><rect x="640.1" y="645" width="1.7" height="15.0" fill="rgb(251,120,41)" rx="2" ry="2" />
<text  x="643.08" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="202.4" y="1093" width="0.2" height="15.0" fill="rgb(209,65,14)" rx="2" ry="2" />
<text  x="205.41" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="75.7" y="1029" width="0.2" height="15.0" fill="rgb(207,120,46)" rx="2" ry="2" />
<text  x="78.70" y="1039.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (25 samples, 0.08%)</title><rect x="1091.4" y="693" width="0.9" height="15.0" fill="rgb(244,63,7)" rx="2" ry="2" />
<text  x="1094.38" y="703.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,388 samples, 4.42%)</title><rect x="775.8" y="821" width="52.1" height="15.0" fill="rgb(216,151,18)" rx="2" ry="2" />
<text  x="778.83" y="831.5" >alloc..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (5 samples, 0.02%)</title><rect x="16.4" y="965" width="0.2" height="15.0" fill="rgb(216,54,41)" rx="2" ry="2" />
<text  x="19.42" y="975.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="1002.4" y="741" width="0.3" height="15.0" fill="rgb(205,127,45)" rx="2" ry="2" />
<text  x="1005.44" y="751.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_desugared (21 samples, 0.07%)</title><rect x="616.6" y="469" width="0.8" height="15.0" fill="rgb(209,208,25)" rx="2" ry="2" />
<text  x="619.58" y="479.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="575.8" y="549" width="0.3" height="15.0" fill="rgb(237,23,15)" rx="2" ry="2" />
<text  x="578.77" y="559.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::parse_subcommand (276 samples, 0.88%)</title><rect x="14.8" y="1125" width="10.3" height="15.0" fill="rgb(221,22,39)" rx="2" ry="2" />
<text  x="17.77" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="1064.4" y="821" width="0.2" height="15.0" fill="rgb(209,46,1)" rx="2" ry="2" />
<text  x="1067.42" y="831.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.03%)</title><rect x="267.8" y="629" width="0.5" height="15.0" fill="rgb(218,34,20)" rx="2" ry="2" />
<text  x="270.84" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="153.3" y="1045" width="0.2" height="15.0" fill="rgb(231,170,47)" rx="2" ry="2" />
<text  x="156.34" y="1055.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="160.5" y="1013" width="0.2" height="15.0" fill="rgb(228,48,25)" rx="2" ry="2" />
<text  x="163.51" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="215.6" y="389" width="0.1" height="15.0" fill="rgb(213,187,42)" rx="2" ry="2" />
<text  x="218.62" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="1067.5" y="741" width="0.3" height="15.0" fill="rgb(237,45,13)" rx="2" ry="2" />
<text  x="1070.50" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (87 samples, 0.28%)</title><rect x="642.1" y="853" width="3.2" height="15.0" fill="rgb(215,0,23)" rx="2" ry="2" />
<text  x="645.07" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (17 samples, 0.05%)</title><rect x="658.2" y="517" width="0.7" height="15.0" fill="rgb(223,185,34)" rx="2" ry="2" />
<text  x="661.25" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="549.3" y="165" width="0.3" height="15.0" fill="rgb(239,55,25)" rx="2" ry="2" />
<text  x="552.34" y="175.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..SourceFile as core..clone..Clone&gt;::clone (20 samples, 0.06%)</title><rect x="215.9" y="565" width="0.8" height="15.0" fill="rgb(250,176,24)" rx="2" ry="2" />
<text  x="218.92" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.02%)</title><rect x="204.4" y="981" width="0.3" height="15.0" fill="rgb(250,6,8)" rx="2" ry="2" />
<text  x="207.43" y="991.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (77 samples, 0.24%)</title><rect x="1052.0" y="741" width="2.9" height="15.0" fill="rgb(238,94,33)" rx="2" ry="2" />
<text  x="1055.03" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (19 samples, 0.06%)</title><rect x="1056.4" y="789" width="0.7" height="15.0" fill="rgb(238,140,9)" rx="2" ry="2" />
<text  x="1059.42" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (71 samples, 0.23%)</title><rect x="199.4" y="1157" width="2.7" height="15.0" fill="rgb(239,122,47)" rx="2" ry="2" />
<text  x="202.44" y="1167.5" ></text>
</g>
<g >
<title>_&lt;extern &quot;C&quot; fn(A0) .&gt; R as rusty_v8..support..CFnFrom&lt;F&gt;&gt;::mapping::c_fn (28 samples, 0.09%)</title><rect x="635.6" y="837" width="1.1" height="15.0" fill="rgb(228,185,25)" rx="2" ry="2" />
<text  x="638.61" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (86 samples, 0.27%)</title><rect x="642.1" y="837" width="3.2" height="15.0" fill="rgb(217,69,44)" rx="2" ry="2" />
<text  x="645.10" y="847.5" ></text>
</g>
<g >
<title>core::ops::function::impls::_&lt;impl core..ops..function..FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.03%)</title><rect x="18.4" y="997" width="0.4" height="15.0" fill="rgb(252,189,33)" rx="2" ry="2" />
<text  x="21.41" y="1007.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (10 samples, 0.03%)</title><rect x="216.8" y="517" width="0.4" height="15.0" fill="rgb(244,32,30)" rx="2" ry="2" />
<text  x="219.78" y="527.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (4 samples, 0.01%)</title><rect x="1111.6" y="533" width="0.1" height="15.0" fill="rgb(244,191,16)" rx="2" ry="2" />
<text  x="1114.57" y="543.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (2,379 samples, 7.57%)</title><rect x="668.9" y="789" width="89.3" height="15.0" fill="rgb(236,86,38)" rx="2" ry="2" />
<text  x="671.91" y="799.5" >alloc::sli..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="142.8" y="1013" width="0.1" height="15.0" fill="rgb(238,79,18)" rx="2" ry="2" />
<text  x="145.75" y="1023.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (149 samples, 0.47%)</title><rect x="156.8" y="1093" width="5.6" height="15.0" fill="rgb(217,82,12)" rx="2" ry="2" />
<text  x="159.79" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="549.4" y="149" width="0.2" height="15.0" fill="rgb(212,124,12)" rx="2" ry="2" />
<text  x="552.37" y="159.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_subscript (12 samples, 0.04%)</title><rect x="238.4" y="453" width="0.4" height="15.0" fill="rgb(251,35,48)" rx="2" ry="2" />
<text  x="241.37" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="1166.0" y="389" width="0.3" height="15.0" fill="rgb(211,43,37)" rx="2" ry="2" />
<text  x="1169.05" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1095.7" y="789" width="0.2" height="15.0" fill="rgb(251,79,28)" rx="2" ry="2" />
<text  x="1098.73" y="799.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="1035.9" y="821" width="0.6" height="15.0" fill="rgb(212,172,8)" rx="2" ry="2" />
<text  x="1038.93" y="831.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="274.5" y="293" width="0.3" height="15.0" fill="rgb(209,149,46)" rx="2" ry="2" />
<text  x="277.52" y="303.5" ></text>
</g>
<g >
<title>deno::tsc::TsCompiler::has_valid_cache (9,117 samples, 29.01%)</title><rect x="243.6" y="693" width="342.3" height="15.0" fill="rgb(253,105,18)" rx="2" ry="2" />
<text  x="246.59" y="703.5" >deno::tsc::TsCompiler::has_valid_cache</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="828.3" y="757" width="0.2" height="15.0" fill="rgb(244,223,21)" rx="2" ry="2" />
<text  x="831.32" y="767.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="128.5" y="1125" width="0.3" height="15.0" fill="rgb(234,108,3)" rx="2" ry="2" />
<text  x="131.52" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (12 samples, 0.04%)</title><rect x="1038.0" y="805" width="0.5" height="15.0" fill="rgb(244,175,30)" rx="2" ry="2" />
<text  x="1041.03" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="112.3" y="1061" width="0.3" height="15.0" fill="rgb(222,194,11)" rx="2" ry="2" />
<text  x="115.30" y="1071.5" ></text>
</g>
<g >
<title>serde_json::value::ser::_&lt;impl serde..ser..Serialize for serde_json..value..Value&gt;::serialize (367 samples, 1.17%)</title><rect x="1124.2" y="661" width="13.7" height="15.0" fill="rgb(221,40,43)" rx="2" ry="2" />
<text  x="1127.15" y="671.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::ops::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_bin_expr (20 samples, 0.06%)</title><rect x="233.5" y="389" width="0.8" height="15.0" fill="rgb(227,132,40)" rx="2" ry="2" />
<text  x="236.53" y="399.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (19 samples, 0.06%)</title><rect x="1071.3" y="853" width="0.7" height="15.0" fill="rgb(242,68,36)" rx="2" ry="2" />
<text  x="1074.25" y="863.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (12 samples, 0.04%)</title><rect x="136.1" y="1109" width="0.5" height="15.0" fill="rgb(226,159,15)" rx="2" ry="2" />
<text  x="139.11" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="586.2" y="661" width="0.2" height="15.0" fill="rgb(231,222,54)" rx="2" ry="2" />
<text  x="589.20" y="671.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="110.2" y="1061" width="0.1" height="15.0" fill="rgb(234,169,54)" rx="2" ry="2" />
<text  x="113.20" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (39 samples, 0.12%)</title><rect x="1128.6" y="501" width="1.4" height="15.0" fill="rgb(252,110,8)" rx="2" ry="2" />
<text  x="1131.58" y="511.5" ></text>
</g>
<g >
<title>deno::main (31,420 samples, 99.97%)</title><rect x="10.2" y="1221" width="1179.5" height="15.0" fill="rgb(218,183,45)" rx="2" ry="2" />
<text  x="13.15" y="1231.5" >deno::main</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="99.6" y="1045" width="0.1" height="15.0" fill="rgb(227,68,52)" rx="2" ry="2" />
<text  x="102.58" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="786.2" y="805" width="0.1" height="15.0" fill="rgb(240,45,27)" rx="2" ry="2" />
<text  x="789.19" y="815.5" ></text>
</g>
<g >
<title>serde_json::ser::to_writer (175 samples, 0.56%)</title><rect x="1117.5" y="677" width="6.6" height="15.0" fill="rgb(223,145,48)" rx="2" ry="2" />
<text  x="1120.51" y="687.5" ></text>
</g>
<g >
<title>_&lt;deno_core..module_specifier..ModuleSpecifier as core..hash..Hash&gt;::hash (7 samples, 0.02%)</title><rect x="219.1" y="581" width="0.3" height="15.0" fill="rgb(250,123,30)" rx="2" ry="2" />
<text  x="222.11" y="591.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (397 samples, 1.26%)</title><rect x="306.0" y="277" width="14.9" height="15.0" fill="rgb(244,27,51)" rx="2" ry="2" />
<text  x="309.02" y="287.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (42 samples, 0.13%)</title><rect x="598.2" y="629" width="1.6" height="15.0" fill="rgb(211,70,30)" rx="2" ry="2" />
<text  x="601.22" y="639.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::contains (7 samples, 0.02%)</title><rect x="23.9" y="1061" width="0.2" height="15.0" fill="rgb(239,43,43)" rx="2" ry="2" />
<text  x="26.85" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="660.8" y="773" width="0.2" height="15.0" fill="rgb(206,149,6)" rx="2" ry="2" />
<text  x="663.84" y="783.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope&lt;()&gt;::cast_local (3 samples, 0.01%)</title><rect x="1095.1" y="837" width="0.1" height="15.0" fill="rgb(247,213,20)" rx="2" ry="2" />
<text  x="1098.05" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="228.0" y="533" width="0.2" height="15.0" fill="rgb(236,25,36)" rx="2" ry="2" />
<text  x="231.01" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="121.0" y="1109" width="0.2" height="15.0" fill="rgb(254,34,24)" rx="2" ry="2" />
<text  x="123.98" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="241.0" y="629" width="0.3" height="15.0" fill="rgb(229,215,43)" rx="2" ry="2" />
<text  x="244.04" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="635.4" y="837" width="0.1" height="15.0" fill="rgb(217,58,18)" rx="2" ry="2" />
<text  x="638.38" y="847.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::long (7 samples, 0.02%)</title><rect x="105.5" y="1125" width="0.2" height="15.0" fill="rgb(246,33,36)" rx="2" ry="2" />
<text  x="108.47" y="1135.5" ></text>
</g>
<g >
<title>rustls::client::ClientConfig::new (18 samples, 0.06%)</title><rect x="828.5" y="869" width="0.7" height="15.0" fill="rgb(250,122,10)" rx="2" ry="2" />
<text  x="831.54" y="879.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_file (267 samples, 0.85%)</title><rect x="623.3" y="741" width="10.0" height="15.0" fill="rgb(237,15,29)" rx="2" ry="2" />
<text  x="626.30" y="751.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="180.1" y="1077" width="0.3" height="15.0" fill="rgb(250,149,31)" rx="2" ry="2" />
<text  x="183.14" y="1087.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="15.7" y="981" width="0.2" height="15.0" fill="rgb(244,187,21)" rx="2" ry="2" />
<text  x="18.71" y="991.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (9 samples, 0.03%)</title><rect x="262.2" y="549" width="0.3" height="15.0" fill="rgb(236,130,26)" rx="2" ry="2" />
<text  x="265.21" y="559.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (13 samples, 0.04%)</title><rect x="138.7" y="1093" width="0.4" height="15.0" fill="rgb(234,113,13)" rx="2" ry="2" />
<text  x="141.66" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="104.6" y="1093" width="0.4" height="15.0" fill="rgb(210,142,42)" rx="2" ry="2" />
<text  x="107.64" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="155.6" y="1029" width="0.2" height="15.0" fill="rgb(223,85,3)" rx="2" ry="2" />
<text  x="158.55" y="1039.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="127.1" y="1093" width="0.3" height="15.0" fill="rgb(216,208,19)" rx="2" ry="2" />
<text  x="130.13" y="1103.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.04%)</title><rect x="197.1" y="1109" width="0.5" height="15.0" fill="rgb(242,48,19)" rx="2" ry="2" />
<text  x="200.11" y="1119.5" ></text>
</g>
<g >
<title>clap::app::App::arg (136 samples, 0.43%)</title><rect x="128.9" y="1125" width="5.1" height="15.0" fill="rgb(230,98,26)" rx="2" ry="2" />
<text  x="131.90" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (8 samples, 0.03%)</title><rect x="165.7" y="1045" width="0.3" height="15.0" fill="rgb(229,166,23)" rx="2" ry="2" />
<text  x="168.65" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (18 samples, 0.06%)</title><rect x="1072.5" y="789" width="0.7" height="15.0" fill="rgb(220,10,51)" rx="2" ry="2" />
<text  x="1075.53" y="799.5" ></text>
</g>
<g >
<title>deno::flags::no_remote_arg_parse (7 samples, 0.02%)</title><rect x="195.6" y="1141" width="0.2" height="15.0" fill="rgb(214,148,32)" rx="2" ry="2" />
<text  x="198.57" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (10 samples, 0.03%)</title><rect x="289.8" y="325" width="0.4" height="15.0" fill="rgb(211,224,39)" rx="2" ry="2" />
<text  x="292.80" y="335.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="1186.7" y="853" width="0.2" height="15.0" fill="rgb(222,86,45)" rx="2" ry="2" />
<text  x="1189.66" y="863.5" ></text>
</g>
<g >
<title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (83 samples, 0.26%)</title><rect x="436.3" y="245" width="3.1" height="15.0" fill="rgb(231,74,53)" rx="2" ry="2" />
<text  x="439.33" y="255.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="142.1" y="1077" width="0.2" height="15.0" fill="rgb(232,53,18)" rx="2" ry="2" />
<text  x="145.07" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (235 samples, 0.75%)</title><rect x="649.3" y="501" width="8.8" height="15.0" fill="rgb(241,58,13)" rx="2" ry="2" />
<text  x="652.31" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="182.2" y="1029" width="0.2" height="15.0" fill="rgb(207,105,17)" rx="2" ry="2" />
<text  x="185.17" y="1039.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (300 samples, 0.95%)</title><rect x="647.6" y="629" width="11.3" height="15.0" fill="rgb(232,213,47)" rx="2" ry="2" />
<text  x="650.62" y="639.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (14 samples, 0.04%)</title><rect x="1100.3" y="757" width="0.6" height="15.0" fill="rgb(214,162,22)" rx="2" ry="2" />
<text  x="1103.35" y="767.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (22 samples, 0.07%)</title><rect x="286.3" y="293" width="0.8" height="15.0" fill="rgb(235,128,54)" rx="2" ry="2" />
<text  x="289.28" y="303.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (5 samples, 0.02%)</title><rect x="287.2" y="373" width="0.2" height="15.0" fill="rgb(218,84,38)" rx="2" ry="2" />
<text  x="290.21" y="383.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileCache::get (30 samples, 0.10%)</title><rect x="262.5" y="645" width="1.2" height="15.0" fill="rgb(246,163,21)" rx="2" ry="2" />
<text  x="265.55" y="655.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (1,197 samples, 3.81%)</title><rect x="501.2" y="277" width="44.9" height="15.0" fill="rgb(214,109,8)" rx="2" ry="2" />
<text  x="504.17" y="287.5" >inde..</text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="118.9" y="1109" width="0.3" height="15.0" fill="rgb(238,111,1)" rx="2" ry="2" />
<text  x="121.87" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="127.2" y="1077" width="0.2" height="15.0" fill="rgb(214,107,6)" rx="2" ry="2" />
<text  x="130.17" y="1087.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..RandomState as core..default..Default&gt;::default (4 samples, 0.01%)</title><rect x="831.4" y="853" width="0.1" height="15.0" fill="rgb(212,228,17)" rx="2" ry="2" />
<text  x="834.36" y="863.5" ></text>
</g>
<g >
<title>deno::flags::reload_arg (10 samples, 0.03%)</title><rect x="89.0" y="1141" width="0.3" height="15.0" fill="rgb(245,7,19)" rx="2" ry="2" />
<text  x="91.95" y="1151.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (9 samples, 0.03%)</title><rect x="1057.4" y="821" width="0.3" height="15.0" fill="rgb(215,163,2)" rx="2" ry="2" />
<text  x="1060.36" y="831.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (19 samples, 0.06%)</title><rect x="1132.0" y="565" width="0.7" height="15.0" fill="rgb(211,175,21)" rx="2" ry="2" />
<text  x="1135.00" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (105 samples, 0.33%)</title><rect x="1019.8" y="757" width="4.0" height="15.0" fill="rgb(248,168,47)" rx="2" ry="2" />
<text  x="1022.82" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve_exact (8 samples, 0.03%)</title><rect x="573.2" y="405" width="0.3" height="15.0" fill="rgb(231,147,2)" rx="2" ry="2" />
<text  x="576.21" y="415.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="114.4" y="1061" width="0.2" height="15.0" fill="rgb(246,8,6)" rx="2" ry="2" />
<text  x="117.44" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.06%)</title><rect x="192.4" y="1141" width="0.7" height="15.0" fill="rgb(228,202,46)" rx="2" ry="2" />
<text  x="195.38" y="1151.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="832.3" y="853" width="0.2" height="15.0" fill="rgb(214,221,18)" rx="2" ry="2" />
<text  x="835.26" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="178.2" y="1045" width="0.2" height="15.0" fill="rgb(228,30,3)" rx="2" ry="2" />
<text  x="181.23" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (8 samples, 0.03%)</title><rect x="587.7" y="597" width="0.3" height="15.0" fill="rgb(235,205,26)" rx="2" ry="2" />
<text  x="590.74" y="607.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (15 samples, 0.05%)</title><rect x="1055.3" y="853" width="0.6" height="15.0" fill="rgb(217,214,3)" rx="2" ry="2" />
<text  x="1058.30" y="863.5" ></text>
</g>
<g >
<title>deno::state::State::core_op::_{{closure}} (994 samples, 3.16%)</title><rect x="1100.9" y="741" width="37.4" height="15.0" fill="rgb(208,215,35)" rx="2" ry="2" />
<text  x="1103.95" y="751.5" >den..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="619.5" y="773" width="0.2" height="15.0" fill="rgb(250,181,14)" rx="2" ry="2" />
<text  x="622.54" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="1189.9" y="1221" width="0.1" height="15.0" fill="rgb(234,54,39)" rx="2" ry="2" />
<text  x="1192.89" y="1231.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (80 samples, 0.25%)</title><rect x="106.8" y="1109" width="3.0" height="15.0" fill="rgb(241,34,41)" rx="2" ry="2" />
<text  x="109.82" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (14 samples, 0.04%)</title><rect x="838.8" y="645" width="0.5" height="15.0" fill="rgb(241,221,3)" rx="2" ry="2" />
<text  x="841.79" y="655.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="668.0" y="613" width="0.3" height="15.0" fill="rgb(238,64,20)" rx="2" ry="2" />
<text  x="670.97" y="623.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileCache::set (16 samples, 0.05%)</title><rect x="217.2" y="565" width="0.6" height="15.0" fill="rgb(237,86,49)" rx="2" ry="2" />
<text  x="220.16" y="575.5" ></text>
</g>
<g >
<title>url::Url::parse (273 samples, 0.87%)</title><rect x="590.0" y="773" width="10.2" height="15.0" fill="rgb(216,121,14)" rx="2" ry="2" />
<text  x="592.99" y="783.5" ></text>
</g>
<g >
<title>deno::flags::script_arg (9 samples, 0.03%)</title><rect x="162.9" y="1141" width="0.4" height="15.0" fill="rgb(230,19,26)" rx="2" ry="2" />
<text  x="165.95" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="136.9" y="1093" width="0.3" height="15.0" fill="rgb(214,17,28)" rx="2" ry="2" />
<text  x="139.89" y="1103.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (18 samples, 0.06%)</title><rect x="1058.8" y="869" width="0.6" height="15.0" fill="rgb(245,49,24)" rx="2" ry="2" />
<text  x="1061.75" y="879.5" ></text>
</g>
<g >
<title>deno_core::modules::Modules::get_id (10 samples, 0.03%)</title><rect x="633.5" y="821" width="0.4" height="15.0" fill="rgb(227,194,52)" rx="2" ry="2" />
<text  x="636.54" y="831.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="587.3" y="645" width="0.1" height="15.0" fill="rgb(244,228,36)" rx="2" ry="2" />
<text  x="590.29" y="655.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="634.0" y="805" width="0.2" height="15.0" fill="rgb(208,159,34)" rx="2" ry="2" />
<text  x="636.99" y="815.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (88 samples, 0.28%)</title><rect x="69.5" y="1013" width="3.3" height="15.0" fill="rgb(211,130,4)" rx="2" ry="2" />
<text  x="72.54" y="1023.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="136.8" y="1141" width="0.5" height="15.0" fill="rgb(246,94,16)" rx="2" ry="2" />
<text  x="139.78" y="1151.5" ></text>
</g>
<g >
<title>serde_json::de::from_trait (28 samples, 0.09%)</title><rect x="266.3" y="613" width="1.1" height="15.0" fill="rgb(241,155,53)" rx="2" ry="2" />
<text  x="269.30" y="623.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (825 samples, 2.62%)</title><rect x="439.4" y="261" width="31.0" height="15.0" fill="rgb(213,163,49)" rx="2" ry="2" />
<text  x="442.45" y="271.5" >_&lt;..</text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="1189.8" y="1237" width="0.2" height="15.0" fill="rgb(249,49,8)" rx="2" ry="2" />
<text  x="1192.85" y="1247.5" ></text>
</g>
<g >
<title>deno::text_encoding::convert_to_utf8 (10 samples, 0.03%)</title><rect x="224.0" y="645" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="226.99" y="655.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="575.2" y="645" width="0.2" height="15.0" fill="rgb(248,162,14)" rx="2" ry="2" />
<text  x="578.24" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.04%)</title><rect x="1040.5" y="725" width="0.5" height="15.0" fill="rgb(252,100,10)" rx="2" ry="2" />
<text  x="1043.51" y="735.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::get_index_of (3 samples, 0.01%)</title><rect x="1117.2" y="629" width="0.1" height="15.0" fill="rgb(206,180,29)" rx="2" ry="2" />
<text  x="1120.20" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="105.3" y="1045" width="0.1" height="15.0" fill="rgb(228,109,4)" rx="2" ry="2" />
<text  x="108.32" y="1055.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (9 samples, 0.03%)</title><rect x="14.2" y="1109" width="0.3" height="15.0" fill="rgb(252,45,9)" rx="2" ry="2" />
<text  x="17.17" y="1119.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="118.8" y="1141" width="0.5" height="15.0" fill="rgb(252,224,27)" rx="2" ry="2" />
<text  x="121.80" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (21 samples, 0.07%)</title><rect x="1054.1" y="725" width="0.8" height="15.0" fill="rgb(253,74,39)" rx="2" ry="2" />
<text  x="1057.13" y="735.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (11 samples, 0.03%)</title><rect x="268.7" y="549" width="0.5" height="15.0" fill="rgb(222,97,23)" rx="2" ry="2" />
<text  x="271.74" y="559.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (2,371 samples, 7.54%)</title><rect x="840.0" y="725" width="89.0" height="15.0" fill="rgb(246,162,14)" rx="2" ry="2" />
<text  x="843.03" y="735.5" >core::iter..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve_exact (16 samples, 0.05%)</title><rect x="292.6" y="293" width="0.6" height="15.0" fill="rgb(218,194,23)" rx="2" ry="2" />
<text  x="295.58" y="303.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.03%)</title><rect x="1089.6" y="821" width="0.3" height="15.0" fill="rgb(233,145,23)" rx="2" ry="2" />
<text  x="1092.57" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="218.7" y="549" width="0.1" height="15.0" fill="rgb(205,70,41)" rx="2" ry="2" />
<text  x="221.66" y="559.5" ></text>
</g>
<g >
<title>_&lt;serde_json..ser..MapKeySerializer&lt;W,F&gt; as serde..ser..Serializer&gt;::serialize_str (65 samples, 0.21%)</title><rect x="1119.7" y="549" width="2.4" height="15.0" fill="rgb(214,25,32)" rx="2" ry="2" />
<text  x="1122.68" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="1189.4" y="837" width="0.1" height="15.0" fill="rgb(243,193,12)" rx="2" ry="2" />
<text  x="1192.36" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="587.8" y="565" width="0.2" height="15.0" fill="rgb(219,99,26)" rx="2" ry="2" />
<text  x="590.82" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="99.2" y="1061" width="0.2" height="15.0" fill="rgb(231,22,2)" rx="2" ry="2" />
<text  x="102.24" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="226.1" y="437" width="0.3" height="15.0" fill="rgb(252,38,5)" rx="2" ry="2" />
<text  x="229.06" y="447.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find (6 samples, 0.02%)</title><rect x="22.7" y="1013" width="0.2" height="15.0" fill="rgb(209,129,45)" rx="2" ry="2" />
<text  x="25.65" y="1023.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.03%)</title><rect x="1086.9" y="693" width="0.3" height="15.0" fill="rgb(210,225,51)" rx="2" ry="2" />
<text  x="1089.91" y="703.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="191.6" y="1125" width="0.3" height="15.0" fill="rgb(214,116,28)" rx="2" ry="2" />
<text  x="194.59" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="834.7" y="789" width="0.3" height="15.0" fill="rgb(209,145,9)" rx="2" ry="2" />
<text  x="837.73" y="799.5" ></text>
</g>
<g >
<title>deno::http_util::create_http_client (4,442 samples, 14.13%)</title><rect x="834.5" y="901" width="166.7" height="15.0" fill="rgb(213,72,48)" rx="2" ry="2" />
<text  x="837.47" y="911.5" >deno::http_util::crea..</text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (5 samples, 0.02%)</title><rect x="1057.8" y="853" width="0.2" height="15.0" fill="rgb(247,85,48)" rx="2" ry="2" />
<text  x="1060.81" y="863.5" ></text>
</g>
<g >
<title>deno::flags::test_subcommand (645 samples, 2.05%)</title><rect x="163.3" y="1157" width="24.2" height="15.0" fill="rgb(206,91,47)" rx="2" ry="2" />
<text  x="166.29" y="1167.5" >d..</text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (27 samples, 0.09%)</title><rect x="163.9" y="1093" width="1.0" height="15.0" fill="rgb(247,225,9)" rx="2" ry="2" />
<text  x="166.89" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="178.3" y="1029" width="0.1" height="15.0" fill="rgb(247,14,36)" rx="2" ry="2" />
<text  x="181.27" y="1039.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (9 samples, 0.03%)</title><rect x="135.7" y="1093" width="0.4" height="15.0" fill="rgb(207,208,44)" rx="2" ry="2" />
<text  x="138.73" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (45 samples, 0.14%)</title><rect x="535.7" y="165" width="1.7" height="15.0" fill="rgb(242,181,37)" rx="2" ry="2" />
<text  x="538.67" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="100.6" y="1013" width="0.2" height="15.0" fill="rgb(234,75,12)" rx="2" ry="2" />
<text  x="103.63" y="1023.5" ></text>
</g>
<g >
<title>clap::app::validator::Validator::validate (165 samples, 0.52%)</title><rect x="17.9" y="1093" width="6.2" height="15.0" fill="rgb(245,113,46)" rx="2" ry="2" />
<text  x="20.92" y="1103.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::check_promise_exceptions (15 samples, 0.05%)</title><rect x="208.4" y="837" width="0.5" height="15.0" fill="rgb(218,100,10)" rx="2" ry="2" />
<text  x="211.37" y="847.5" ></text>
</g>
<g >
<title>_&lt;core..option..Option&lt;T&gt; as core..clone..Clone&gt;::clone (112 samples, 0.36%)</title><rect x="34.7" y="1061" width="4.2" height="15.0" fill="rgb(209,130,46)" rx="2" ry="2" />
<text  x="37.70" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (52 samples, 0.17%)</title><rect x="656.2" y="325" width="1.9" height="15.0" fill="rgb(238,148,46)" rx="2" ry="2" />
<text  x="659.18" y="335.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (12 samples, 0.04%)</title><rect x="127.1" y="1109" width="0.4" height="15.0" fill="rgb(234,16,37)" rx="2" ry="2" />
<text  x="130.10" y="1119.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as http..header..map..as_header_name..Sealed&gt;::find (14 samples, 0.04%)</title><rect x="666.4" y="821" width="0.6" height="15.0" fill="rgb(208,144,21)" rx="2" ry="2" />
<text  x="669.43" y="831.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (630 samples, 2.00%)</title><rect x="357.4" y="293" width="23.7" height="15.0" fill="rgb(216,139,24)" rx="2" ry="2" />
<text  x="360.42" y="303.5" >_..</text>
</g>
<g >
<title>alloc::slice::hack::to_vec (65 samples, 0.21%)</title><rect x="1127.6" y="533" width="2.4" height="15.0" fill="rgb(245,212,38)" rx="2" ry="2" />
<text  x="1130.60" y="543.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..ser..Serializer as serde..ser..Serializer&gt;::serialize_str (37 samples, 0.12%)</title><rect x="1113.0" y="565" width="1.4" height="15.0" fill="rgb(205,22,32)" rx="2" ry="2" />
<text  x="1115.96" y="575.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (7 samples, 0.02%)</title><rect x="1094.0" y="581" width="0.2" height="15.0" fill="rgb(249,119,18)" rx="2" ry="2" />
<text  x="1096.97" y="591.5" ></text>
</g>
<g >
<title>string_cache::dynamic_set::Set::insert (10 samples, 0.03%)</title><rect x="235.2" y="261" width="0.4" height="15.0" fill="rgb(222,204,13)" rx="2" ry="2" />
<text  x="238.22" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (27 samples, 0.09%)</title><rect x="1003.2" y="789" width="1.0" height="15.0" fill="rgb(246,221,0)" rx="2" ry="2" />
<text  x="1006.15" y="799.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (46 samples, 0.15%)</title><rect x="1062.4" y="885" width="1.7" height="15.0" fill="rgb(207,66,39)" rx="2" ry="2" />
<text  x="1065.36" y="895.5" ></text>
</g>
<g >
<title>_&lt;deno_core..es_isolate..EsIsolate as core..future..future..Future&gt;::poll (73 samples, 0.23%)</title><rect x="207.4" y="885" width="2.8" height="15.0" fill="rgb(221,206,45)" rx="2" ry="2" />
<text  x="210.44" y="895.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="1074.2" y="821" width="0.3" height="15.0" fill="rgb(229,13,33)" rx="2" ry="2" />
<text  x="1077.18" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="1057.0" y="709" width="0.1" height="15.0" fill="rgb(215,30,43)" rx="2" ry="2" />
<text  x="1059.99" y="719.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="262.7" y="581" width="0.2" height="15.0" fill="rgb(239,75,23)" rx="2" ry="2" />
<text  x="265.70" y="591.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (3 samples, 0.01%)</title><rect x="132.7" y="1029" width="0.1" height="15.0" fill="rgb(238,75,28)" rx="2" ry="2" />
<text  x="135.65" y="1039.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="758.7" y="789" width="0.2" height="15.0" fill="rgb(215,118,44)" rx="2" ry="2" />
<text  x="761.71" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.14%)</title><rect x="378.5" y="85" width="1.6" height="15.0" fill="rgb(232,10,37)" rx="2" ry="2" />
<text  x="381.48" y="95.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_string (12 samples, 0.04%)</title><rect x="269.3" y="517" width="0.5" height="15.0" fill="rgb(209,88,37)" rx="2" ry="2" />
<text  x="272.34" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="180.5" y="1077" width="0.1" height="15.0" fill="rgb(225,177,38)" rx="2" ry="2" />
<text  x="183.48" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="286.6" y="229" width="0.5" height="15.0" fill="rgb(208,12,6)" rx="2" ry="2" />
<text  x="289.58" y="239.5" ></text>
</g>
<g >
<title>rusty_v8::script_compiler::compile_module2 (3 samples, 0.01%)</title><rect x="622.1" y="789" width="0.1" height="15.0" fill="rgb(207,45,16)" rx="2" ry="2" />
<text  x="625.09" y="799.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="235.3" y="229" width="0.3" height="15.0" fill="rgb(238,169,45)" rx="2" ry="2" />
<text  x="238.29" y="239.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (90 samples, 0.29%)</title><rect x="281.0" y="213" width="3.4" height="15.0" fill="rgb(227,12,8)" rx="2" ry="2" />
<text  x="284.02" y="223.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (32 samples, 0.10%)</title><rect x="929.6" y="837" width="1.2" height="15.0" fill="rgb(247,141,12)" rx="2" ry="2" />
<text  x="932.60" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (22 samples, 0.07%)</title><rect x="640.6" y="581" width="0.8" height="15.0" fill="rgb(229,94,47)" rx="2" ry="2" />
<text  x="643.56" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="620.8" y="741" width="0.2" height="15.0" fill="rgb(207,154,27)" rx="2" ry="2" />
<text  x="623.78" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="586.5" y="629" width="0.3" height="15.0" fill="rgb(245,28,43)" rx="2" ry="2" />
<text  x="589.54" y="639.5" ></text>
</g>
<g >
<title>deno::flags::reload_arg (11 samples, 0.03%)</title><rect x="105.0" y="1141" width="0.4" height="15.0" fill="rgb(211,106,45)" rx="2" ry="2" />
<text  x="108.02" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="139.3" y="1093" width="0.3" height="15.0" fill="rgb(218,161,52)" rx="2" ry="2" />
<text  x="142.26" y="1103.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::find_equivalent (4 samples, 0.01%)</title><rect x="575.0" y="565" width="0.2" height="15.0" fill="rgb(222,71,26)" rx="2" ry="2" />
<text  x="578.02" y="575.5" ></text>
</g>
<g >
<title>serde_json::ser::Formatter::write_string_fragment (45 samples, 0.14%)</title><rect x="1164.6" y="501" width="1.7" height="15.0" fill="rgb(214,34,48)" rx="2" ry="2" />
<text  x="1167.58" y="511.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::new_callback_scope_data (13 samples, 0.04%)</title><rect x="1172.0" y="773" width="0.5" height="15.0" fill="rgb(251,108,9)" rx="2" ry="2" />
<text  x="1175.02" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="634.3" y="773" width="0.2" height="15.0" fill="rgb(231,197,4)" rx="2" ry="2" />
<text  x="637.33" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="623.0" y="741" width="0.1" height="15.0" fill="rgb(233,83,40)" rx="2" ry="2" />
<text  x="625.99" y="751.5" ></text>
</g>
<g >
<title>deno::worker::Worker::execute (206 samples, 0.66%)</title><rect x="1178.1" y="933" width="7.8" height="15.0" fill="rgb(254,163,47)" rx="2" ry="2" />
<text  x="1181.14" y="943.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_short (24 samples, 0.08%)</title><rect x="124.1" y="1093" width="0.9" height="15.0" fill="rgb(230,221,8)" rx="2" ry="2" />
<text  x="127.05" y="1103.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (345 samples, 1.10%)</title><rect x="457.2" y="149" width="13.0" height="15.0" fill="rgb(244,87,29)" rx="2" ry="2" />
<text  x="460.21" y="159.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.01%)</title><rect x="259.3" y="613" width="0.1" height="15.0" fill="rgb(212,166,26)" rx="2" ry="2" />
<text  x="262.28" y="623.5" ></text>
</g>
<g >
<title>std::sys_common::backtrace::__rust_begin_short_backtrace (31,422 samples, 99.97%)</title><rect x="10.1" y="1253" width="1179.6" height="15.0" fill="rgb(234,132,24)" rx="2" ry="2" />
<text  x="13.08" y="1263.5" >std::sys_common::backtrace::__rust_begin_short_backtrace</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="215.7" y="485" width="0.2" height="15.0" fill="rgb(226,99,27)" rx="2" ry="2" />
<text  x="218.73" y="495.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="240.8" y="597" width="0.2" height="15.0" fill="rgb(222,117,29)" rx="2" ry="2" />
<text  x="243.85" y="607.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="267.1" y="405" width="0.3" height="15.0" fill="rgb(214,23,13)" rx="2" ry="2" />
<text  x="270.09" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (14 samples, 0.04%)</title><rect x="759.8" y="805" width="0.5" height="15.0" fill="rgb(209,216,10)" rx="2" ry="2" />
<text  x="762.76" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="269.7" y="373" width="0.1" height="15.0" fill="rgb(235,125,18)" rx="2" ry="2" />
<text  x="272.68" y="383.5" ></text>
</g>
<g >
<title>deno::flags::repl_subcommand (107 samples, 0.34%)</title><rect x="137.3" y="1157" width="4.0" height="15.0" fill="rgb(253,26,32)" rx="2" ry="2" />
<text  x="140.31" y="1167.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (215 samples, 0.68%)</title><rect x="488.3" y="117" width="8.0" height="15.0" fill="rgb(230,134,22)" rx="2" ry="2" />
<text  x="491.25" y="127.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (60 samples, 0.19%)</title><rect x="271.4" y="469" width="2.3" height="15.0" fill="rgb(233,43,24)" rx="2" ry="2" />
<text  x="274.41" y="479.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="1186.7" y="837" width="0.2" height="15.0" fill="rgb(228,44,8)" rx="2" ry="2" />
<text  x="1189.70" y="847.5" ></text>
</g>
<g >
<title>unicode_xid::tables::derived_property::XID_Start (3 samples, 0.01%)</title><rect x="236.4" y="277" width="0.1" height="15.0" fill="rgb(251,167,44)" rx="2" ry="2" />
<text  x="239.42" y="287.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (11 samples, 0.03%)</title><rect x="546.4" y="261" width="0.5" height="15.0" fill="rgb(249,31,46)" rx="2" ry="2" />
<text  x="549.45" y="271.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="612.2" y="581" width="0.2" height="15.0" fill="rgb(208,177,48)" rx="2" ry="2" />
<text  x="615.18" y="591.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (10 samples, 0.03%)</title><rect x="1031.6" y="725" width="0.4" height="15.0" fill="rgb(213,112,53)" rx="2" ry="2" />
<text  x="1034.61" y="735.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (14 samples, 0.04%)</title><rect x="573.9" y="549" width="0.5" height="15.0" fill="rgb(236,196,35)" rx="2" ry="2" />
<text  x="576.85" y="559.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (94 samples, 0.30%)</title><rect x="1102.9" y="581" width="3.5" height="15.0" fill="rgb(227,97,39)" rx="2" ry="2" />
<text  x="1105.86" y="591.5" ></text>
</g>
<g >
<title>deno::flags::types_subcommand (25 samples, 0.08%)</title><rect x="187.5" y="1157" width="0.9" height="15.0" fill="rgb(239,141,26)" rx="2" ry="2" />
<text  x="190.50" y="1167.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="928.6" y="581" width="0.4" height="15.0" fill="rgb(233,224,1)" rx="2" ry="2" />
<text  x="931.59" y="591.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..ser..Serializer&lt;W,F&gt; as serde..ser..Serializer&gt;::serialize_str (52 samples, 0.17%)</title><rect x="1120.2" y="533" width="1.9" height="15.0" fill="rgb(251,173,20)" rx="2" ry="2" />
<text  x="1123.17" y="543.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (3 samples, 0.01%)</title><rect x="115.8" y="1109" width="0.1" height="15.0" fill="rgb(209,77,1)" rx="2" ry="2" />
<text  x="118.79" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="180.2" y="1061" width="0.2" height="15.0" fill="rgb(209,140,28)" rx="2" ry="2" />
<text  x="183.18" y="1071.5" ></text>
</g>
<g >
<title>deno::flags::lock_arg (9 samples, 0.03%)</title><rect x="88.4" y="1141" width="0.3" height="15.0" fill="rgb(242,117,41)" rx="2" ry="2" />
<text  x="91.35" y="1151.5" ></text>
</g>
<g >
<title>futures_channel::mpsc::Receiver&lt;T&gt;::next_message (6 samples, 0.02%)</title><rect x="645.7" y="773" width="0.3" height="15.0" fill="rgb(233,17,19)" rx="2" ry="2" />
<text  x="648.75" y="783.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="1004.4" y="837" width="0.3" height="15.0" fill="rgb(242,30,31)" rx="2" ry="2" />
<text  x="1007.43" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="119.1" y="1013" width="0.1" height="15.0" fill="rgb(246,13,14)" rx="2" ry="2" />
<text  x="122.10" y="1023.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.03%)</title><rect x="1178.7" y="853" width="0.4" height="15.0" fill="rgb(251,94,26)" rx="2" ry="2" />
<text  x="1181.74" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="1060.3" y="741" width="0.4" height="15.0" fill="rgb(235,174,25)" rx="2" ry="2" />
<text  x="1063.33" y="751.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (47 samples, 0.15%)</title><rect x="571.7" y="469" width="1.8" height="15.0" fill="rgb(251,71,29)" rx="2" ry="2" />
<text  x="574.75" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="1072.9" y="741" width="0.3" height="15.0" fill="rgb(208,57,51)" rx="2" ry="2" />
<text  x="1075.87" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="154.8" y="1045" width="0.2" height="15.0" fill="rgb(206,54,54)" rx="2" ry="2" />
<text  x="157.84" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="239.5" y="597" width="0.1" height="15.0" fill="rgb(216,95,50)" rx="2" ry="2" />
<text  x="242.50" y="607.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="549.4" y="133" width="0.2" height="15.0" fill="rgb(250,198,30)" rx="2" ry="2" />
<text  x="552.41" y="143.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="191.1" y="1125" width="0.5" height="15.0" fill="rgb(225,52,53)" rx="2" ry="2" />
<text  x="194.11" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (72 samples, 0.23%)</title><rect x="146.6" y="1029" width="2.7" height="15.0" fill="rgb(245,143,43)" rx="2" ry="2" />
<text  x="149.58" y="1039.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="178.1" y="1109" width="0.3" height="15.0" fill="rgb(247,110,6)" rx="2" ry="2" />
<text  x="181.08" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="611.2" y="597" width="0.2" height="15.0" fill="rgb(217,181,38)" rx="2" ry="2" />
<text  x="614.24" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="203.1" y="1061" width="0.1" height="15.0" fill="rgb(243,43,21)" rx="2" ry="2" />
<text  x="206.08" y="1071.5" ></text>
</g>
<g >
<title>mio::sys::unix::epoll::Events::with_capacity (5 samples, 0.02%)</title><rect x="203.0" y="1093" width="0.2" height="15.0" fill="rgb(239,190,50)" rx="2" ry="2" />
<text  x="206.01" y="1103.5" ></text>
</g>
<g >
<title>clap::app::App::get_matches_from_safe (1,597 samples, 5.08%)</title><rect x="13.0" y="1173" width="60.0" height="15.0" fill="rgb(238,91,27)" rx="2" ry="2" />
<text  x="16.04" y="1183.5" >clap::..</text>
</g>
<g >
<title>deno::tsc::TsCompiler::has_compiled_source (175 samples, 0.56%)</title><rect x="261.9" y="677" width="6.5" height="15.0" fill="rgb(221,66,22)" rx="2" ry="2" />
<text  x="264.87" y="687.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize::_{{closure}} (4 samples, 0.01%)</title><rect x="1003.3" y="725" width="0.2" height="15.0" fill="rgb(231,148,5)" rx="2" ry="2" />
<text  x="1006.30" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="928.7" y="549" width="0.3" height="15.0" fill="rgb(229,19,30)" rx="2" ry="2" />
<text  x="931.74" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (11 samples, 0.03%)</title><rect x="144.4" y="1093" width="0.4" height="15.0" fill="rgb(218,200,19)" rx="2" ry="2" />
<text  x="147.36" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="105.2" y="1093" width="0.2" height="15.0" fill="rgb(205,152,3)" rx="2" ry="2" />
<text  x="108.21" y="1103.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="177.7" y="1093" width="0.3" height="15.0" fill="rgb(243,192,5)" rx="2" ry="2" />
<text  x="180.74" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.03%)</title><rect x="599.5" y="565" width="0.3" height="15.0" fill="rgb(232,170,37)" rx="2" ry="2" />
<text  x="602.49" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="222.9" y="613" width="0.2" height="15.0" fill="rgb(241,163,36)" rx="2" ry="2" />
<text  x="225.90" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (172 samples, 0.55%)</title><rect x="429.9" y="53" width="6.4" height="15.0" fill="rgb(219,195,18)" rx="2" ry="2" />
<text  x="432.88" y="63.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Cloned&lt;I&gt; as core..iter..traits..iterator..Iterator&gt;::fold (22 samples, 0.07%)</title><rect x="829.6" y="789" width="0.8" height="15.0" fill="rgb(230,27,44)" rx="2" ry="2" />
<text  x="832.55" y="799.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="222.5" y="629" width="0.3" height="15.0" fill="rgb(241,23,27)" rx="2" ry="2" />
<text  x="225.49" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="239.7" y="629" width="0.1" height="15.0" fill="rgb(208,52,6)" rx="2" ry="2" />
<text  x="242.69" y="639.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="1061.9" y="789" width="0.2" height="15.0" fill="rgb(243,59,22)" rx="2" ry="2" />
<text  x="1064.90" y="799.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="757.6" y="581" width="0.5" height="15.0" fill="rgb(251,92,51)" rx="2" ry="2" />
<text  x="760.62" y="591.5" ></text>
</g>
<g >
<title>deno::tsc::TsCompiler::get_compiled_module (87 samples, 0.28%)</title><rect x="614.3" y="597" width="3.3" height="15.0" fill="rgb(226,194,49)" rx="2" ry="2" />
<text  x="617.32" y="607.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileFetcher::fetch_source_file::_{{closure}} (163 samples, 0.52%)</title><rect x="211.6" y="581" width="6.2" height="15.0" fill="rgb(209,8,0)" rx="2" ry="2" />
<text  x="214.64" y="591.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="101.5" y="1061" width="0.1" height="15.0" fill="rgb(222,124,4)" rx="2" ry="2" />
<text  x="104.53" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (383 samples, 1.22%)</title><rect x="244.6" y="565" width="14.4" height="15.0" fill="rgb(237,59,36)" rx="2" ry="2" />
<text  x="247.60" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (6 samples, 0.02%)</title><rect x="1177.9" y="853" width="0.2" height="15.0" fill="rgb(210,125,26)" rx="2" ry="2" />
<text  x="1180.91" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="999.5" y="805" width="0.1" height="15.0" fill="rgb(213,203,14)" rx="2" ry="2" />
<text  x="1002.47" y="815.5" ></text>
</g>
<g >
<title>serde::de::impls::_&lt;impl serde..de..Deserialize for alloc..string..String&gt;::deserialize (52 samples, 0.17%)</title><rect x="271.7" y="437" width="2.0" height="15.0" fill="rgb(228,176,2)" rx="2" ry="2" />
<text  x="274.71" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.05%)</title><rect x="599.2" y="581" width="0.6" height="15.0" fill="rgb(250,53,30)" rx="2" ry="2" />
<text  x="602.19" y="591.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (388 samples, 1.23%)</title><rect x="455.6" y="165" width="14.6" height="15.0" fill="rgb(212,14,12)" rx="2" ry="2" />
<text  x="458.59" y="175.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="154.2" y="1093" width="0.3" height="15.0" fill="rgb(239,148,16)" rx="2" ry="2" />
<text  x="157.24" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="223.4" y="597" width="0.1" height="15.0" fill="rgb(228,185,37)" rx="2" ry="2" />
<text  x="226.35" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="101.8" y="1077" width="0.3" height="15.0" fill="rgb(253,102,45)" rx="2" ry="2" />
<text  x="104.83" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="75.3" y="1029" width="0.2" height="15.0" fill="rgb(244,97,19)" rx="2" ry="2" />
<text  x="78.29" y="1039.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="207.6" y="821" width="0.1" height="15.0" fill="rgb(238,5,54)" rx="2" ry="2" />
<text  x="210.59" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (50 samples, 0.16%)</title><rect x="200.2" y="1125" width="1.9" height="15.0" fill="rgb(224,27,21)" rx="2" ry="2" />
<text  x="203.23" y="1135.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (61 samples, 0.19%)</title><rect x="655.8" y="453" width="2.3" height="15.0" fill="rgb(227,168,19)" rx="2" ry="2" />
<text  x="658.84" y="463.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (18 samples, 0.06%)</title><rect x="1033.1" y="837" width="0.7" height="15.0" fill="rgb(231,153,13)" rx="2" ry="2" />
<text  x="1036.15" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="177.5" y="1077" width="0.2" height="15.0" fill="rgb(209,172,15)" rx="2" ry="2" />
<text  x="180.48" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (13 samples, 0.04%)</title><rect x="73.7" y="1141" width="0.5" height="15.0" fill="rgb(230,30,34)" rx="2" ry="2" />
<text  x="76.67" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="839.1" y="581" width="0.2" height="15.0" fill="rgb(237,130,38)" rx="2" ry="2" />
<text  x="842.09" y="591.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="645.0" y="661" width="0.3" height="15.0" fill="rgb(229,93,17)" rx="2" ry="2" />
<text  x="647.99" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (12 samples, 0.04%)</title><rect x="219.0" y="645" width="0.4" height="15.0" fill="rgb(230,47,44)" rx="2" ry="2" />
<text  x="221.96" y="655.5" ></text>
</g>
<g >
<title>url::file_url_segments_to_pathbuf (46 samples, 0.15%)</title><rect x="615.9" y="517" width="1.7" height="15.0" fill="rgb(237,49,9)" rx="2" ry="2" />
<text  x="618.86" y="527.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (69 samples, 0.22%)</title><rect x="579.9" y="549" width="2.6" height="15.0" fill="rgb(220,190,38)" rx="2" ry="2" />
<text  x="582.90" y="559.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (8,075 samples, 25.69%)</title><rect x="270.4" y="597" width="303.1" height="15.0" fill="rgb(215,189,31)" rx="2" ry="2" />
<text  x="273.36" y="607.5" >serde::de::MapAccess::next_value</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="611.2" y="613" width="0.2" height="15.0" fill="rgb(222,84,40)" rx="2" ry="2" />
<text  x="614.21" y="623.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_url (266 samples, 0.85%)</title><rect x="590.3" y="741" width="9.9" height="15.0" fill="rgb(206,32,30)" rx="2" ry="2" />
<text  x="593.26" y="751.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (79 samples, 0.25%)</title><rect x="630.1" y="709" width="2.9" height="15.0" fill="rgb(212,87,51)" rx="2" ry="2" />
<text  x="633.05" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="837.1" y="853" width="0.2" height="15.0" fill="rgb(226,227,53)" rx="2" ry="2" />
<text  x="840.10" y="863.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (5 samples, 0.02%)</title><rect x="619.9" y="789" width="0.2" height="15.0" fill="rgb(225,47,34)" rx="2" ry="2" />
<text  x="622.88" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="1002.8" y="821" width="0.2" height="15.0" fill="rgb(248,187,2)" rx="2" ry="2" />
<text  x="1005.81" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (10 samples, 0.03%)</title><rect x="570.8" y="277" width="0.3" height="15.0" fill="rgb(218,53,35)" rx="2" ry="2" />
<text  x="573.77" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="91.1" y="1061" width="0.2" height="15.0" fill="rgb(209,179,2)" rx="2" ry="2" />
<text  x="94.05" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="830.3" y="613" width="0.1" height="15.0" fill="rgb(241,154,18)" rx="2" ry="2" />
<text  x="833.27" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="269.0" y="437" width="0.2" height="15.0" fill="rgb(230,85,54)" rx="2" ry="2" />
<text  x="272.01" y="447.5" ></text>
</g>
<g >
<title>serde::de::impls::_&lt;impl serde..de..Deserialize for alloc..string..String&gt;::deserialize (195 samples, 0.62%)</title><rect x="277.1" y="325" width="7.3" height="15.0" fill="rgb(234,39,25)" rx="2" ry="2" />
<text  x="280.08" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="621.2" y="677" width="0.1" height="15.0" fill="rgb(233,43,49)" rx="2" ry="2" />
<text  x="624.16" y="687.5" ></text>
</g>
<g >
<title>deno::ops::tls::init (94 samples, 0.30%)</title><rect x="1076.4" y="901" width="3.5" height="15.0" fill="rgb(230,37,7)" rx="2" ry="2" />
<text  x="1079.40" y="911.5" ></text>
</g>
<g >
<title>_&lt;&amp;T as core..fmt..Display&gt;::fmt (13 samples, 0.04%)</title><rect x="210.5" y="805" width="0.5" height="15.0" fill="rgb(229,86,1)" rx="2" ry="2" />
<text  x="213.48" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="87.1" y="997" width="0.2" height="15.0" fill="rgb(226,139,37)" rx="2" ry="2" />
<text  x="90.15" y="1007.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="226.7" y="597" width="0.3" height="15.0" fill="rgb(238,60,6)" rx="2" ry="2" />
<text  x="229.73" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="613.9" y="517" width="0.3" height="15.0" fill="rgb(217,194,5)" rx="2" ry="2" />
<text  x="616.95" y="527.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (12 samples, 0.04%)</title><rect x="1171.3" y="789" width="0.5" height="15.0" fill="rgb(223,5,3)" rx="2" ry="2" />
<text  x="1174.34" y="799.5" ></text>
</g>
<g >
<title>_&lt;core..mem..manually_drop..ManuallyDrop&lt;T&gt; as core..clone..Clone&gt;::clone (3 samples, 0.01%)</title><rect x="209.9" y="741" width="0.1" height="15.0" fill="rgb(236,215,7)" rx="2" ry="2" />
<text  x="212.88" y="751.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::drop_root (6 samples, 0.02%)</title><rect x="646.7" y="805" width="0.2" height="15.0" fill="rgb(236,10,36)" rx="2" ry="2" />
<text  x="649.68" y="815.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="25.6" y="1061" width="0.2" height="15.0" fill="rgb(225,96,41)" rx="2" ry="2" />
<text  x="28.58" y="1071.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_fold::_{{closure}} (18 samples, 0.06%)</title><rect x="667.7" y="677" width="0.6" height="15.0" fill="rgb(233,145,33)" rx="2" ry="2" />
<text  x="670.67" y="687.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (80 samples, 0.25%)</title><rect x="582.5" y="581" width="3.0" height="15.0" fill="rgb(244,198,45)" rx="2" ry="2" />
<text  x="585.49" y="591.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (619 samples, 1.97%)</title><rect x="297.7" y="357" width="23.2" height="15.0" fill="rgb(229,229,20)" rx="2" ry="2" />
<text  x="300.69" y="367.5" >_..</text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="260.7" y="613" width="0.3" height="15.0" fill="rgb(232,91,2)" rx="2" ry="2" />
<text  x="263.75" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (6 samples, 0.02%)</title><rect x="1132.5" y="549" width="0.2" height="15.0" fill="rgb(215,177,18)" rx="2" ry="2" />
<text  x="1135.48" y="559.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..fmt..Display&gt;::fmt (44 samples, 0.14%)</title><rect x="220.7" y="613" width="1.7" height="15.0" fill="rgb(252,206,18)" rx="2" ry="2" />
<text  x="223.73" y="623.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.08%)</title><rect x="56.5" y="1013" width="1.0" height="15.0" fill="rgb(208,213,16)" rx="2" ry="2" />
<text  x="59.52" y="1023.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.01%)</title><rect x="220.0" y="565" width="0.1" height="15.0" fill="rgb(246,102,45)" rx="2" ry="2" />
<text  x="222.98" y="575.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::parse (12 samples, 0.04%)</title><rect x="663.3" y="885" width="0.5" height="15.0" fill="rgb(230,183,33)" rx="2" ry="2" />
<text  x="666.32" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="144.7" y="1029" width="0.1" height="15.0" fill="rgb(229,157,20)" rx="2" ry="2" />
<text  x="147.67" y="1039.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_token (6 samples, 0.02%)</title><rect x="238.1" y="325" width="0.2" height="15.0" fill="rgb(253,40,50)" rx="2" ry="2" />
<text  x="241.11" y="335.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (18 samples, 0.06%)</title><rect x="212.1" y="469" width="0.7" height="15.0" fill="rgb(226,28,38)" rx="2" ry="2" />
<text  x="215.13" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="87.9" y="1061" width="0.1" height="15.0" fill="rgb(229,216,26)" rx="2" ry="2" />
<text  x="90.86" y="1071.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::find_equivalent (4 samples, 0.01%)</title><rect x="571.2" y="325" width="0.2" height="15.0" fill="rgb(241,191,29)" rx="2" ry="2" />
<text  x="574.22" y="335.5" ></text>
</g>
<g >
<title>_&lt;url..Url as core..hash..Hash&gt;::hash (6 samples, 0.02%)</title><rect x="219.1" y="565" width="0.3" height="15.0" fill="rgb(237,192,5)" rx="2" ry="2" />
<text  x="222.15" y="575.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (7 samples, 0.02%)</title><rect x="1098.7" y="757" width="0.3" height="15.0" fill="rgb(232,201,4)" rx="2" ry="2" />
<text  x="1101.73" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="1123.7" y="469" width="0.3" height="15.0" fill="rgb(231,29,21)" rx="2" ry="2" />
<text  x="1126.74" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="203.0" y="1077" width="0.2" height="15.0" fill="rgb(220,89,43)" rx="2" ry="2" />
<text  x="206.04" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="226.8" y="581" width="0.2" height="15.0" fill="rgb(228,196,25)" rx="2" ry="2" />
<text  x="229.81" y="591.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="619.4" y="789" width="0.3" height="15.0" fill="rgb(249,79,45)" rx="2" ry="2" />
<text  x="622.43" y="799.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope::with_context (5 samples, 0.02%)</title><rect x="619.0" y="821" width="0.2" height="15.0" fill="rgb(232,74,24)" rx="2" ry="2" />
<text  x="621.98" y="831.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (13 samples, 0.04%)</title><rect x="269.9" y="533" width="0.5" height="15.0" fill="rgb(230,35,37)" rx="2" ry="2" />
<text  x="272.87" y="543.5" ></text>
</g>
<g >
<title>tokio::util::slab::Slab&lt;T&gt;::new (28 samples, 0.09%)</title><rect x="203.6" y="1109" width="1.1" height="15.0" fill="rgb(250,66,17)" rx="2" ry="2" />
<text  x="206.61" y="1119.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (15 samples, 0.05%)</title><rect x="124.4" y="1045" width="0.6" height="15.0" fill="rgb(249,56,5)" rx="2" ry="2" />
<text  x="127.39" y="1055.5" ></text>
</g>
<g >
<title>deno::flags::lock_args_parse (13 samples, 0.04%)</title><rect x="194.8" y="1141" width="0.5" height="15.0" fill="rgb(252,171,40)" rx="2" ry="2" />
<text  x="197.82" y="1151.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="614.6" y="469" width="0.3" height="15.0" fill="rgb(238,25,34)" rx="2" ry="2" />
<text  x="617.62" y="479.5" ></text>
</g>
<g >
<title>_&lt;str as serde_json..value..index..Index&gt;::index_into (17 samples, 0.05%)</title><rect x="574.5" y="645" width="0.7" height="15.0" fill="rgb(208,163,37)" rx="2" ry="2" />
<text  x="577.53" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="588.3" y="613" width="0.1" height="15.0" fill="rgb(247,187,28)" rx="2" ry="2" />
<text  x="591.27" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="582.3" y="453" width="0.1" height="15.0" fill="rgb(214,85,28)" rx="2" ry="2" />
<text  x="585.30" y="463.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="168.2" y="1045" width="0.2" height="15.0" fill="rgb(217,53,14)" rx="2" ry="2" />
<text  x="171.24" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="90.9" y="1077" width="0.4" height="15.0" fill="rgb(242,31,50)" rx="2" ry="2" />
<text  x="93.94" y="1087.5" ></text>
</g>
<g >
<title>_&lt;serde_json..ser..MapKeySerializer&lt;W,F&gt; as serde..ser..Serializer&gt;::serialize_str (8 samples, 0.03%)</title><rect x="1117.8" y="597" width="0.3" height="15.0" fill="rgb(224,17,18)" rx="2" ry="2" />
<text  x="1120.81" y="607.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="195.5" y="1077" width="0.1" height="15.0" fill="rgb(229,156,51)" rx="2" ry="2" />
<text  x="198.46" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="154.4" y="1045" width="0.1" height="15.0" fill="rgb(210,21,53)" rx="2" ry="2" />
<text  x="157.35" y="1055.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (14 samples, 0.04%)</title><rect x="269.3" y="549" width="0.5" height="15.0" fill="rgb(228,107,15)" rx="2" ry="2" />
<text  x="272.27" y="559.5" ></text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="613.5" y="549" width="0.3" height="15.0" fill="rgb(247,106,54)" rx="2" ry="2" />
<text  x="616.46" y="559.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_member_expr_or_new_expr (16 samples, 0.05%)</title><rect x="233.7" y="325" width="0.6" height="15.0" fill="rgb(216,125,6)" rx="2" ry="2" />
<text  x="236.68" y="335.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="216.6" y="421" width="0.1" height="15.0" fill="rgb(244,214,11)" rx="2" ry="2" />
<text  x="219.56" y="431.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (13 samples, 0.04%)</title><rect x="225.1" y="485" width="0.5" height="15.0" fill="rgb(213,223,25)" rx="2" ry="2" />
<text  x="228.08" y="495.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::possible_values (12 samples, 0.04%)</title><rect x="99.9" y="1141" width="0.4" height="15.0" fill="rgb(216,212,6)" rx="2" ry="2" />
<text  x="102.88" y="1151.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (49 samples, 0.16%)</title><rect x="158.6" y="1045" width="1.8" height="15.0" fill="rgb(225,112,23)" rx="2" ry="2" />
<text  x="161.56" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (30 samples, 0.10%)</title><rect x="829.3" y="853" width="1.1" height="15.0" fill="rgb(227,203,29)" rx="2" ry="2" />
<text  x="832.25" y="863.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (11 samples, 0.03%)</title><rect x="1070.6" y="853" width="0.4" height="15.0" fill="rgb(227,108,43)" rx="2" ry="2" />
<text  x="1073.58" y="863.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_str (12 samples, 0.04%)</title><rect x="546.4" y="277" width="0.5" height="15.0" fill="rgb(238,87,33)" rx="2" ry="2" />
<text  x="549.41" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="1180.8" y="821" width="0.2" height="15.0" fill="rgb(208,93,36)" rx="2" ry="2" />
<text  x="1183.80" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (26,180 samples, 83.29%)</title><rect x="206.8" y="1125" width="982.9" height="15.0" fill="rgb(243,167,9)" rx="2" ry="2" />
<text  x="209.84" y="1135.5" >tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on</text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="1058.2" y="789" width="0.2" height="15.0" fill="rgb(250,227,31)" rx="2" ry="2" />
<text  x="1061.19" y="799.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (18 samples, 0.06%)</title><rect x="124.3" y="1061" width="0.7" height="15.0" fill="rgb(238,115,26)" rx="2" ry="2" />
<text  x="127.28" y="1071.5" ></text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (12 samples, 0.04%)</title><rect x="660.6" y="885" width="0.4" height="15.0" fill="rgb(248,227,17)" rx="2" ry="2" />
<text  x="663.57" y="895.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (3 samples, 0.01%)</title><rect x="574.8" y="581" width="0.1" height="15.0" fill="rgb(205,191,23)" rx="2" ry="2" />
<text  x="577.83" y="591.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::ops::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_bin_expr (154 samples, 0.49%)</title><rect x="233.0" y="517" width="5.8" height="15.0" fill="rgb(229,103,28)" rx="2" ry="2" />
<text  x="236.04" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="1098.8" y="709" width="0.2" height="15.0" fill="rgb(215,144,32)" rx="2" ry="2" />
<text  x="1101.85" y="719.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc..string..String,serde_json..value..Value&gt;::insert (57 samples, 0.18%)</title><rect x="571.4" y="501" width="2.1" height="15.0" fill="rgb(237,33,52)" rx="2" ry="2" />
<text  x="574.37" y="511.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert::_{{closure}} (16 samples, 0.05%)</title><rect x="1003.5" y="757" width="0.6" height="15.0" fill="rgb(223,74,16)" rx="2" ry="2" />
<text  x="1006.45" y="767.5" ></text>
</g>
<g >
<title>_&lt;serde..de..impls..StringVisitor as serde..de..Visitor&gt;::visit_str (388 samples, 1.23%)</title><rect x="334.8" y="277" width="14.5" height="15.0" fill="rgb(218,80,12)" rx="2" ry="2" />
<text  x="337.78" y="287.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="633.4" y="805" width="0.1" height="15.0" fill="rgb(242,94,32)" rx="2" ry="2" />
<text  x="636.36" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="128.6" y="1077" width="0.2" height="15.0" fill="rgb(207,64,8)" rx="2" ry="2" />
<text  x="131.63" y="1087.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..DeserializeSeed&gt;::deserialize (13 samples, 0.04%)</title><rect x="268.7" y="581" width="0.5" height="15.0" fill="rgb(230,58,52)" rx="2" ry="2" />
<text  x="271.67" y="591.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::find_equivalent (4 samples, 0.01%)</title><rect x="293.3" y="309" width="0.1" height="15.0" fill="rgb(235,88,40)" rx="2" ry="2" />
<text  x="296.26" y="319.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.03%)</title><rect x="212.4" y="405" width="0.4" height="15.0" fill="rgb(231,53,22)" rx="2" ry="2" />
<text  x="215.43" y="415.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::take (4 samples, 0.01%)</title><rect x="1186.4" y="869" width="0.1" height="15.0" fill="rgb(226,57,25)" rx="2" ry="2" />
<text  x="1189.40" y="879.5" ></text>
</g>
<g >
<title>swc_ecma_visit::Visit::visit_call_expr (4 samples, 0.01%)</title><rect x="239.0" y="517" width="0.1" height="15.0" fill="rgb(225,203,22)" rx="2" ry="2" />
<text  x="241.97" y="527.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Display&gt;::fmt (10 samples, 0.03%)</title><rect x="600.6" y="677" width="0.4" height="15.0" fill="rgb(211,195,50)" rx="2" ry="2" />
<text  x="603.62" y="687.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="119.4" y="1077" width="0.2" height="15.0" fill="rgb(250,0,35)" rx="2" ry="2" />
<text  x="122.44" y="1087.5" ></text>
</g>
<g >
<title>_&lt;serde..de..impls..StringVisitor as serde..de..Visitor&gt;::visit_str (9 samples, 0.03%)</title><rect x="269.5" y="469" width="0.3" height="15.0" fill="rgb(216,132,29)" rx="2" ry="2" />
<text  x="272.46" y="479.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_with (16 samples, 0.05%)</title><rect x="1088.4" y="805" width="0.6" height="15.0" fill="rgb(225,53,45)" rx="2" ry="2" />
<text  x="1091.41" y="815.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (71 samples, 0.23%)</title><rect x="60.8" y="1061" width="2.7" height="15.0" fill="rgb(248,117,10)" rx="2" ry="2" />
<text  x="63.83" y="1071.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (17 samples, 0.05%)</title><rect x="1116.7" y="645" width="0.6" height="15.0" fill="rgb(209,52,15)" rx="2" ry="2" />
<text  x="1119.68" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="77.2" y="1045" width="0.3" height="15.0" fill="rgb(224,96,43)" rx="2" ry="2" />
<text  x="80.24" y="1055.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (84 samples, 0.27%)</title><rect x="170.4" y="1045" width="3.1" height="15.0" fill="rgb(238,131,16)" rx="2" ry="2" />
<text  x="173.38" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="20.5" y="901" width="0.2" height="15.0" fill="rgb(228,156,36)" rx="2" ry="2" />
<text  x="23.51" y="911.5" ></text>
</g>
<g >
<title>core::mem::drop (8 samples, 0.03%)</title><rect x="587.1" y="725" width="0.3" height="15.0" fill="rgb(250,139,6)" rx="2" ry="2" />
<text  x="590.10" y="735.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (3 samples, 0.01%)</title><rect x="1057.6" y="789" width="0.1" height="15.0" fill="rgb(221,43,22)" rx="2" ry="2" />
<text  x="1060.59" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert::_{{closure}} (133 samples, 0.42%)</title><rect x="1049.9" y="757" width="5.0" height="15.0" fill="rgb(254,187,18)" rx="2" ry="2" />
<text  x="1052.93" y="767.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::trim_left_matches (5 samples, 0.02%)</title><rect x="89.4" y="1109" width="0.2" height="15.0" fill="rgb(227,61,16)" rx="2" ry="2" />
<text  x="92.40" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="618.8" y="773" width="0.1" height="15.0" fill="rgb(205,186,40)" rx="2" ry="2" />
<text  x="621.79" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="226.2" y="373" width="0.2" height="15.0" fill="rgb(221,194,43)" rx="2" ry="2" />
<text  x="229.21" y="383.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="243.4" y="613" width="0.2" height="15.0" fill="rgb(213,39,12)" rx="2" ry="2" />
<text  x="246.44" y="623.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V&gt;::with_capacity (21 samples, 0.07%)</title><rect x="832.9" y="869" width="0.7" height="15.0" fill="rgb(235,107,54)" rx="2" ry="2" />
<text  x="835.86" y="879.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.08%)</title><rect x="148.4" y="997" width="0.9" height="15.0" fill="rgb(225,212,49)" rx="2" ry="2" />
<text  x="151.38" y="1007.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="218.2" y="613" width="0.2" height="15.0" fill="rgb(216,128,28)" rx="2" ry="2" />
<text  x="221.25" y="623.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="835.7" y="773" width="0.1" height="15.0" fill="rgb(233,11,37)" rx="2" ry="2" />
<text  x="838.67" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="663.5" y="789" width="0.3" height="15.0" fill="rgb(229,156,22)" rx="2" ry="2" />
<text  x="666.54" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="998.8" y="741" width="0.1" height="15.0" fill="rgb(209,185,47)" rx="2" ry="2" />
<text  x="1001.80" y="751.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (185 samples, 0.59%)</title><rect x="1048.1" y="853" width="6.9" height="15.0" fill="rgb(219,169,49)" rx="2" ry="2" />
<text  x="1051.09" y="863.5" ></text>
</g>
<g >
<title>rusty_v8::module::_&lt;impl rusty_v8..data..Module&gt;::evaluate::_{{closure}} (29 samples, 0.09%)</title><rect x="635.6" y="853" width="1.1" height="15.0" fill="rgb(234,23,32)" rx="2" ry="2" />
<text  x="638.57" y="863.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="13.8" y="1093" width="0.3" height="15.0" fill="rgb(232,81,23)" rx="2" ry="2" />
<text  x="16.75" y="1103.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (50 samples, 0.16%)</title><rect x="1090.4" y="773" width="1.9" height="15.0" fill="rgb(248,115,4)" rx="2" ry="2" />
<text  x="1093.44" y="783.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_str (12 samples, 0.04%)</title><rect x="270.7" y="469" width="0.4" height="15.0" fill="rgb(253,48,52)" rx="2" ry="2" />
<text  x="273.66" y="479.5" ></text>
</g>
<g >
<title>reqwest::async_impl::client::ClientBuilder::default_headers (21 samples, 0.07%)</title><rect x="1000.4" y="885" width="0.8" height="15.0" fill="rgb(218,214,50)" rx="2" ry="2" />
<text  x="1003.45" y="895.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="548.6" y="181" width="0.4" height="15.0" fill="rgb(228,14,52)" rx="2" ry="2" />
<text  x="551.62" y="191.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (16 samples, 0.05%)</title><rect x="83.1" y="1045" width="0.6" height="15.0" fill="rgb(250,4,51)" rx="2" ry="2" />
<text  x="86.10" y="1055.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="100.6" y="1029" width="0.2" height="15.0" fill="rgb(209,24,20)" rx="2" ry="2" />
<text  x="103.59" y="1039.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (86 samples, 0.27%)</title><rect x="433.1" y="37" width="3.2" height="15.0" fill="rgb(249,46,52)" rx="2" ry="2" />
<text  x="436.10" y="47.5" ></text>
</g>
<g >
<title>reqwest::proxy::Proxy::system (13 samples, 0.04%)</title><rect x="758.4" y="869" width="0.5" height="15.0" fill="rgb(206,45,52)" rx="2" ry="2" />
<text  x="761.45" y="879.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (32 samples, 0.10%)</title><rect x="221.2" y="565" width="1.2" height="15.0" fill="rgb(241,36,4)" rx="2" ry="2" />
<text  x="224.18" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (7 samples, 0.02%)</title><rect x="14.2" y="1093" width="0.3" height="15.0" fill="rgb(232,59,23)" rx="2" ry="2" />
<text  x="17.24" y="1103.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.03%)</title><rect x="269.4" y="485" width="0.4" height="15.0" fill="rgb(209,217,32)" rx="2" ry="2" />
<text  x="272.42" y="495.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (15 samples, 0.05%)</title><rect x="1080.2" y="853" width="0.6" height="15.0" fill="rgb(230,101,39)" rx="2" ry="2" />
<text  x="1083.19" y="863.5" ></text>
</g>
<g >
<title>rustls::anchors::OwnedTrustAnchor::from_trust_anchor::_{{closure}} (14 samples, 0.04%)</title><rect x="998.4" y="821" width="0.5" height="15.0" fill="rgb(224,178,21)" rx="2" ry="2" />
<text  x="1001.42" y="831.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.02%)</title><rect x="20.4" y="949" width="0.3" height="15.0" fill="rgb(212,161,26)" rx="2" ry="2" />
<text  x="23.40" y="959.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="168.2" y="1061" width="0.2" height="15.0" fill="rgb(211,4,45)" rx="2" ry="2" />
<text  x="171.20" y="1071.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_assignment_expr (23 samples, 0.07%)</title><rect x="233.4" y="437" width="0.9" height="15.0" fill="rgb(243,221,9)" rx="2" ry="2" />
<text  x="236.42" y="447.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="1005.2" y="773" width="0.4" height="15.0" fill="rgb(221,191,46)" rx="2" ry="2" />
<text  x="1008.18" y="783.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (24 samples, 0.08%)</title><rect x="152.2" y="1029" width="0.9" height="15.0" fill="rgb(216,70,46)" rx="2" ry="2" />
<text  x="155.21" y="1039.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (9 samples, 0.03%)</title><rect x="267.5" y="597" width="0.3" height="15.0" fill="rgb(213,118,36)" rx="2" ry="2" />
<text  x="270.50" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (10 samples, 0.03%)</title><rect x="155.4" y="1061" width="0.4" height="15.0" fill="rgb(233,31,20)" rx="2" ry="2" />
<text  x="158.40" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="210.7" y="693" width="0.3" height="15.0" fill="rgb(254,180,32)" rx="2" ry="2" />
<text  x="213.74" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (5 samples, 0.02%)</title><rect x="1116.8" y="613" width="0.2" height="15.0" fill="rgb(208,108,31)" rx="2" ry="2" />
<text  x="1119.83" y="623.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="547.8" y="117" width="0.4" height="15.0" fill="rgb(250,108,40)" rx="2" ry="2" />
<text  x="550.80" y="127.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..string..ToString&gt;::to_string (30 samples, 0.10%)</title><rect x="211.7" y="565" width="1.1" height="15.0" fill="rgb(237,133,26)" rx="2" ry="2" />
<text  x="214.68" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (4 samples, 0.01%)</title><rect x="1041.8" y="821" width="0.1" height="15.0" fill="rgb(238,157,28)" rx="2" ry="2" />
<text  x="1044.78" y="831.5" ></text>
</g>
<g >
<title>_&lt;core..slice..Iter&lt;T&gt; as core..iter..traits..iterator..Iterator&gt;::find (4 samples, 0.01%)</title><rect x="15.1" y="1093" width="0.2" height="15.0" fill="rgb(244,95,14)" rx="2" ry="2" />
<text  x="18.14" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..slice..Iter&lt;T&gt; as core..iter..traits..iterator..Iterator&gt;::for_each (19 samples, 0.06%)</title><rect x="239.9" y="597" width="0.8" height="15.0" fill="rgb(214,53,23)" rx="2" ry="2" />
<text  x="242.95" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="77.4" y="997" width="0.1" height="15.0" fill="rgb(244,18,28)" rx="2" ry="2" />
<text  x="80.35" y="1007.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_path (260 samples, 0.83%)</title><rect x="576.1" y="597" width="9.8" height="15.0" fill="rgb(243,119,43)" rx="2" ry="2" />
<text  x="579.10" y="607.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="228.3" y="613" width="0.3" height="15.0" fill="rgb(222,193,4)" rx="2" ry="2" />
<text  x="231.31" y="623.5" ></text>
</g>
<g >
<title>core::mem::swap (4 samples, 0.01%)</title><rect x="114.4" y="1077" width="0.2" height="15.0" fill="rgb(217,222,0)" rx="2" ry="2" />
<text  x="117.41" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="659.4" y="837" width="0.2" height="15.0" fill="rgb(211,38,33)" rx="2" ry="2" />
<text  x="662.45" y="847.5" ></text>
</g>
<g >
<title>std::thread::local::fast::Key&lt;T&gt;::get (6 samples, 0.02%)</title><rect x="199.2" y="1029" width="0.2" height="15.0" fill="rgb(230,91,35)" rx="2" ry="2" />
<text  x="202.21" y="1039.5" ></text>
</g>
<g >
<title>string_cache::trivial_impls::_&lt;impl core..convert..From&lt;&amp;str&gt; for string_cache..atom..Atom&lt;Static&gt;&gt;::from (25 samples, 0.08%)</title><rect x="234.7" y="293" width="0.9" height="15.0" fill="rgb(214,73,51)" rx="2" ry="2" />
<text  x="237.65" y="303.5" ></text>
</g>
<g >
<title>rusty_v8::scope::data::ScopeData::get_root_mut (3 samples, 0.01%)</title><rect x="1179.3" y="853" width="0.1" height="15.0" fill="rgb(226,44,24)" rx="2" ry="2" />
<text  x="1182.26" y="863.5" ></text>
</g>
<g >
<title>_&lt;deno..worker..Worker as core..future..future..Future&gt;::poll (75 samples, 0.24%)</title><rect x="207.4" y="917" width="2.8" height="15.0" fill="rgb(208,46,18)" rx="2" ry="2" />
<text  x="210.36" y="927.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="601.7" y="581" width="0.3" height="15.0" fill="rgb(223,147,21)" rx="2" ry="2" />
<text  x="604.75" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (10 samples, 0.03%)</title><rect x="113.1" y="1109" width="0.4" height="15.0" fill="rgb(237,184,44)" rx="2" ry="2" />
<text  x="116.13" y="1119.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (47 samples, 0.15%)</title><rect x="92.2" y="1077" width="1.8" height="15.0" fill="rgb(233,26,26)" rx="2" ry="2" />
<text  x="95.22" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (11 samples, 0.03%)</title><rect x="225.9" y="485" width="0.5" height="15.0" fill="rgb(250,76,46)" rx="2" ry="2" />
<text  x="228.94" y="495.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="575.9" y="485" width="0.2" height="15.0" fill="rgb(208,61,12)" rx="2" ry="2" />
<text  x="578.92" y="495.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::ops::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_unary_expr (153 samples, 0.49%)</title><rect x="233.1" y="501" width="5.7" height="15.0" fill="rgb(209,16,42)" rx="2" ry="2" />
<text  x="236.08" y="511.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Write&gt;::write_str (8 samples, 0.03%)</title><rect x="612.8" y="469" width="0.3" height="15.0" fill="rgb(226,85,50)" rx="2" ry="2" />
<text  x="615.78" y="479.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="546.6" y="197" width="0.3" height="15.0" fill="rgb(223,24,9)" rx="2" ry="2" />
<text  x="549.60" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (112 samples, 0.36%)</title><rect x="1028.0" y="773" width="4.2" height="15.0" fill="rgb(229,113,40)" rx="2" ry="2" />
<text  x="1031.00" y="783.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="105.2" y="1109" width="0.2" height="15.0" fill="rgb(249,229,19)" rx="2" ry="2" />
<text  x="108.17" y="1119.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (42 samples, 0.13%)</title><rect x="234.3" y="437" width="1.6" height="15.0" fill="rgb(207,101,51)" rx="2" ry="2" />
<text  x="237.32" y="447.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="244.0" y="645" width="0.3" height="15.0" fill="rgb(233,159,32)" rx="2" ry="2" />
<text  x="247.00" y="655.5" ></text>
</g>
<g >
<title>deno::file_fetcher::SourceFileCache::get (30 samples, 0.10%)</title><rect x="613.1" y="581" width="1.1" height="15.0" fill="rgb(219,95,32)" rx="2" ry="2" />
<text  x="616.08" y="591.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.02%)</title><rect x="1099.8" y="581" width="0.2" height="15.0" fill="rgb(216,206,25)" rx="2" ry="2" />
<text  x="1102.79" y="591.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="119.8" y="1109" width="0.2" height="15.0" fill="rgb(252,79,31)" rx="2" ry="2" />
<text  x="122.77" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="73.8" y="1093" width="0.4" height="15.0" fill="rgb(218,150,45)" rx="2" ry="2" />
<text  x="76.78" y="1103.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="636.2" y="725" width="0.2" height="15.0" fill="rgb(239,110,33)" rx="2" ry="2" />
<text  x="639.25" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="1004.5" y="821" width="0.2" height="15.0" fill="rgb(230,180,4)" rx="2" ry="2" />
<text  x="1007.50" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="20.2" y="917" width="0.2" height="15.0" fill="rgb(214,79,10)" rx="2" ry="2" />
<text  x="23.25" y="927.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (19 samples, 0.06%)</title><rect x="573.7" y="565" width="0.7" height="15.0" fill="rgb(249,41,18)" rx="2" ry="2" />
<text  x="576.66" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="616.9" y="453" width="0.5" height="15.0" fill="rgb(205,86,40)" rx="2" ry="2" />
<text  x="619.91" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="155.5" y="1045" width="0.3" height="15.0" fill="rgb(246,93,16)" rx="2" ry="2" />
<text  x="158.48" y="1055.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (10 samples, 0.03%)</title><rect x="188.0" y="1109" width="0.4" height="15.0" fill="rgb(226,44,37)" rx="2" ry="2" />
<text  x="190.99" y="1119.5" ></text>
</g>
<g >
<title>core::cell::RefCell&lt;T&gt;::try_borrow (7 samples, 0.02%)</title><rect x="207.8" y="821" width="0.3" height="15.0" fill="rgb(229,131,41)" rx="2" ry="2" />
<text  x="210.85" y="831.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="665.2" y="741" width="0.2" height="15.0" fill="rgb(253,3,0)" rx="2" ry="2" />
<text  x="668.23" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (25 samples, 0.08%)</title><rect x="1113.4" y="517" width="1.0" height="15.0" fill="rgb(247,151,32)" rx="2" ry="2" />
<text  x="1116.41" y="527.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (6 samples, 0.02%)</title><rect x="1034.9" y="837" width="0.2" height="15.0" fill="rgb(228,200,11)" rx="2" ry="2" />
<text  x="1037.91" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="188.2" y="1013" width="0.2" height="15.0" fill="rgb(245,201,16)" rx="2" ry="2" />
<text  x="191.21" y="1023.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="19.6" y="901" width="0.3" height="15.0" fill="rgb(253,130,11)" rx="2" ry="2" />
<text  x="22.65" y="911.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::write (3 samples, 0.01%)</title><rect x="620.9" y="693" width="0.1" height="15.0" fill="rgb(253,200,11)" rx="2" ry="2" />
<text  x="623.89" y="703.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="179.0" y="1077" width="0.2" height="15.0" fill="rgb(252,149,23)" rx="2" ry="2" />
<text  x="181.98" y="1087.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::value_of (5 samples, 0.02%)</title><rect x="193.9" y="1125" width="0.2" height="15.0" fill="rgb(225,103,40)" rx="2" ry="2" />
<text  x="196.92" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="139.4" y="1045" width="0.2" height="15.0" fill="rgb(237,222,49)" rx="2" ry="2" />
<text  x="142.37" y="1055.5" ></text>
</g>
<g >
<title>serde_json::ser::format_escaped_str (39 samples, 0.12%)</title><rect x="1120.7" y="517" width="1.4" height="15.0" fill="rgb(247,91,49)" rx="2" ry="2" />
<text  x="1123.66" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (2,380 samples, 7.57%)</title><rect x="839.8" y="805" width="89.4" height="15.0" fill="rgb(233,133,29)" rx="2" ry="2" />
<text  x="842.84" y="815.5" >alloc::sli..</text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (7 samples, 0.02%)</title><rect x="1034.9" y="853" width="0.2" height="15.0" fill="rgb(238,25,7)" rx="2" ry="2" />
<text  x="1037.87" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (20 samples, 0.06%)</title><rect x="1115.6" y="677" width="0.8" height="15.0" fill="rgb(214,123,45)" rx="2" ry="2" />
<text  x="1118.63" y="687.5" ></text>
</g>
<g >
<title>swc_common::syntax_pos::SourceFile::new (25 samples, 0.08%)</title><rect x="229.9" y="629" width="1.0" height="15.0" fill="rgb(207,15,4)" rx="2" ry="2" />
<text  x="232.92" y="639.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (17 samples, 0.05%)</title><rect x="1068.4" y="789" width="0.6" height="15.0" fill="rgb(206,50,51)" rx="2" ry="2" />
<text  x="1071.36" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="835.4" y="789" width="0.1" height="15.0" fill="rgb(229,127,47)" rx="2" ry="2" />
<text  x="838.37" y="799.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_string (48 samples, 0.15%)</title><rect x="271.9" y="421" width="1.8" height="15.0" fill="rgb(215,218,37)" rx="2" ry="2" />
<text  x="274.86" y="431.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.02%)</title><rect x="219.8" y="629" width="0.3" height="15.0" fill="rgb(216,216,34)" rx="2" ry="2" />
<text  x="222.83" y="639.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="1099.7" y="597" width="0.3" height="15.0" fill="rgb(251,18,13)" rx="2" ry="2" />
<text  x="1102.75" y="607.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (258 samples, 0.82%)</title><rect x="143.5" y="1109" width="9.6" height="15.0" fill="rgb(240,138,19)" rx="2" ry="2" />
<text  x="146.46" y="1119.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="177.4" y="1109" width="0.3" height="15.0" fill="rgb(241,118,54)" rx="2" ry="2" />
<text  x="180.40" y="1119.5" ></text>
</g>
<g >
<title>mio::poll::Poll::new (8 samples, 0.03%)</title><rect x="203.2" y="1109" width="0.3" height="15.0" fill="rgb(237,169,46)" rx="2" ry="2" />
<text  x="206.19" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="634.1" y="773" width="0.1" height="15.0" fill="rgb(215,1,46)" rx="2" ry="2" />
<text  x="637.07" y="783.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1064.0" y="821" width="0.1" height="15.0" fill="rgb(208,187,4)" rx="2" ry="2" />
<text  x="1066.97" y="831.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping (5 samples, 0.02%)</title><rect x="85.9" y="1045" width="0.2" height="15.0" fill="rgb(242,64,27)" rx="2" ry="2" />
<text  x="88.87" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (54 samples, 0.17%)</title><rect x="1011.0" y="805" width="2.0" height="15.0" fill="rgb(254,23,5)" rx="2" ry="2" />
<text  x="1013.96" y="815.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope::with_context (11 samples, 0.03%)</title><rect x="1179.1" y="885" width="0.4" height="15.0" fill="rgb(227,101,22)" rx="2" ry="2" />
<text  x="1182.11" y="895.5" ></text>
</g>
<g >
<title>url::parser::Parser::file_host (11 samples, 0.03%)</title><rect x="575.7" y="581" width="0.4" height="15.0" fill="rgb(238,222,21)" rx="2" ry="2" />
<text  x="578.69" y="591.5" ></text>
</g>
<g >
<title>deno::ops::signal::init (72 samples, 0.23%)</title><rect x="1071.0" y="901" width="2.7" height="15.0" fill="rgb(247,142,53)" rx="2" ry="2" />
<text  x="1073.99" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="114.3" y="1045" width="0.1" height="15.0" fill="rgb(210,184,6)" rx="2" ry="2" />
<text  x="117.26" y="1055.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (45 samples, 0.14%)</title><rect x="1080.8" y="869" width="1.6" height="15.0" fill="rgb(213,121,26)" rx="2" ry="2" />
<text  x="1083.75" y="879.5" ></text>
</g>
<g >
<title>core::mem::replace (5 samples, 0.02%)</title><rect x="99.7" y="1093" width="0.2" height="15.0" fill="rgb(222,53,30)" rx="2" ry="2" />
<text  x="102.69" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..result..Result&lt;V,E&gt; as core..iter..traits..collect..FromIterator&lt;core..result..Result&lt;A,E&gt;&gt;&gt;::from_iter (22 samples, 0.07%)</title><rect x="1099.2" y="741" width="0.8" height="15.0" fill="rgb(228,112,38)" rx="2" ry="2" />
<text  x="1102.18" y="751.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (6 samples, 0.02%)</title><rect x="1172.7" y="741" width="0.2" height="15.0" fill="rgb(227,7,36)" rx="2" ry="2" />
<text  x="1175.69" y="751.5" ></text>
</g>
<g >
<title>_&lt;rusty_v8..isolate..Isolate as rusty_v8..scope..getter..GetScopeData&gt;::get_scope_data_mut (4 samples, 0.01%)</title><rect x="621.7" y="789" width="0.2" height="15.0" fill="rgb(230,214,26)" rx="2" ry="2" />
<text  x="624.72" y="799.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (4 samples, 0.01%)</title><rect x="120.8" y="1109" width="0.2" height="15.0" fill="rgb(229,142,4)" rx="2" ry="2" />
<text  x="123.83" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (12 samples, 0.04%)</title><rect x="140.8" y="1093" width="0.4" height="15.0" fill="rgb(245,35,35)" rx="2" ry="2" />
<text  x="143.80" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (265 samples, 0.84%)</title><rect x="311.0" y="229" width="9.9" height="15.0" fill="rgb(219,44,47)" rx="2" ry="2" />
<text  x="313.98" y="239.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::is_present (30 samples, 0.10%)</title><rect x="195.9" y="1125" width="1.1" height="15.0" fill="rgb(250,6,42)" rx="2" ry="2" />
<text  x="198.87" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (9 samples, 0.03%)</title><rect x="77.7" y="1093" width="0.3" height="15.0" fill="rgb(224,80,39)" rx="2" ry="2" />
<text  x="80.65" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1117.4" y="677" width="0.1" height="15.0" fill="rgb(208,15,0)" rx="2" ry="2" />
<text  x="1120.36" y="687.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="114.1" y="1093" width="0.3" height="15.0" fill="rgb(236,181,34)" rx="2" ry="2" />
<text  x="117.14" y="1103.5" ></text>
</g>
<g >
<title>swc_ecma_visit::visit_module (22 samples, 0.07%)</title><rect x="239.8" y="645" width="0.9" height="15.0" fill="rgb(209,22,53)" rx="2" ry="2" />
<text  x="242.84" y="655.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="87.0" y="1045" width="0.3" height="15.0" fill="rgb(207,120,27)" rx="2" ry="2" />
<text  x="90.04" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (3 samples, 0.01%)</title><rect x="118.3" y="1029" width="0.1" height="15.0" fill="rgb(215,185,46)" rx="2" ry="2" />
<text  x="121.27" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="665.8" y="805" width="0.1" height="15.0" fill="rgb(248,93,30)" rx="2" ry="2" />
<text  x="668.79" y="815.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="667.9" y="629" width="0.4" height="15.0" fill="rgb(252,214,19)" rx="2" ry="2" />
<text  x="670.90" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="191.4" y="1013" width="0.1" height="15.0" fill="rgb(233,55,37)" rx="2" ry="2" />
<text  x="194.37" y="1023.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (19 samples, 0.06%)</title><rect x="581.8" y="533" width="0.7" height="15.0" fill="rgb(249,141,48)" rx="2" ry="2" />
<text  x="584.77" y="543.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (8 samples, 0.03%)</title><rect x="1093.9" y="597" width="0.3" height="15.0" fill="rgb(214,38,8)" rx="2" ry="2" />
<text  x="1096.93" y="607.5" ></text>
</g>
<g >
<title>deno::flags::config_arg (10 samples, 0.03%)</title><rect x="128.4" y="1141" width="0.4" height="15.0" fill="rgb(244,75,45)" rx="2" ry="2" />
<text  x="131.45" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="586.1" y="709" width="0.3" height="15.0" fill="rgb(219,99,36)" rx="2" ry="2" />
<text  x="589.05" y="719.5" ></text>
</g>
<g >
<title>serde::ser::Serializer::collect_map (855 samples, 2.72%)</title><rect x="1138.9" y="645" width="32.1" height="15.0" fill="rgb(219,186,42)" rx="2" ry="2" />
<text  x="1141.90" y="655.5" >se..</text>
</g>
<g >
<title>deno::deno_dir::dirs::cache_dir::_{{closure}} (3 samples, 0.01%)</title><rect x="662.8" y="869" width="0.1" height="15.0" fill="rgb(225,192,4)" rx="2" ry="2" />
<text  x="665.75" y="879.5" ></text>
</g>
<g >
<title>clap::app::App::arg (65 samples, 0.21%)</title><rect x="134.1" y="1141" width="2.5" height="15.0" fill="rgb(242,111,51)" rx="2" ry="2" />
<text  x="137.12" y="1151.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (51 samples, 0.16%)</title><rect x="1109.4" y="565" width="1.9" height="15.0" fill="rgb(222,87,8)" rx="2" ry="2" />
<text  x="1112.36" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (86 samples, 0.27%)</title><rect x="346.1" y="165" width="3.2" height="15.0" fill="rgb(241,205,17)" rx="2" ry="2" />
<text  x="349.12" y="175.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="216.9" y="469" width="0.1" height="15.0" fill="rgb(237,157,8)" rx="2" ry="2" />
<text  x="219.90" y="479.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for alloc..string..String&gt;::serialize (78 samples, 0.25%)</title><rect x="1119.2" y="565" width="2.9" height="15.0" fill="rgb(237,160,1)" rx="2" ry="2" />
<text  x="1122.19" y="575.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for &amp;T&gt;::serialize (368 samples, 1.17%)</title><rect x="1124.1" y="677" width="13.8" height="15.0" fill="rgb(220,94,26)" rx="2" ry="2" />
<text  x="1127.11" y="687.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (54 samples, 0.17%)</title><rect x="1038.9" y="837" width="2.1" height="15.0" fill="rgb(217,56,34)" rx="2" ry="2" />
<text  x="1041.93" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..rc..Rc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (89 samples, 0.28%)</title><rect x="642.0" y="885" width="3.3" height="15.0" fill="rgb(217,71,16)" rx="2" ry="2" />
<text  x="644.99" y="895.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (12 samples, 0.04%)</title><rect x="138.2" y="1061" width="0.5" height="15.0" fill="rgb(210,140,33)" rx="2" ry="2" />
<text  x="141.21" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (129 samples, 0.41%)</title><rect x="344.5" y="181" width="4.8" height="15.0" fill="rgb(248,70,52)" rx="2" ry="2" />
<text  x="347.50" y="191.5" ></text>
</g>
<g >
<title>deno::ops::io::get_stdio (49 samples, 0.16%)</title><rect x="832.5" y="917" width="1.8" height="15.0" fill="rgb(251,20,20)" rx="2" ry="2" />
<text  x="835.48" y="927.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.03%)</title><rect x="259.4" y="661" width="0.4" height="15.0" fill="rgb(225,137,52)" rx="2" ry="2" />
<text  x="262.43" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (15 samples, 0.05%)</title><rect x="81.3" y="1109" width="0.6" height="15.0" fill="rgb(215,180,23)" rx="2" ry="2" />
<text  x="84.29" y="1119.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="589.5" y="677" width="0.2" height="15.0" fill="rgb(240,96,46)" rx="2" ry="2" />
<text  x="592.51" y="687.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (15 samples, 0.05%)</title><rect x="1062.4" y="869" width="0.6" height="15.0" fill="rgb(232,30,33)" rx="2" ry="2" />
<text  x="1065.43" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1112.7" y="453" width="0.1" height="15.0" fill="rgb(206,116,23)" rx="2" ry="2" />
<text  x="1115.66" y="463.5" ></text>
</g>
<g >
<title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (4 samples, 0.01%)</title><rect x="587.3" y="661" width="0.1" height="15.0" fill="rgb(236,83,42)" rx="2" ry="2" />
<text  x="590.25" y="671.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::value_of (5 samples, 0.02%)</title><rect x="193.7" y="1125" width="0.2" height="15.0" fill="rgb(225,149,29)" rx="2" ry="2" />
<text  x="196.70" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="547.7" y="133" width="0.5" height="15.0" fill="rgb(209,116,27)" rx="2" ry="2" />
<text  x="550.72" y="143.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (29 samples, 0.09%)</title><rect x="999.4" y="853" width="1.0" height="15.0" fill="rgb(205,165,15)" rx="2" ry="2" />
<text  x="1002.36" y="863.5" ></text>
</g>
<g >
<title>rusty_v8::scope::TryCatch&lt;P&gt;::new (3 samples, 0.01%)</title><rect x="209.5" y="821" width="0.1" height="15.0" fill="rgb(208,182,4)" rx="2" ry="2" />
<text  x="212.46" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (12 samples, 0.04%)</title><rect x="1115.9" y="613" width="0.5" height="15.0" fill="rgb(223,116,9)" rx="2" ry="2" />
<text  x="1118.93" y="623.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..Repr&lt;T&gt; as core..hash..Hash&gt;::hash (10 samples, 0.03%)</title><rect x="1000.9" y="773" width="0.3" height="15.0" fill="rgb(232,143,35)" rx="2" ry="2" />
<text  x="1003.86" y="783.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="1088.9" y="741" width="0.1" height="15.0" fill="rgb(221,74,11)" rx="2" ry="2" />
<text  x="1091.90" y="751.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy::_{{closure}} (3 samples, 0.01%)</title><rect x="223.1" y="597" width="0.1" height="15.0" fill="rgb(233,72,5)" rx="2" ry="2" />
<text  x="226.09" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="142.1" y="1045" width="0.2" height="15.0" fill="rgb(238,62,30)" rx="2" ry="2" />
<text  x="145.15" y="1055.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (81 samples, 0.26%)</title><rect x="642.3" y="757" width="3.0" height="15.0" fill="rgb(240,222,0)" rx="2" ry="2" />
<text  x="645.29" y="767.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (7 samples, 0.02%)</title><rect x="1171.0" y="757" width="0.3" height="15.0" fill="rgb(223,5,11)" rx="2" ry="2" />
<text  x="1174.04" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (56 samples, 0.18%)</title><rect x="31.0" y="997" width="2.1" height="15.0" fill="rgb(248,62,44)" rx="2" ry="2" />
<text  x="34.02" y="1007.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (160 samples, 0.51%)</title><rect x="57.5" y="1093" width="6.0" height="15.0" fill="rgb(225,177,5)" rx="2" ry="2" />
<text  x="60.49" y="1103.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next::_{{closure}} (7 samples, 0.02%)</title><rect x="236.3" y="341" width="0.2" height="15.0" fill="rgb(206,111,43)" rx="2" ry="2" />
<text  x="239.27" y="351.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as core..hash..Hash&gt;::hash (11 samples, 0.03%)</title><rect x="835.6" y="821" width="0.4" height="15.0" fill="rgb(216,206,51)" rx="2" ry="2" />
<text  x="838.56" y="831.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (8 samples, 0.03%)</title><rect x="588.9" y="661" width="0.3" height="15.0" fill="rgb(235,93,53)" rx="2" ry="2" />
<text  x="591.87" y="671.5" ></text>
</g>
<g >
<title>_&lt;http..header..value..HeaderValue as core..clone..Clone&gt;::clone (4 samples, 0.01%)</title><rect x="830.4" y="869" width="0.2" height="15.0" fill="rgb(206,135,19)" rx="2" ry="2" />
<text  x="833.42" y="879.5" ></text>
</g>
<g >
<title>serde::de::impls::_&lt;impl serde..de..Deserialize for alloc..string..String&gt;::deserialize (13 samples, 0.04%)</title><rect x="269.3" y="533" width="0.5" height="15.0" fill="rgb(243,161,23)" rx="2" ry="2" />
<text  x="272.31" y="543.5" ></text>
</g>
<g >
<title>tokio::park::thread::CachedParkThread::get_unpark (10 samples, 0.03%)</title><rect x="199.1" y="1093" width="0.3" height="15.0" fill="rgb(239,8,26)" rx="2" ry="2" />
<text  x="202.06" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="1062.8" y="789" width="0.2" height="15.0" fill="rgb(232,9,18)" rx="2" ry="2" />
<text  x="1065.81" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (7 samples, 0.02%)</title><rect x="587.1" y="709" width="0.3" height="15.0" fill="rgb(238,177,32)" rx="2" ry="2" />
<text  x="590.14" y="719.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="546.7" y="165" width="0.2" height="15.0" fill="rgb(230,35,39)" rx="2" ry="2" />
<text  x="549.67" y="175.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 0.03%)</title><rect x="166.1" y="1077" width="0.3" height="15.0" fill="rgb(252,82,14)" rx="2" ry="2" />
<text  x="169.06" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (8 samples, 0.03%)</title><rect x="194.5" y="1093" width="0.3" height="15.0" fill="rgb(244,184,41)" rx="2" ry="2" />
<text  x="197.52" y="1103.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::reserve (116 samples, 0.37%)</title><rect x="1027.9" y="805" width="4.3" height="15.0" fill="rgb(241,13,12)" rx="2" ry="2" />
<text  x="1030.85" y="815.5" ></text>
</g>
<g >
<title>core::iter::adapters::map_fold::_{{closure}} (18 samples, 0.06%)</title><rect x="838.6" y="677" width="0.7" height="15.0" fill="rgb(242,227,4)" rx="2" ry="2" />
<text  x="841.64" y="687.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="91.3" y="1093" width="0.2" height="15.0" fill="rgb(229,105,40)" rx="2" ry="2" />
<text  x="94.32" y="1103.5" ></text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for alloc..vec..Vec&lt;u8&gt;&gt;::write_all (7 samples, 0.02%)</title><rect x="1121.9" y="453" width="0.2" height="15.0" fill="rgb(252,30,7)" rx="2" ry="2" />
<text  x="1124.86" y="463.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (6,669 samples, 21.22%)</title><rect x="321.0" y="485" width="250.4" height="15.0" fill="rgb(254,99,41)" rx="2" ry="2" />
<text  x="324.00" y="495.5" >_&lt;serde_json..de..MapAccess&lt;R&gt; as..</text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="79.4" y="1109" width="0.2" height="15.0" fill="rgb(208,224,14)" rx="2" ry="2" />
<text  x="82.38" y="1119.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (16 samples, 0.05%)</title><rect x="173.6" y="1061" width="0.6" height="15.0" fill="rgb(236,87,36)" rx="2" ry="2" />
<text  x="176.61" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (28 samples, 0.09%)</title><rect x="1067.9" y="837" width="1.1" height="15.0" fill="rgb(215,81,5)" rx="2" ry="2" />
<text  x="1070.95" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="1081.5" y="757" width="0.5" height="15.0" fill="rgb(242,193,16)" rx="2" ry="2" />
<text  x="1084.54" y="767.5" ></text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for &amp;mut W&gt;::write_all (18 samples, 0.06%)</title><rect x="1166.4" y="581" width="0.7" height="15.0" fill="rgb(235,146,46)" rx="2" ry="2" />
<text  x="1169.39" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1036.7" y="821" width="0.1" height="15.0" fill="rgb(209,160,51)" rx="2" ry="2" />
<text  x="1039.68" y="831.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_str (13 samples, 0.04%)</title><rect x="266.9" y="469" width="0.5" height="15.0" fill="rgb(248,135,24)" rx="2" ry="2" />
<text  x="269.87" y="479.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (15 samples, 0.05%)</title><rect x="1081.4" y="773" width="0.6" height="15.0" fill="rgb(226,124,34)" rx="2" ry="2" />
<text  x="1084.43" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1122.0" y="389" width="0.1" height="15.0" fill="rgb(247,171,22)" rx="2" ry="2" />
<text  x="1125.01" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (27 samples, 0.09%)</title><rect x="1174.8" y="821" width="1.0" height="15.0" fill="rgb(237,29,12)" rx="2" ry="2" />
<text  x="1177.80" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.10%)</title><rect x="283.3" y="149" width="1.1" height="15.0" fill="rgb(228,50,18)" rx="2" ry="2" />
<text  x="286.27" y="159.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..DeserializeSeed&gt;::deserialize (13 samples, 0.04%)</title><rect x="270.6" y="485" width="0.5" height="15.0" fill="rgb(248,43,5)" rx="2" ry="2" />
<text  x="273.62" y="495.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="601.7" y="597" width="0.3" height="15.0" fill="rgb(241,97,39)" rx="2" ry="2" />
<text  x="604.71" y="607.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="218.5" y="629" width="0.3" height="15.0" fill="rgb(249,129,51)" rx="2" ry="2" />
<text  x="221.47" y="639.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="614.0" y="485" width="0.2" height="15.0" fill="rgb(205,32,22)" rx="2" ry="2" />
<text  x="617.02" y="495.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (26 samples, 0.08%)</title><rect x="1011.9" y="789" width="1.0" height="15.0" fill="rgb(229,31,28)" rx="2" ry="2" />
<text  x="1014.94" y="799.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_ident_or_keyword (18 samples, 0.06%)</title><rect x="236.9" y="293" width="0.7" height="15.0" fill="rgb(229,114,49)" rx="2" ry="2" />
<text  x="239.94" y="303.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="618.3" y="773" width="0.1" height="15.0" fill="rgb(218,47,13)" rx="2" ry="2" />
<text  x="621.26" y="783.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..ser..SerializeMap as serde..ser..SerializeMap&gt;::serialize_key (143 samples, 0.45%)</title><rect x="1124.7" y="629" width="5.3" height="15.0" fill="rgb(226,52,15)" rx="2" ry="2" />
<text  x="1127.68" y="639.5" ></text>
</g>
<g >
<title>deno::ops::runtime::init (88 samples, 0.28%)</title><rect x="1065.7" y="901" width="3.3" height="15.0" fill="rgb(209,187,5)" rx="2" ry="2" />
<text  x="1068.70" y="911.5" ></text>
</g>
<g >
<title>serde_json::value::ser::_&lt;impl serde..ser..Serialize for serde_json..value..Value&gt;::serialize (174 samples, 0.55%)</title><rect x="1117.5" y="661" width="6.6" height="15.0" fill="rgb(226,196,45)" rx="2" ry="2" />
<text  x="1120.54" y="671.5" ></text>
</g>
<g >
<title>tokio::coop::with_budget::_{{closure}} (5 samples, 0.02%)</title><rect x="198.9" y="1061" width="0.2" height="15.0" fill="rgb(240,178,30)" rx="2" ry="2" />
<text  x="201.88" y="1071.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="1087.5" y="725" width="0.2" height="15.0" fill="rgb(218,206,39)" rx="2" ry="2" />
<text  x="1090.51" y="735.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (9 samples, 0.03%)</title><rect x="22.3" y="741" width="0.4" height="15.0" fill="rgb(236,169,4)" rx="2" ry="2" />
<text  x="25.31" y="751.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (3 samples, 0.01%)</title><rect x="22.4" y="725" width="0.1" height="15.0" fill="rgb(226,75,35)" rx="2" ry="2" />
<text  x="25.35" y="735.5" ></text>
</g>
<g >
<title>deno::ops::errors::init (77 samples, 0.24%)</title><rect x="1001.3" y="901" width="2.9" height="15.0" fill="rgb(221,46,5)" rx="2" ry="2" />
<text  x="1004.27" y="911.5" ></text>
</g>
<g >
<title>_&lt;core..pin..Pin&lt;P&gt; as core..future..future..Future&gt;::poll (155 samples, 0.49%)</title><rect x="611.8" y="677" width="5.8" height="15.0" fill="rgb(216,103,22)" rx="2" ry="2" />
<text  x="614.77" y="687.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..SourceFileFetcher as core..clone..Clone&gt;::clone (19 samples, 0.06%)</title><rect x="218.1" y="677" width="0.7" height="15.0" fill="rgb(211,199,31)" rx="2" ry="2" />
<text  x="221.10" y="687.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (63 samples, 0.20%)</title><rect x="639.4" y="725" width="2.4" height="15.0" fill="rgb(213,18,25)" rx="2" ry="2" />
<text  x="642.44" y="735.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::shared_init (32 samples, 0.10%)</title><rect x="1095.4" y="869" width="1.2" height="15.0" fill="rgb(218,193,26)" rx="2" ry="2" />
<text  x="1098.43" y="879.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="832.2" y="885" width="0.3" height="15.0" fill="rgb(212,14,19)" rx="2" ry="2" />
<text  x="835.18" y="895.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (46 samples, 0.15%)</title><rect x="838.0" y="837" width="1.8" height="15.0" fill="rgb(225,49,2)" rx="2" ry="2" />
<text  x="841.04" y="847.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="1098.9" y="693" width="0.1" height="15.0" fill="rgb(229,94,28)" rx="2" ry="2" />
<text  x="1101.88" y="703.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="192.9" y="949" width="0.1" height="15.0" fill="rgb(205,104,17)" rx="2" ry="2" />
<text  x="195.87" y="959.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="1093.3" y="661" width="0.2" height="15.0" fill="rgb(233,78,6)" rx="2" ry="2" />
<text  x="1096.25" y="671.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (55 samples, 0.17%)</title><rect x="1042.3" y="869" width="2.1" height="15.0" fill="rgb(220,73,25)" rx="2" ry="2" />
<text  x="1045.31" y="879.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="614.8" y="405" width="0.1" height="15.0" fill="rgb(234,87,53)" rx="2" ry="2" />
<text  x="617.77" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (27 samples, 0.09%)</title><rect x="1047.1" y="741" width="1.0" height="15.0" fill="rgb(205,62,53)" rx="2" ry="2" />
<text  x="1050.08" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="13.9" y="1029" width="0.2" height="15.0" fill="rgb(235,218,14)" rx="2" ry="2" />
<text  x="16.90" y="1039.5" ></text>
</g>
<g >
<title>_&lt;alloc..alloc..Global as core..alloc..AllocRef&gt;::grow (3 samples, 0.01%)</title><rect x="78.9" y="1029" width="0.1" height="15.0" fill="rgb(246,148,18)" rx="2" ry="2" />
<text  x="81.93" y="1039.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (8 samples, 0.03%)</title><rect x="100.5" y="1061" width="0.3" height="15.0" fill="rgb(208,132,37)" rx="2" ry="2" />
<text  x="103.52" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="237.9" y="277" width="0.2" height="15.0" fill="rgb(210,187,2)" rx="2" ry="2" />
<text  x="240.92" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="1033.7" y="725" width="0.1" height="15.0" fill="rgb(247,173,44)" rx="2" ry="2" />
<text  x="1036.67" y="735.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="139.9" y="1061" width="0.1" height="15.0" fill="rgb(236,180,13)" rx="2" ry="2" />
<text  x="142.86" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (358 samples, 1.14%)</title><rect x="245.5" y="341" width="13.5" height="15.0" fill="rgb(213,158,8)" rx="2" ry="2" />
<text  x="248.54" y="351.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (2,381 samples, 7.58%)</title><rect x="668.8" y="821" width="89.4" height="15.0" fill="rgb(224,62,3)" rx="2" ry="2" />
<text  x="671.83" y="831.5" >_&lt;alloc..v..</text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (4 samples, 0.01%)</title><rect x="230.1" y="597" width="0.1" height="15.0" fill="rgb(244,69,42)" rx="2" ry="2" />
<text  x="233.07" y="607.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="832.2" y="869" width="0.3" height="15.0" fill="rgb(215,180,43)" rx="2" ry="2" />
<text  x="835.22" y="879.5" ></text>
</g>
<g >
<title>deno::permissions::Permissions::resolved_and_display_path (3 samples, 0.01%)</title><rect x="214.0" y="501" width="0.1" height="15.0" fill="rgb(206,156,4)" rx="2" ry="2" />
<text  x="217.01" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,106 samples, 3.52%)</title><rect x="716.0" y="565" width="41.5" height="15.0" fill="rgb(228,112,44)" rx="2" ry="2" />
<text  x="718.95" y="575.5" >all..</text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (64 samples, 0.20%)</title><rect x="290.8" y="325" width="2.4" height="15.0" fill="rgb(213,207,48)" rx="2" ry="2" />
<text  x="293.78" y="335.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="1061.1" y="821" width="0.2" height="15.0" fill="rgb(250,148,29)" rx="2" ry="2" />
<text  x="1064.08" y="831.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="1096.7" y="837" width="0.2" height="15.0" fill="rgb(246,142,38)" rx="2" ry="2" />
<text  x="1099.71" y="847.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="104.6" y="1125" width="0.4" height="15.0" fill="rgb(230,159,44)" rx="2" ry="2" />
<text  x="107.57" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (21 samples, 0.07%)</title><rect x="131.8" y="1013" width="0.7" height="15.0" fill="rgb(241,12,12)" rx="2" ry="2" />
<text  x="134.75" y="1023.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="216.3" y="533" width="0.4" height="15.0" fill="rgb(237,22,36)" rx="2" ry="2" />
<text  x="219.30" y="543.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (6,666 samples, 21.21%)</title><rect x="321.1" y="437" width="250.3" height="15.0" fill="rgb(219,127,31)" rx="2" ry="2" />
<text  x="324.12" y="447.5" >_&lt;&amp;mut serde_json..de..Deserializ..</text>
</g>
<g >
<title>core::ptr::drop_in_place (199 samples, 0.63%)</title><rect x="65.5" y="1157" width="7.5" height="15.0" fill="rgb(214,89,42)" rx="2" ry="2" />
<text  x="68.53" y="1167.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="228.3" y="629" width="0.3" height="15.0" fill="rgb(251,37,14)" rx="2" ry="2" />
<text  x="231.27" y="639.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (4 samples, 0.01%)</title><rect x="76.6" y="1093" width="0.1" height="15.0" fill="rgb(238,28,26)" rx="2" ry="2" />
<text  x="79.56" y="1103.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (349 samples, 1.11%)</title><rect x="646.1" y="853" width="13.1" height="15.0" fill="rgb(230,186,2)" rx="2" ry="2" />
<text  x="649.12" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::drop (9 samples, 0.03%)</title><rect x="225.2" y="453" width="0.3" height="15.0" fill="rgb(217,63,24)" rx="2" ry="2" />
<text  x="228.16" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (17 samples, 0.05%)</title><rect x="638.0" y="853" width="0.6" height="15.0" fill="rgb(217,114,19)" rx="2" ry="2" />
<text  x="640.97" y="863.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::drop_in_place (8 samples, 0.03%)</title><rect x="225.2" y="437" width="0.3" height="15.0" fill="rgb(228,102,19)" rx="2" ry="2" />
<text  x="228.19" y="447.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (47 samples, 0.15%)</title><rect x="1183.7" y="805" width="1.7" height="15.0" fill="rgb(240,164,27)" rx="2" ry="2" />
<text  x="1186.66" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="664.3" y="789" width="0.1" height="15.0" fill="rgb(248,177,7)" rx="2" ry="2" />
<text  x="667.29" y="799.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (116 samples, 0.37%)</title><rect x="182.4" y="1077" width="4.4" height="15.0" fill="rgb(235,100,0)" rx="2" ry="2" />
<text  x="185.40" y="1087.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (6 samples, 0.02%)</title><rect x="1055.6" y="805" width="0.3" height="15.0" fill="rgb(213,157,20)" rx="2" ry="2" />
<text  x="1058.64" y="815.5" ></text>
</g>
<g >
<title>_&lt;indexmap..map..IndexMap&lt;K,V,S&gt; as core..ops..index..Index&lt;&amp;Q&gt;&gt;::index (7 samples, 0.02%)</title><rect x="243.7" y="661" width="0.2" height="15.0" fill="rgb(226,227,38)" rx="2" ry="2" />
<text  x="246.66" y="671.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (7 samples, 0.02%)</title><rect x="1062.7" y="805" width="0.3" height="15.0" fill="rgb(205,39,32)" rx="2" ry="2" />
<text  x="1065.73" y="815.5" ></text>
</g>
<g >
<title>deno::flags::fmt_subcommand (70 samples, 0.22%)</title><rect x="112.7" y="1157" width="2.6" height="15.0" fill="rgb(232,167,42)" rx="2" ry="2" />
<text  x="115.68" y="1167.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::next (14 samples, 0.04%)</title><rect x="192.5" y="1109" width="0.5" height="15.0" fill="rgb(221,48,38)" rx="2" ry="2" />
<text  x="195.46" y="1119.5" ></text>
</g>
<g >
<title>_&lt;percent_encoding..PercentEncode as core..iter..traits..iterator..Iterator&gt;::next (7 samples, 0.02%)</title><rect x="1174.5" y="821" width="0.3" height="15.0" fill="rgb(231,1,6)" rx="2" ry="2" />
<text  x="1177.53" y="831.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="1001.6" y="821" width="0.2" height="15.0" fill="rgb(232,159,33)" rx="2" ry="2" />
<text  x="1004.61" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (18 samples, 0.06%)</title><rect x="1002.0" y="837" width="0.7" height="15.0" fill="rgb(205,110,29)" rx="2" ry="2" />
<text  x="1004.99" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="216.4" y="469" width="0.3" height="15.0" fill="rgb(229,102,9)" rx="2" ry="2" />
<text  x="219.45" y="479.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (31 samples, 0.10%)</title><rect x="1074.6" y="853" width="1.2" height="15.0" fill="rgb(213,215,30)" rx="2" ry="2" />
<text  x="1077.63" y="863.5" ></text>
</g>
<g >
<title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="14.8" y="1109" width="0.3" height="15.0" fill="rgb(243,14,7)" rx="2" ry="2" />
<text  x="17.84" y="1119.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (9 samples, 0.03%)</title><rect x="17.2" y="1077" width="0.3" height="15.0" fill="rgb(229,25,9)" rx="2" ry="2" />
<text  x="20.21" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="1073.1" y="709" width="0.1" height="15.0" fill="rgb(209,163,36)" rx="2" ry="2" />
<text  x="1076.09" y="719.5" ></text>
</g>
<g >
<title>deno::worker::MainWorker::new (2,492 samples, 7.93%)</title><rect x="1001.2" y="917" width="93.6" height="15.0" fill="rgb(240,23,19)" rx="2" ry="2" />
<text  x="1004.24" y="927.5" >deno::worke..</text>
</g>
<g >
<title>futures_util::stream::stream::StreamExt::poll_next_unpin (467 samples, 1.49%)</title><rect x="600.3" y="821" width="17.5" height="15.0" fill="rgb(226,42,26)" rx="2" ry="2" />
<text  x="603.28" y="831.5" ></text>
</g>
<g >
<title>_&lt;std..path..PathBuf as core..clone..Clone&gt;::clone (10 samples, 0.03%)</title><rect x="262.9" y="613" width="0.4" height="15.0" fill="rgb(244,80,25)" rx="2" ry="2" />
<text  x="265.92" y="623.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for str&gt;::serialize (10 samples, 0.03%)</title><rect x="1112.4" y="549" width="0.4" height="15.0" fill="rgb(223,187,16)" rx="2" ry="2" />
<text  x="1115.44" y="559.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (152 samples, 0.48%)</title><rect x="1049.3" y="821" width="5.7" height="15.0" fill="rgb(214,99,8)" rx="2" ry="2" />
<text  x="1052.33" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (27 samples, 0.09%)</title><rect x="1066.8" y="837" width="1.0" height="15.0" fill="rgb(250,92,37)" rx="2" ry="2" />
<text  x="1069.82" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Display&gt;::fmt (10 samples, 0.03%)</title><rect x="614.5" y="517" width="0.4" height="15.0" fill="rgb(225,79,1)" rx="2" ry="2" />
<text  x="617.51" y="527.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (1,248 samples, 3.97%)</title><rect x="274.1" y="421" width="46.9" height="15.0" fill="rgb(216,22,24)" rx="2" ry="2" />
<text  x="277.11" y="431.5" >_&lt;&amp;m..</text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (15 samples, 0.05%)</title><rect x="111.4" y="1109" width="0.5" height="15.0" fill="rgb(227,65,9)" rx="2" ry="2" />
<text  x="114.36" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="261.4" y="629" width="0.4" height="15.0" fill="rgb(210,226,24)" rx="2" ry="2" />
<text  x="264.42" y="639.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="588.6" y="613" width="0.2" height="15.0" fill="rgb(242,192,27)" rx="2" ry="2" />
<text  x="591.57" y="623.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.01%)</title><rect x="641.5" y="597" width="0.1" height="15.0" fill="rgb(207,95,2)" rx="2" ry="2" />
<text  x="644.47" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="839.4" y="773" width="0.4" height="15.0" fill="rgb(229,133,29)" rx="2" ry="2" />
<text  x="842.43" y="783.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..scopeguard..ScopeGuard&lt;T,F&gt; as core..ops..drop..Drop&gt;::drop (5 samples, 0.02%)</title><rect x="1003.3" y="741" width="0.2" height="15.0" fill="rgb(232,180,35)" rx="2" ry="2" />
<text  x="1006.26" y="751.5" ></text>
</g>
<g >
<title>reqwest::async_impl::client::ClientBuilder::new (28 samples, 0.09%)</title><rect x="664.9" y="869" width="1.1" height="15.0" fill="rgb(207,91,40)" rx="2" ry="2" />
<text  x="667.93" y="879.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (34 samples, 0.11%)</title><rect x="82.5" y="1093" width="1.2" height="15.0" fill="rgb(230,142,9)" rx="2" ry="2" />
<text  x="85.46" y="1103.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="87.0" y="1077" width="0.3" height="15.0" fill="rgb(227,12,15)" rx="2" ry="2" />
<text  x="89.96" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="601.8" y="565" width="0.2" height="15.0" fill="rgb(218,85,47)" rx="2" ry="2" />
<text  x="604.78" y="575.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (10 samples, 0.03%)</title><rect x="124.6" y="1029" width="0.4" height="15.0" fill="rgb(221,71,3)" rx="2" ry="2" />
<text  x="127.58" y="1039.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (35 samples, 0.11%)</title><rect x="643.7" y="581" width="1.3" height="15.0" fill="rgb(224,173,9)" rx="2" ry="2" />
<text  x="646.68" y="591.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope::with_context (5 samples, 0.02%)</title><rect x="636.7" y="885" width="0.1" height="15.0" fill="rgb(230,68,21)" rx="2" ry="2" />
<text  x="639.66" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="599.9" y="629" width="0.1" height="15.0" fill="rgb(227,201,29)" rx="2" ry="2" />
<text  x="602.91" y="639.5" ></text>
</g>
<g >
<title>deno::permissions::Permissions::query_read (5 samples, 0.02%)</title><rect x="213.8" y="501" width="0.2" height="15.0" fill="rgb(219,129,44)" rx="2" ry="2" />
<text  x="216.82" y="511.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.04%)</title><rect x="1080.3" y="837" width="0.5" height="15.0" fill="rgb(237,35,7)" rx="2" ry="2" />
<text  x="1083.30" y="847.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..raw..RawTable&lt;T&gt; as core..ops..drop..Drop&gt;::drop (7 samples, 0.02%)</title><rect x="73.9" y="1045" width="0.3" height="15.0" fill="rgb(248,44,10)" rx="2" ry="2" />
<text  x="76.90" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="1064.5" y="805" width="0.1" height="15.0" fill="rgb(225,147,32)" rx="2" ry="2" />
<text  x="1067.50" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="88.2" y="1077" width="0.2" height="15.0" fill="rgb(224,34,1)" rx="2" ry="2" />
<text  x="91.16" y="1087.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (11 samples, 0.03%)</title><rect x="548.5" y="213" width="0.5" height="15.0" fill="rgb(219,126,2)" rx="2" ry="2" />
<text  x="551.55" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (21 samples, 0.07%)</title><rect x="1068.2" y="821" width="0.8" height="15.0" fill="rgb(247,77,27)" rx="2" ry="2" />
<text  x="1071.21" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve_exact (4 samples, 0.01%)</title><rect x="1117.1" y="597" width="0.1" height="15.0" fill="rgb(207,3,5)" rx="2" ry="2" />
<text  x="1120.05" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (10 samples, 0.03%)</title><rect x="78.7" y="1077" width="0.3" height="15.0" fill="rgb(235,71,47)" rx="2" ry="2" />
<text  x="81.67" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="96.6" y="1029" width="0.2" height="15.0" fill="rgb(241,95,30)" rx="2" ry="2" />
<text  x="99.65" y="1039.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (63 samples, 0.20%)</title><rect x="1045.7" y="805" width="2.4" height="15.0" fill="rgb(213,60,54)" rx="2" ry="2" />
<text  x="1048.72" y="815.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (12 samples, 0.04%)</title><rect x="1004.3" y="869" width="0.4" height="15.0" fill="rgb(251,151,43)" rx="2" ry="2" />
<text  x="1007.28" y="879.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (62 samples, 0.20%)</title><rect x="199.8" y="1141" width="2.3" height="15.0" fill="rgb(218,92,24)" rx="2" ry="2" />
<text  x="202.78" y="1151.5" ></text>
</g>
<g >
<title>_&lt;core..future..from_generator..GenFuture&lt;T&gt; as core..future..future..Future&gt;::poll (10,085 samples, 32.09%)</title><rect x="211.2" y="757" width="378.6" height="15.0" fill="rgb(246,139,4)" rx="2" ry="2" />
<text  x="214.15" y="767.5" >_&lt;core..future..from_generator..GenFuture&lt;T&gt; as cor..</text>
</g>
<g >
<title>alloc::collections::btree::map::Range&lt;K,V&gt;::next_unchecked (4 samples, 0.01%)</title><rect x="20.7" y="981" width="0.2" height="15.0" fill="rgb(225,49,6)" rx="2" ry="2" />
<text  x="23.74" y="991.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1114.5" y="533" width="0.1" height="15.0" fill="rgb(215,29,48)" rx="2" ry="2" />
<text  x="1117.50" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (352 samples, 1.12%)</title><rect x="646.0" y="869" width="13.2" height="15.0" fill="rgb(212,154,45)" rx="2" ry="2" />
<text  x="649.01" y="879.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="89.0" y="1125" width="0.3" height="15.0" fill="rgb(233,189,34)" rx="2" ry="2" />
<text  x="92.03" y="1135.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::get_mut (5 samples, 0.02%)</title><rect x="24.2" y="1077" width="0.1" height="15.0" fill="rgb(248,44,39)" rx="2" ry="2" />
<text  x="27.15" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="596.9" y="533" width="0.1" height="15.0" fill="rgb(248,34,9)" rx="2" ry="2" />
<text  x="599.90" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="1038.3" y="789" width="0.2" height="15.0" fill="rgb(253,222,20)" rx="2" ry="2" />
<text  x="1041.25" y="799.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (48 samples, 0.15%)</title><rect x="285.4" y="325" width="1.8" height="15.0" fill="rgb(220,110,2)" rx="2" ry="2" />
<text  x="288.37" y="335.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (3 samples, 0.01%)</title><rect x="589.4" y="677" width="0.1" height="15.0" fill="rgb(240,73,22)" rx="2" ry="2" />
<text  x="592.39" y="687.5" ></text>
</g>
<g >
<title>clap::app::App::arg (160 samples, 0.51%)</title><rect x="180.7" y="1109" width="6.1" height="15.0" fill="rgb(221,123,39)" rx="2" ry="2" />
<text  x="183.74" y="1119.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_word_as_str::_{{closure}} (15 samples, 0.05%)</title><rect x="231.6" y="485" width="0.6" height="15.0" fill="rgb(243,41,50)" rx="2" ry="2" />
<text  x="234.61" y="495.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="1033.3" y="805" width="0.5" height="15.0" fill="rgb(224,47,40)" rx="2" ry="2" />
<text  x="1036.30" y="815.5" ></text>
</g>
<g >
<title>deno_core::module_specifier::ModuleSpecifier::resolve_url_or_path (100 samples, 0.32%)</title><rect x="1185.9" y="933" width="3.7" height="15.0" fill="rgb(207,90,51)" rx="2" ry="2" />
<text  x="1188.87" y="943.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (10 samples, 0.03%)</title><rect x="1185.5" y="869" width="0.4" height="15.0" fill="rgb(241,123,24)" rx="2" ry="2" />
<text  x="1188.49" y="879.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (7 samples, 0.02%)</title><rect x="144.1" y="1093" width="0.3" height="15.0" fill="rgb(244,23,42)" rx="2" ry="2" />
<text  x="147.10" y="1103.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (9 samples, 0.03%)</title><rect x="205.9" y="1109" width="0.3" height="15.0" fill="rgb(242,162,45)" rx="2" ry="2" />
<text  x="208.86" y="1119.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Display&gt;::fmt (10 samples, 0.03%)</title><rect x="587.7" y="629" width="0.3" height="15.0" fill="rgb(238,220,19)" rx="2" ry="2" />
<text  x="590.67" y="639.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (31 samples, 0.10%)</title><rect x="107.2" y="1077" width="1.2" height="15.0" fill="rgb(207,0,37)" rx="2" ry="2" />
<text  x="110.24" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="139.3" y="1061" width="0.3" height="15.0" fill="rgb(238,91,38)" rx="2" ry="2" />
<text  x="142.33" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.05%)</title><rect x="293.8" y="357" width="0.6" height="15.0" fill="rgb(221,220,14)" rx="2" ry="2" />
<text  x="296.82" y="367.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (210 samples, 0.67%)</title><rect x="276.5" y="341" width="7.9" height="15.0" fill="rgb(251,178,26)" rx="2" ry="2" />
<text  x="279.51" y="351.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="1069.3" y="821" width="0.3" height="15.0" fill="rgb(239,86,28)" rx="2" ry="2" />
<text  x="1072.34" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="163.2" y="1045" width="0.1" height="15.0" fill="rgb(237,109,37)" rx="2" ry="2" />
<text  x="166.17" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="1056.9" y="725" width="0.2" height="15.0" fill="rgb(240,85,0)" rx="2" ry="2" />
<text  x="1059.87" y="735.5" ></text>
</g>
<g >
<title>_&lt;alloc..rc..Rc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (5 samples, 0.02%)</title><rect x="225.3" y="389" width="0.2" height="15.0" fill="rgb(252,110,7)" rx="2" ry="2" />
<text  x="228.31" y="399.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="264.1" y="549" width="0.1" height="15.0" fill="rgb(251,84,21)" rx="2" ry="2" />
<text  x="267.05" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (376 samples, 1.20%)</title><rect x="244.9" y="453" width="14.1" height="15.0" fill="rgb(218,72,22)" rx="2" ry="2" />
<text  x="247.87" y="463.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="153.9" y="1077" width="0.3" height="15.0" fill="rgb(231,200,23)" rx="2" ry="2" />
<text  x="156.94" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="187.2" y="1077" width="0.2" height="15.0" fill="rgb(216,129,28)" rx="2" ry="2" />
<text  x="190.20" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="216.5" y="453" width="0.2" height="15.0" fill="rgb(252,201,43)" rx="2" ry="2" />
<text  x="219.48" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="18.9" y="1013" width="0.1" height="15.0" fill="rgb(241,136,28)" rx="2" ry="2" />
<text  x="21.86" y="1023.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="19.3" y="901" width="0.2" height="15.0" fill="rgb(247,30,12)" rx="2" ry="2" />
<text  x="22.31" y="911.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="88.4" y="1125" width="0.3" height="15.0" fill="rgb(211,97,37)" rx="2" ry="2" />
<text  x="91.39" y="1135.5" ></text>
</g>
<g >
<title>_&lt;deno..file_fetcher..TextDocument as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="262.6" y="613" width="0.3" height="15.0" fill="rgb(234,28,7)" rx="2" ry="2" />
<text  x="265.62" y="623.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (8 samples, 0.03%)</title><rect x="1079.5" y="821" width="0.3" height="15.0" fill="rgb(254,194,8)" rx="2" ry="2" />
<text  x="1082.47" y="831.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (28 samples, 0.09%)</title><rect x="1064.6" y="869" width="1.1" height="15.0" fill="rgb(254,48,17)" rx="2" ry="2" />
<text  x="1067.65" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="20.2" y="933" width="0.2" height="15.0" fill="rgb(209,212,32)" rx="2" ry="2" />
<text  x="23.21" y="943.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="1065.0" y="789" width="0.5" height="15.0" fill="rgb(223,121,36)" rx="2" ry="2" />
<text  x="1068.02" y="799.5" ></text>
</g>
<g >
<title>deno::ops::runtime_compiler::init (53 samples, 0.17%)</title><rect x="1069.0" y="901" width="2.0" height="15.0" fill="rgb(218,168,38)" rx="2" ry="2" />
<text  x="1072.00" y="911.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="208.3" y="789" width="0.1" height="15.0" fill="rgb(252,109,48)" rx="2" ry="2" />
<text  x="211.26" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (44 samples, 0.14%)</title><rect x="1092.6" y="757" width="1.6" height="15.0" fill="rgb(223,140,14)" rx="2" ry="2" />
<text  x="1095.58" y="767.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::expr::ops::_&lt;impl swc_ecma_parser..parser..Parser&lt;I&gt;&gt;::parse_unary_expr (19 samples, 0.06%)</title><rect x="233.6" y="373" width="0.7" height="15.0" fill="rgb(246,128,14)" rx="2" ry="2" />
<text  x="236.57" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (356 samples, 1.13%)</title><rect x="245.6" y="325" width="13.4" height="15.0" fill="rgb(223,180,32)" rx="2" ry="2" />
<text  x="248.62" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.04%)</title><rect x="123.5" y="1013" width="0.6" height="15.0" fill="rgb(229,186,54)" rx="2" ry="2" />
<text  x="126.53" y="1023.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (5 samples, 0.02%)</title><rect x="129.5" y="1093" width="0.2" height="15.0" fill="rgb(230,94,47)" rx="2" ry="2" />
<text  x="132.50" y="1103.5" ></text>
</g>
<g >
<title>deno::flags::importmap_arg (9 samples, 0.03%)</title><rect x="97.6" y="1141" width="0.3" height="15.0" fill="rgb(224,55,12)" rx="2" ry="2" />
<text  x="100.59" y="1151.5" ></text>
</g>
<g >
<title>url::ParseOptions::parse (278 samples, 0.88%)</title><rect x="622.9" y="789" width="10.4" height="15.0" fill="rgb(253,226,7)" rx="2" ry="2" />
<text  x="625.88" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (298 samples, 0.95%)</title><rect x="647.7" y="613" width="11.2" height="15.0" fill="rgb(238,200,13)" rx="2" ry="2" />
<text  x="650.70" y="623.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for str&gt;::serialize (41 samples, 0.13%)</title><rect x="1112.8" y="581" width="1.6" height="15.0" fill="rgb(246,44,26)" rx="2" ry="2" />
<text  x="1115.81" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.04%)</title><rect x="1061.0" y="837" width="0.4" height="15.0" fill="rgb(243,27,45)" rx="2" ry="2" />
<text  x="1063.97" y="847.5" ></text>
</g>
<g >
<title>_&lt;deno..http_cache..HttpCache as core..clone..Clone&gt;::clone (13 samples, 0.04%)</title><rect x="660.5" y="901" width="0.5" height="15.0" fill="rgb(249,124,9)" rx="2" ry="2" />
<text  x="663.54" y="911.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (8 samples, 0.03%)</title><rect x="165.2" y="1061" width="0.3" height="15.0" fill="rgb(212,5,16)" rx="2" ry="2" />
<text  x="168.20" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="241.3" y="677" width="0.4" height="15.0" fill="rgb(241,229,32)" rx="2" ry="2" />
<text  x="244.34" y="687.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="137.0" y="1029" width="0.2" height="15.0" fill="rgb(231,68,52)" rx="2" ry="2" />
<text  x="140.04" y="1039.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (366 samples, 1.16%)</title><rect x="1124.2" y="645" width="13.7" height="15.0" fill="rgb(216,87,43)" rx="2" ry="2" />
<text  x="1127.19" y="655.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="263.0" y="581" width="0.3" height="15.0" fill="rgb(224,9,11)" rx="2" ry="2" />
<text  x="266.00" y="591.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1059.3" y="789" width="0.1" height="15.0" fill="rgb(229,34,9)" rx="2" ry="2" />
<text  x="1062.31" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="645.8" y="741" width="0.2" height="15.0" fill="rgb(227,60,17)" rx="2" ry="2" />
<text  x="648.82" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="1049.7" y="757" width="0.2" height="15.0" fill="rgb(224,2,45)" rx="2" ry="2" />
<text  x="1052.74" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 0.01%)</title><rect x="550.7" y="197" width="0.1" height="15.0" fill="rgb(220,44,40)" rx="2" ry="2" />
<text  x="553.69" y="207.5" ></text>
</g>
<g >
<title>swc_ecma_visit::visit_stmt (14 samples, 0.04%)</title><rect x="240.1" y="517" width="0.6" height="15.0" fill="rgb(228,141,51)" rx="2" ry="2" />
<text  x="243.14" y="527.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (12 samples, 0.04%)</title><rect x="1035.2" y="869" width="0.5" height="15.0" fill="rgb(231,3,22)" rx="2" ry="2" />
<text  x="1038.25" y="879.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="177.4" y="1125" width="0.3" height="15.0" fill="rgb(243,85,3)" rx="2" ry="2" />
<text  x="180.36" y="1135.5" ></text>
</g>
<g >
<title>std::io::impls::_&lt;impl std..io..Write for &amp;mut W&gt;::write_all (3 samples, 0.01%)</title><rect x="1121.2" y="485" width="0.1" height="15.0" fill="rgb(249,8,12)" rx="2" ry="2" />
<text  x="1124.18" y="495.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (53 samples, 0.17%)</title><rect x="639.8" y="677" width="2.0" height="15.0" fill="rgb(247,79,18)" rx="2" ry="2" />
<text  x="642.81" y="687.5" ></text>
</g>
<g >
<title>swc_ecma_parser::parser::input::Buffer&lt;I&gt;::bump_inner (11 samples, 0.03%)</title><rect x="232.4" y="613" width="0.4" height="15.0" fill="rgb(208,53,0)" rx="2" ry="2" />
<text  x="235.40" y="623.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (133 samples, 0.42%)</title><rect x="1101.4" y="629" width="5.0" height="15.0" fill="rgb(216,181,39)" rx="2" ry="2" />
<text  x="1104.40" y="639.5" ></text>
</g>
<g >
<title>http::header::map::HeaderMap&lt;T&gt;::with_capacity (11 samples, 0.03%)</title><rect x="836.6" y="853" width="0.4" height="15.0" fill="rgb(232,37,6)" rx="2" ry="2" />
<text  x="839.61" y="863.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="88.5" y="1093" width="0.2" height="15.0" fill="rgb(210,107,21)" rx="2" ry="2" />
<text  x="91.46" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (14 samples, 0.04%)</title><rect x="161.9" y="1013" width="0.5" height="15.0" fill="rgb(252,216,26)" rx="2" ry="2" />
<text  x="164.86" y="1023.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::create_help_and_version (19 samples, 0.06%)</title><rect x="17.2" y="1093" width="0.7" height="15.0" fill="rgb(248,76,44)" rx="2" ry="2" />
<text  x="20.17" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="219.6" y="581" width="0.2" height="15.0" fill="rgb(232,227,14)" rx="2" ry="2" />
<text  x="222.64" y="591.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..slice..Join&lt;&amp;str&gt; for [S]&gt;::join (10 samples, 0.03%)</title><rect x="259.1" y="645" width="0.3" height="15.0" fill="rgb(253,226,33)" rx="2" ry="2" />
<text  x="262.06" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (15 samples, 0.05%)</title><rect x="75.9" y="1109" width="0.6" height="15.0" fill="rgb(209,211,4)" rx="2" ry="2" />
<text  x="78.92" y="1119.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (22 samples, 0.07%)</title><rect x="547.3" y="213" width="0.9" height="15.0" fill="rgb(231,5,45)" rx="2" ry="2" />
<text  x="550.35" y="223.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..HeaderName as core..hash..Hash&gt;::hash (11 samples, 0.03%)</title><rect x="1000.8" y="789" width="0.4" height="15.0" fill="rgb(223,179,54)" rx="2" ry="2" />
<text  x="1003.82" y="799.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="127.8" y="1045" width="0.3" height="15.0" fill="rgb(233,7,17)" rx="2" ry="2" />
<text  x="130.85" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="182.1" y="1045" width="0.3" height="15.0" fill="rgb(249,63,26)" rx="2" ry="2" />
<text  x="185.06" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="292.3" y="261" width="0.1" height="15.0" fill="rgb(241,204,40)" rx="2" ry="2" />
<text  x="295.28" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="839.0" y="597" width="0.3" height="15.0" fill="rgb(209,161,52)" rx="2" ry="2" />
<text  x="842.01" y="607.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (37 samples, 0.12%)</title><rect x="1043.0" y="837" width="1.4" height="15.0" fill="rgb(228,110,31)" rx="2" ry="2" />
<text  x="1045.98" y="847.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (18 samples, 0.06%)</title><rect x="1034.5" y="869" width="0.6" height="15.0" fill="rgb(220,95,22)" rx="2" ry="2" />
<text  x="1037.46" y="879.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (14 samples, 0.04%)</title><rect x="600.5" y="741" width="0.5" height="15.0" fill="rgb(207,193,33)" rx="2" ry="2" />
<text  x="603.47" y="751.5" ></text>
</g>
<g >
<title>_&lt;swc_common..input..StringInput as swc_common..input..Input&gt;::uncons_while (3 samples, 0.01%)</title><rect x="235.6" y="309" width="0.1" height="15.0" fill="rgb(224,206,31)" rx="2" ry="2" />
<text  x="238.59" y="319.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (385 samples, 1.22%)</title><rect x="244.5" y="597" width="14.5" height="15.0" fill="rgb(212,60,38)" rx="2" ry="2" />
<text  x="247.53" y="607.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="192.2" y="1141" width="0.1" height="15.0" fill="rgb(228,99,37)" rx="2" ry="2" />
<text  x="195.16" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Display&gt;::fmt (10 samples, 0.03%)</title><rect x="210.6" y="757" width="0.4" height="15.0" fill="rgb(213,69,34)" rx="2" ry="2" />
<text  x="213.59" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="78.9" y="1045" width="0.1" height="15.0" fill="rgb(224,11,52)" rx="2" ry="2" />
<text  x="81.89" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="98.0" y="1093" width="0.3" height="15.0" fill="rgb(224,220,45)" rx="2" ry="2" />
<text  x="101.04" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (3 samples, 0.01%)</title><rect x="24.9" y="1029" width="0.1" height="15.0" fill="rgb(223,176,5)" rx="2" ry="2" />
<text  x="27.90" y="1039.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="1036.2" y="773" width="0.3" height="15.0" fill="rgb(224,104,51)" rx="2" ry="2" />
<text  x="1039.15" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (25 samples, 0.08%)</title><rect x="204.8" y="1093" width="0.9" height="15.0" fill="rgb(218,131,13)" rx="2" ry="2" />
<text  x="207.77" y="1103.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;..deserialize..ValueVisitor as serde..de..Visitor&gt;::visit_str (20 samples, 0.06%)</title><rect x="286.4" y="277" width="0.7" height="15.0" fill="rgb(223,181,47)" rx="2" ry="2" />
<text  x="289.35" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="212.7" y="357" width="0.1" height="15.0" fill="rgb(247,114,52)" rx="2" ry="2" />
<text  x="215.65" y="367.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (7 samples, 0.02%)</title><rect x="231.7" y="469" width="0.2" height="15.0" fill="rgb(249,39,14)" rx="2" ry="2" />
<text  x="234.65" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="142.8" y="997" width="0.1" height="15.0" fill="rgb(230,23,16)" rx="2" ry="2" />
<text  x="145.79" y="1007.5" ></text>
</g>
<g >
<title>deno::ops::random::init (24 samples, 0.08%)</title><rect x="1061.4" y="901" width="0.9" height="15.0" fill="rgb(234,22,43)" rx="2" ry="2" />
<text  x="1064.42" y="911.5" ></text>
</g>
<g >
<title>core::cmp::impls::_&lt;impl core..cmp..PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.02%)</title><rect x="213.1" y="453" width="0.2" height="15.0" fill="rgb(231,9,14)" rx="2" ry="2" />
<text  x="216.07" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="166.9" y="1013" width="0.1" height="15.0" fill="rgb(236,123,31)" rx="2" ry="2" />
<text  x="169.85" y="1023.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (26 samples, 0.08%)</title><rect x="572.5" y="437" width="1.0" height="15.0" fill="rgb(230,55,36)" rx="2" ry="2" />
<text  x="575.54" y="447.5" ></text>
</g>
<g >
<title>clap::app::usage::create_usage_with_title (148 samples, 0.47%)</title><rect x="18.0" y="1077" width="5.6" height="15.0" fill="rgb(243,176,4)" rx="2" ry="2" />
<text  x="21.03" y="1087.5" ></text>
</g>
<g >
<title>core::slice::_&lt;impl [T]&gt;::contains (9 samples, 0.03%)</title><rect x="212.9" y="517" width="0.4" height="15.0" fill="rgb(223,205,16)" rx="2" ry="2" />
<text  x="215.92" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::box_free (3 samples, 0.01%)</title><rect x="648.2" y="549" width="0.1" height="15.0" fill="rgb(235,21,9)" rx="2" ry="2" />
<text  x="651.19" y="559.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (10 samples, 0.03%)</title><rect x="238.4" y="421" width="0.4" height="15.0" fill="rgb(216,87,52)" rx="2" ry="2" />
<text  x="241.45" y="431.5" ></text>
</g>
<g >
<title>core::str::_&lt;impl str&gt;::trim_start_matches (4 samples, 0.01%)</title><rect x="89.4" y="1093" width="0.2" height="15.0" fill="rgb(222,176,27)" rx="2" ry="2" />
<text  x="92.44" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (22 samples, 0.07%)</title><rect x="84.7" y="1061" width="0.9" height="15.0" fill="rgb(219,208,47)" rx="2" ry="2" />
<text  x="87.75" y="1071.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..StandardHeader as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="664.6" y="789" width="0.1" height="15.0" fill="rgb(252,134,9)" rx="2" ry="2" />
<text  x="667.55" y="799.5" ></text>
</g>
<g >
<title>core::ops::function::Fn::call (1,957 samples, 6.23%)</title><rect x="1097.9" y="789" width="73.4" height="15.0" fill="rgb(222,179,21)" rx="2" ry="2" />
<text  x="1100.87" y="799.5" >core::op..</text>
</g>
<g >
<title>alloc::slice::hack::to_vec (41 samples, 0.13%)</title><rect x="667.3" y="805" width="1.5" height="15.0" fill="rgb(248,217,22)" rx="2" ry="2" />
<text  x="670.26" y="815.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="1094.1" y="533" width="0.1" height="15.0" fill="rgb(215,139,41)" rx="2" ry="2" />
<text  x="1097.08" y="543.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (9 samples, 0.03%)</title><rect x="1173.4" y="869" width="0.3" height="15.0" fill="rgb(225,193,7)" rx="2" ry="2" />
<text  x="1176.37" y="879.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.03%)</title><rect x="263.3" y="629" width="0.4" height="15.0" fill="rgb(230,93,29)" rx="2" ry="2" />
<text  x="266.30" y="639.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..iter..traits..collect..Extend&lt;&amp;str&gt;&gt;::extend (55 samples, 0.17%)</title><rect x="1173.7" y="869" width="2.1" height="15.0" fill="rgb(217,181,48)" rx="2" ry="2" />
<text  x="1176.74" y="879.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="1172.7" y="725" width="0.2" height="15.0" fill="rgb(254,173,21)" rx="2" ry="2" />
<text  x="1175.73" y="735.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (2,369 samples, 7.54%)</title><rect x="840.1" y="693" width="88.9" height="15.0" fill="rgb(251,98,25)" rx="2" ry="2" />
<text  x="843.10" y="703.5" >_&lt;core..it..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (9 samples, 0.03%)</title><rect x="232.5" y="597" width="0.3" height="15.0" fill="rgb(243,194,2)" rx="2" ry="2" />
<text  x="235.48" y="607.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (6 samples, 0.02%)</title><rect x="1094.0" y="565" width="0.2" height="15.0" fill="rgb(251,144,50)" rx="2" ry="2" />
<text  x="1097.00" y="575.5" ></text>
</g>
<g >
<title>_&lt;alloc..collections..btree..map..IntoIter&lt;K,V&gt; as core..iter..traits..iterator..Iterator&gt;::next (4 samples, 0.01%)</title><rect x="23.1" y="933" width="0.1" height="15.0" fill="rgb(229,208,43)" rx="2" ry="2" />
<text  x="26.06" y="943.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::drain_macrotasks (17 samples, 0.05%)</title><rect x="208.9" y="837" width="0.7" height="15.0" fill="rgb(214,2,14)" rx="2" ry="2" />
<text  x="211.94" y="847.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (18 samples, 0.06%)</title><rect x="164.2" y="1045" width="0.7" height="15.0" fill="rgb(210,173,44)" rx="2" ry="2" />
<text  x="167.22" y="1055.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..ResultShunt&lt;I,E&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (8 samples, 0.03%)</title><rect x="1099.7" y="613" width="0.3" height="15.0" fill="rgb(247,80,26)" rx="2" ry="2" />
<text  x="1102.71" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="620.5" y="709" width="0.2" height="15.0" fill="rgb(235,141,4)" rx="2" ry="2" />
<text  x="623.52" y="719.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for alloc..string..String&gt;::serialize (473 samples, 1.50%)</title><rect x="1148.5" y="581" width="17.8" height="15.0" fill="rgb(249,19,32)" rx="2" ry="2" />
<text  x="1151.52" y="591.5" ></text>
</g>
<g >
<title>clap::args::subcommand::SubCommand::with_name (13 samples, 0.04%)</title><rect x="127.6" y="1141" width="0.5" height="15.0" fill="rgb(246,206,51)" rx="2" ry="2" />
<text  x="130.62" y="1151.5" ></text>
</g>
<g >
<title>url::file_url_segments_to_pathbuf (45 samples, 0.14%)</title><rect x="241.9" y="645" width="1.7" height="15.0" fill="rgb(237,145,43)" rx="2" ry="2" />
<text  x="244.90" y="655.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (52 samples, 0.17%)</title><rect x="55.5" y="1029" width="2.0" height="15.0" fill="rgb(219,226,15)" rx="2" ry="2" />
<text  x="58.54" y="1039.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.04%)</title><rect x="1066.1" y="837" width="0.5" height="15.0" fill="rgb(219,214,5)" rx="2" ry="2" />
<text  x="1069.11" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Display&gt;::fmt (20 samples, 0.06%)</title><rect x="212.1" y="485" width="0.7" height="15.0" fill="rgb(247,60,40)" rx="2" ry="2" />
<text  x="215.05" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="666.1" y="853" width="0.1" height="15.0" fill="rgb(231,211,36)" rx="2" ry="2" />
<text  x="669.06" y="863.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::get_index_of (6 samples, 0.02%)</title><rect x="571.1" y="341" width="0.3" height="15.0" fill="rgb(217,46,17)" rx="2" ry="2" />
<text  x="574.15" y="351.5" ></text>
</g>
<g >
<title>_&lt;serde_json..value..de..KeyClassifier as serde..de..DeserializeSeed&gt;::deserialize (13 samples, 0.04%)</title><rect x="274.3" y="373" width="0.5" height="15.0" fill="rgb(230,133,17)" rx="2" ry="2" />
<text  x="277.34" y="383.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::new::_{{closure}} (872 samples, 2.77%)</title><rect x="1138.3" y="741" width="32.7" height="15.0" fill="rgb(207,110,0)" rx="2" ry="2" />
<text  x="1141.27" y="751.5" >de..</text>
</g>
<g >
<title>_&lt;smallvec..SmallVec&lt;A&gt; as core..iter..traits..collect..FromIterator&lt;&lt;A as smallvec..Array&gt;..Item&gt;&gt;::from_iter (14 samples, 0.04%)</title><rect x="1099.5" y="677" width="0.5" height="15.0" fill="rgb(213,223,53)" rx="2" ry="2" />
<text  x="1102.48" y="687.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapKey&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (478 samples, 1.52%)</title><rect x="331.4" y="309" width="17.9" height="15.0" fill="rgb(207,101,30)" rx="2" ry="2" />
<text  x="334.40" y="319.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="1180.4" y="901" width="0.6" height="15.0" fill="rgb(214,200,39)" rx="2" ry="2" />
<text  x="1183.43" y="911.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (10 samples, 0.03%)</title><rect x="1035.3" y="853" width="0.4" height="15.0" fill="rgb(242,202,54)" rx="2" ry="2" />
<text  x="1038.32" y="863.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="174.1" y="997" width="0.1" height="15.0" fill="rgb(236,25,27)" rx="2" ry="2" />
<text  x="177.06" y="1007.5" ></text>
</g>
<g >
<title>deno::file_fetcher::TextDocument::to_str (12 samples, 0.04%)</title><rect x="615.0" y="565" width="0.4" height="15.0" fill="rgb(247,169,42)" rx="2" ry="2" />
<text  x="617.96" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (24 samples, 0.08%)</title><rect x="221.5" y="533" width="0.9" height="15.0" fill="rgb(223,58,18)" rx="2" ry="2" />
<text  x="224.48" y="543.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.01%)</title><rect x="268.1" y="565" width="0.2" height="15.0" fill="rgb(206,199,26)" rx="2" ry="2" />
<text  x="271.14" y="575.5" ></text>
</g>
<g >
<title>deno::permissions::Permissions::check_read (9 samples, 0.03%)</title><rect x="213.8" y="517" width="0.3" height="15.0" fill="rgb(216,167,9)" rx="2" ry="2" />
<text  x="216.78" y="527.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::fold (24 samples, 0.08%)</title><rect x="21.8" y="949" width="0.9" height="15.0" fill="rgb(216,84,34)" rx="2" ry="2" />
<text  x="24.75" y="959.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="1180.7" y="837" width="0.3" height="15.0" fill="rgb(240,107,51)" rx="2" ry="2" />
<text  x="1183.73" y="847.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::propagate_globals (23 samples, 0.07%)</title><rect x="63.8" y="1141" width="0.9" height="15.0" fill="rgb(207,170,37)" rx="2" ry="2" />
<text  x="66.80" y="1151.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..string..ToString&gt;::to_string (14 samples, 0.04%)</title><rect x="614.4" y="581" width="0.5" height="15.0" fill="rgb(234,173,22)" rx="2" ry="2" />
<text  x="617.36" y="591.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.05%)</title><rect x="1175.2" y="757" width="0.6" height="15.0" fill="rgb(218,137,4)" rx="2" ry="2" />
<text  x="1178.25" y="767.5" ></text>
</g>
<g >
<title>_&lt;deno..tsc..DependencyVisitor as swc_ecma_visit..Visit&gt;::visit_call_expr (9 samples, 0.03%)</title><rect x="240.3" y="437" width="0.4" height="15.0" fill="rgb(223,120,37)" rx="2" ry="2" />
<text  x="243.32" y="447.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (549 samples, 1.75%)</title><rect x="638.6" y="933" width="20.6" height="15.0" fill="rgb(216,54,18)" rx="2" ry="2" />
<text  x="641.61" y="943.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="668.6" y="757" width="0.2" height="15.0" fill="rgb(218,159,6)" rx="2" ry="2" />
<text  x="671.57" y="767.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="1116.3" y="501" width="0.1" height="15.0" fill="rgb(249,117,46)" rx="2" ry="2" />
<text  x="1119.27" y="511.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (11 samples, 0.03%)</title><rect x="208.5" y="805" width="0.4" height="15.0" fill="rgb(208,99,25)" rx="2" ry="2" />
<text  x="211.53" y="815.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (3 samples, 0.01%)</title><rect x="14.4" y="1061" width="0.1" height="15.0" fill="rgb(240,104,0)" rx="2" ry="2" />
<text  x="17.39" y="1071.5" ></text>
</g>
<g >
<title>reqwest::async_impl::client::Client::builder (28 samples, 0.09%)</title><rect x="836.0" y="885" width="1.0" height="15.0" fill="rgb(240,106,16)" rx="2" ry="2" />
<text  x="838.97" y="895.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut W as core..fmt..Write&gt;::write_str (9 samples, 0.03%)</title><rect x="612.7" y="485" width="0.4" height="15.0" fill="rgb(234,52,27)" rx="2" ry="2" />
<text  x="615.75" y="495.5" ></text>
</g>
<g >
<title>_&lt;deno..tsc.._..&lt;impl serde..de..Deserialize for deno..tsc..CompiledFileMetadata&gt;..deserialize..__Field as serde..de..Deserialize&gt;::deserialize (3 samples, 0.01%)</title><rect x="266.6" y="501" width="0.1" height="15.0" fill="rgb(251,195,13)" rx="2" ry="2" />
<text  x="269.57" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="271.0" y="341" width="0.1" height="15.0" fill="rgb(248,144,5)" rx="2" ry="2" />
<text  x="273.96" y="351.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="64.7" y="1109" width="0.4" height="15.0" fill="rgb(208,123,15)" rx="2" ry="2" />
<text  x="67.74" y="1119.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.02%)</title><rect x="586.8" y="725" width="0.3" height="15.0" fill="rgb(245,186,0)" rx="2" ry="2" />
<text  x="589.84" y="735.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::state::_&lt;impl core..iter..traits..iterator..Iterator for swc_ecma_parser..lexer..Lexer&lt;I&gt;&gt;::next (8 samples, 0.03%)</title><rect x="234.0" y="229" width="0.3" height="15.0" fill="rgb(232,105,49)" rx="2" ry="2" />
<text  x="236.98" y="239.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::new_uninitialized (6 samples, 0.02%)</title><rect x="833.4" y="789" width="0.2" height="15.0" fill="rgb(225,124,22)" rx="2" ry="2" />
<text  x="836.42" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.01%)</title><rect x="24.9" y="1045" width="0.1" height="15.0" fill="rgb(215,36,38)" rx="2" ry="2" />
<text  x="27.87" y="1055.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="269.5" y="453" width="0.3" height="15.0" fill="rgb(229,83,4)" rx="2" ry="2" />
<text  x="272.49" y="463.5" ></text>
</g>
<g >
<title>serde::de::MapAccess::next_value (690 samples, 2.20%)</title><rect x="470.4" y="293" width="25.9" height="15.0" fill="rgb(215,12,10)" rx="2" ry="2" />
<text  x="473.42" y="303.5" >s..</text>
</g>
<g >
<title>_&lt;std..collections..hash..map..RandomState as core..default..Default&gt;::default (4 samples, 0.01%)</title><rect x="829.0" y="789" width="0.2" height="15.0" fill="rgb(233,176,50)" rx="2" ry="2" />
<text  x="832.03" y="799.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc..collections..btree..node..NodeRef&lt;alloc..collections..btree..node..marker..Mut,K,V,alloc..collections..btree..node..marker..Leaf&gt;,alloc..collections..btree..node..marker..Edge&gt;::insert (3 samples, 0.01%)</title><rect x="22.5" y="693" width="0.2" height="15.0" fill="rgb(223,197,39)" rx="2" ry="2" />
<text  x="25.54" y="703.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="226.8" y="565" width="0.2" height="15.0" fill="rgb(251,182,5)" rx="2" ry="2" />
<text  x="229.85" y="575.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="1098.8" y="725" width="0.2" height="15.0" fill="rgb(226,46,38)" rx="2" ry="2" />
<text  x="1101.81" y="735.5" ></text>
</g>
<g >
<title>deno::tsc::_::_&lt;impl serde..de..Deserialize for deno..tsc..CompiledFileMetadata&gt;::deserialize (27 samples, 0.09%)</title><rect x="266.3" y="597" width="1.1" height="15.0" fill="rgb(218,225,8)" rx="2" ry="2" />
<text  x="269.34" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="87.8" y="1093" width="0.2" height="15.0" fill="rgb(234,132,27)" rx="2" ry="2" />
<text  x="90.79" y="1103.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (80 samples, 0.25%)</title><rect x="115.6" y="1125" width="3.0" height="15.0" fill="rgb(254,59,27)" rx="2" ry="2" />
<text  x="118.57" y="1135.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (6 samples, 0.02%)</title><rect x="1027.1" y="805" width="0.2" height="15.0" fill="rgb(245,198,1)" rx="2" ry="2" />
<text  x="1030.07" y="815.5" ></text>
</g>
<g >
<title>_&lt;deno_core..module_specifier..ModuleSpecifier as core..fmt..Display&gt;::fmt (12 samples, 0.04%)</title><rect x="612.6" y="533" width="0.5" height="15.0" fill="rgb(236,119,9)" rx="2" ry="2" />
<text  x="615.63" y="543.5" ></text>
</g>
<g >
<title>deno::flags::inspect_args (34 samples, 0.11%)</title><rect x="154.5" y="1125" width="1.3" height="15.0" fill="rgb(252,223,8)" rx="2" ry="2" />
<text  x="157.50" y="1135.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::long (6 samples, 0.02%)</title><rect x="186.8" y="1109" width="0.2" height="15.0" fill="rgb(215,22,17)" rx="2" ry="2" />
<text  x="189.75" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (172 samples, 0.55%)</title><rect x="342.9" y="197" width="6.4" height="15.0" fill="rgb(212,33,5)" rx="2" ry="2" />
<text  x="345.89" y="207.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (152 samples, 0.48%)</title><rect x="181.0" y="1093" width="5.8" height="15.0" fill="rgb(231,100,6)" rx="2" ry="2" />
<text  x="184.04" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="829.4" y="805" width="0.1" height="15.0" fill="rgb(222,85,23)" rx="2" ry="2" />
<text  x="832.37" y="815.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (7 samples, 0.02%)</title><rect x="87.4" y="1109" width="0.2" height="15.0" fill="rgb(244,75,5)" rx="2" ry="2" />
<text  x="90.38" y="1119.5" ></text>
</g>
<g >
<title>deno::flags::flags_from_vec (4,937 samples, 15.71%)</title><rect x="12.9" y="1205" width="185.4" height="15.0" fill="rgb(243,200,37)" rx="2" ry="2" />
<text  x="15.93" y="1215.5" >deno::flags::flags_from_..</text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="105.2" y="1077" width="0.2" height="15.0" fill="rgb(226,74,24)" rx="2" ry="2" />
<text  x="108.25" y="1087.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..IntoIter&lt;T&gt; as core..ops..drop..Drop&gt;::drop (9 samples, 0.03%)</title><rect x="12.3" y="1061" width="0.4" height="15.0" fill="rgb(234,102,30)" rx="2" ry="2" />
<text  x="15.33" y="1071.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (22 samples, 0.07%)</title><rect x="203.8" y="1045" width="0.9" height="15.0" fill="rgb(234,183,53)" rx="2" ry="2" />
<text  x="206.83" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (389 samples, 1.24%)</title><rect x="244.4" y="661" width="14.6" height="15.0" fill="rgb(227,1,7)" rx="2" ry="2" />
<text  x="247.38" y="671.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (18 samples, 0.06%)</title><rect x="1060.0" y="789" width="0.7" height="15.0" fill="rgb(250,109,35)" rx="2" ry="2" />
<text  x="1062.99" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="81.5" y="1077" width="0.4" height="15.0" fill="rgb(239,79,33)" rx="2" ry="2" />
<text  x="84.52" y="1087.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::state (7 samples, 0.02%)</title><rect x="1172.7" y="757" width="0.2" height="15.0" fill="rgb(222,106,39)" rx="2" ry="2" />
<text  x="1175.66" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (176 samples, 0.56%)</title><rect x="1048.4" y="837" width="6.6" height="15.0" fill="rgb(211,187,18)" rx="2" ry="2" />
<text  x="1051.43" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (24 samples, 0.08%)</title><rect x="1078.3" y="789" width="0.9" height="15.0" fill="rgb(243,82,2)" rx="2" ry="2" />
<text  x="1081.27" y="799.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="270.8" y="405" width="0.3" height="15.0" fill="rgb(226,53,19)" rx="2" ry="2" />
<text  x="273.81" y="415.5" ></text>
</g>
<g >
<title>clap::app::App::subcommand (25 samples, 0.08%)</title><rect x="78.1" y="1157" width="0.9" height="15.0" fill="rgb(210,79,17)" rx="2" ry="2" />
<text  x="81.10" y="1167.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="666.7" y="709" width="0.1" height="15.0" fill="rgb(242,48,48)" rx="2" ry="2" />
<text  x="669.69" y="719.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (517 samples, 1.64%)</title><rect x="416.9" y="117" width="19.4" height="15.0" fill="rgb(209,88,2)" rx="2" ry="2" />
<text  x="419.92" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (555 samples, 1.77%)</title><rect x="977.5" y="773" width="20.8" height="15.0" fill="rgb(235,114,53)" rx="2" ry="2" />
<text  x="980.51" y="783.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::from_options (212 samples, 0.67%)</title><rect x="1086.5" y="853" width="8.0" height="15.0" fill="rgb(231,52,8)" rx="2" ry="2" />
<text  x="1089.53" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (8 samples, 0.03%)</title><rect x="1173.4" y="853" width="0.3" height="15.0" fill="rgb(233,57,7)" rx="2" ry="2" />
<text  x="1176.41" y="863.5" ></text>
</g>
<g >
<title>tokio::runtime::basic_scheduler::enter (4 samples, 0.01%)</title><rect x="199.6" y="1125" width="0.2" height="15.0" fill="rgb(230,80,4)" rx="2" ry="2" />
<text  x="202.63" y="1135.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::inc_occurrence_of (6 samples, 0.02%)</title><rect x="24.1" y="1093" width="0.2" height="15.0" fill="rgb(213,217,6)" rx="2" ry="2" />
<text  x="27.12" y="1103.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="620.9" y="709" width="0.1" height="15.0" fill="rgb(240,74,27)" rx="2" ry="2" />
<text  x="623.85" y="719.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (78 samples, 0.25%)</title><rect x="54.6" y="1045" width="2.9" height="15.0" fill="rgb(232,164,7)" rx="2" ry="2" />
<text  x="57.56" y="1055.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (15 samples, 0.05%)</title><rect x="154.6" y="1093" width="0.6" height="15.0" fill="rgb(243,138,47)" rx="2" ry="2" />
<text  x="157.61" y="1103.5" ></text>
</g>
<g >
<title>clap::args::arg_matcher::ArgMatcher::fill_in_global_values (11 samples, 0.03%)</title><rect x="63.9" y="1109" width="0.4" height="15.0" fill="rgb(249,199,44)" rx="2" ry="2" />
<text  x="66.87" y="1119.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (604 samples, 1.92%)</title><rect x="522.8" y="229" width="22.6" height="15.0" fill="rgb(217,35,8)" rx="2" ry="2" />
<text  x="525.76" y="239.5" >i..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="243.0" y="581" width="0.4" height="15.0" fill="rgb(231,97,12)" rx="2" ry="2" />
<text  x="245.95" y="591.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (24 samples, 0.08%)</title><rect x="1066.9" y="821" width="0.9" height="15.0" fill="rgb(211,30,24)" rx="2" ry="2" />
<text  x="1069.94" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="1075.6" y="725" width="0.2" height="15.0" fill="rgb(215,0,53)" rx="2" ry="2" />
<text  x="1078.57" y="735.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="263.3" y="613" width="0.4" height="15.0" fill="rgb(214,143,36)" rx="2" ry="2" />
<text  x="266.34" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (12 samples, 0.04%)</title><rect x="155.3" y="1077" width="0.5" height="15.0" fill="rgb(239,64,6)" rx="2" ry="2" />
<text  x="158.33" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="1084.9" y="725" width="0.3" height="15.0" fill="rgb(239,187,52)" rx="2" ry="2" />
<text  x="1087.88" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (382 samples, 1.22%)</title><rect x="244.6" y="549" width="14.4" height="15.0" fill="rgb(221,151,38)" rx="2" ry="2" />
<text  x="247.64" y="559.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (84 samples, 0.27%)</title><rect x="174.2" y="1077" width="3.2" height="15.0" fill="rgb(251,101,17)" rx="2" ry="2" />
<text  x="177.21" y="1087.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;&amp;clap..args..arg..Arg&gt;&gt;::from (154 samples, 0.49%)</title><rect x="33.1" y="1109" width="5.8" height="15.0" fill="rgb(211,49,5)" rx="2" ry="2" />
<text  x="36.13" y="1119.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..valued..Valued as core..clone..Clone&gt;::clone (126 samples, 0.40%)</title><rect x="34.2" y="1077" width="4.7" height="15.0" fill="rgb(252,197,52)" rx="2" ry="2" />
<text  x="37.18" y="1087.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (10 samples, 0.03%)</title><rect x="621.3" y="789" width="0.3" height="15.0" fill="rgb(216,120,3)" rx="2" ry="2" />
<text  x="624.27" y="799.5" ></text>
</g>
<g >
<title>deno_core::modules::Modules::get_info (6 samples, 0.02%)</title><rect x="618.7" y="821" width="0.2" height="15.0" fill="rgb(227,69,2)" rx="2" ry="2" />
<text  x="621.68" y="831.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (503 samples, 1.60%)</title><rect x="552.5" y="389" width="18.9" height="15.0" fill="rgb(240,10,3)" rx="2" ry="2" />
<text  x="555.49" y="399.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="1100.6" y="709" width="0.3" height="15.0" fill="rgb(215,187,15)" rx="2" ry="2" />
<text  x="1103.57" y="719.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="619.4" y="821" width="0.3" height="15.0" fill="rgb(229,14,13)" rx="2" ry="2" />
<text  x="622.35" y="831.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (40 samples, 0.13%)</title><rect x="1083.7" y="853" width="1.5" height="15.0" fill="rgb(240,151,41)" rx="2" ry="2" />
<text  x="1086.68" y="863.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (4 samples, 0.01%)</title><rect x="573.4" y="373" width="0.1" height="15.0" fill="rgb(221,165,48)" rx="2" ry="2" />
<text  x="576.36" y="383.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="660.8" y="805" width="0.2" height="15.0" fill="rgb(253,146,18)" rx="2" ry="2" />
<text  x="663.76" y="815.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.06%)</title><rect x="829.6" y="757" width="0.8" height="15.0" fill="rgb(206,133,35)" rx="2" ry="2" />
<text  x="832.63" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.01%)</title><rect x="1004.6" y="805" width="0.1" height="15.0" fill="rgb(216,189,0)" rx="2" ry="2" />
<text  x="1007.58" y="815.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (30 samples, 0.10%)</title><rect x="1039.8" y="773" width="1.2" height="15.0" fill="rgb(235,223,7)" rx="2" ry="2" />
<text  x="1042.83" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (6 samples, 0.02%)</title><rect x="573.3" y="389" width="0.2" height="15.0" fill="rgb(241,211,34)" rx="2" ry="2" />
<text  x="576.29" y="399.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="96.6" y="1061" width="0.2" height="15.0" fill="rgb(205,223,28)" rx="2" ry="2" />
<text  x="99.57" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (4 samples, 0.01%)</title><rect x="202.0" y="1013" width="0.1" height="15.0" fill="rgb(250,58,13)" rx="2" ry="2" />
<text  x="204.96" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="1081.9" y="709" width="0.1" height="15.0" fill="rgb(227,219,39)" rx="2" ry="2" />
<text  x="1084.88" y="719.5" ></text>
</g>
<g >
<title>_&lt;serde_json..ser..Compound&lt;W,F&gt; as serde..ser..SerializeMap&gt;::serialize_key (664 samples, 2.11%)</title><rect x="1142.1" y="613" width="25.0" height="15.0" fill="rgb(240,214,15)" rx="2" ry="2" />
<text  x="1145.13" y="623.5" >_..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="547.9" y="101" width="0.3" height="15.0" fill="rgb(222,182,49)" rx="2" ry="2" />
<text  x="550.87" y="111.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (178 samples, 0.57%)</title><rect x="45.0" y="1077" width="6.6" height="15.0" fill="rgb(238,72,3)" rx="2" ry="2" />
<text  x="47.95" y="1087.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="79.5" y="1077" width="0.1" height="15.0" fill="rgb(227,77,9)" rx="2" ry="2" />
<text  x="82.45" y="1087.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="114.8" y="1125" width="0.5" height="15.0" fill="rgb(224,133,12)" rx="2" ry="2" />
<text  x="117.82" y="1135.5" ></text>
</g>
<g >
<title>tokio::runtime::handle::Handle::enter (26,196 samples, 83.34%)</title><rect x="206.2" y="1173" width="983.5" height="15.0" fill="rgb(241,35,13)" rx="2" ry="2" />
<text  x="209.23" y="1183.5" >tokio::runtime::handle::Handle::enter</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1087.6" y="693" width="0.1" height="15.0" fill="rgb(222,31,39)" rx="2" ry="2" />
<text  x="1090.58" y="703.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="177.6" y="1045" width="0.1" height="15.0" fill="rgb(219,222,30)" rx="2" ry="2" />
<text  x="180.55" y="1055.5" ></text>
</g>
<g >
<title>phf_shared::hash (4 samples, 0.01%)</title><rect x="231.8" y="421" width="0.1" height="15.0" fill="rgb(233,116,3)" rx="2" ry="2" />
<text  x="234.76" y="431.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.04%)</title><rect x="1059.0" y="837" width="0.4" height="15.0" fill="rgb(237,140,29)" rx="2" ry="2" />
<text  x="1061.98" y="847.5" ></text>
</g>
<g >
<title>deno_core::modules::RecursiveModuleLoad::add_root (297 samples, 0.94%)</title><rect x="600.4" y="789" width="11.1" height="15.0" fill="rgb(206,39,49)" rx="2" ry="2" />
<text  x="603.36" y="799.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (157 samples, 0.50%)</title><rect x="1017.9" y="789" width="5.9" height="15.0" fill="rgb(214,56,15)" rx="2" ry="2" />
<text  x="1020.87" y="799.5" ></text>
</g>
<g >
<title>deno::flags::run_subcommand (585 samples, 1.86%)</title><rect x="141.3" y="1157" width="22.0" height="15.0" fill="rgb(233,15,7)" rx="2" ry="2" />
<text  x="144.32" y="1167.5" >d..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="1067.6" y="725" width="0.2" height="15.0" fill="rgb(211,190,50)" rx="2" ry="2" />
<text  x="1070.61" y="735.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (369 samples, 1.17%)</title><rect x="245.1" y="405" width="13.9" height="15.0" fill="rgb(249,21,0)" rx="2" ry="2" />
<text  x="248.13" y="415.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (56 samples, 0.18%)</title><rect x="125.0" y="1093" width="2.1" height="15.0" fill="rgb(219,85,6)" rx="2" ry="2" />
<text  x="127.96" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.08%)</title><rect x="204.8" y="1077" width="0.9" height="15.0" fill="rgb(221,3,11)" rx="2" ry="2" />
<text  x="207.81" y="1087.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="1034.6" y="805" width="0.3" height="15.0" fill="rgb(206,91,2)" rx="2" ry="2" />
<text  x="1037.61" y="815.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.03%)</title><rect x="622.4" y="789" width="0.4" height="15.0" fill="rgb(213,60,36)" rx="2" ry="2" />
<text  x="625.43" y="799.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (6 samples, 0.02%)</title><rect x="1085.6" y="805" width="0.3" height="15.0" fill="rgb(226,149,6)" rx="2" ry="2" />
<text  x="1088.63" y="815.5" ></text>
</g>
<g >
<title>_&lt;serde..de..impls..StringVisitor as serde..de..Visitor&gt;::visit_str (135 samples, 0.43%)</title><rect x="279.3" y="261" width="5.1" height="15.0" fill="rgb(238,181,19)" rx="2" ry="2" />
<text  x="282.33" y="271.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (30 samples, 0.10%)</title><rect x="1003.0" y="821" width="1.2" height="15.0" fill="rgb(249,33,30)" rx="2" ry="2" />
<text  x="1006.04" y="831.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::new (10 samples, 0.03%)</title><rect x="230.9" y="645" width="0.3" height="15.0" fill="rgb(223,89,17)" rx="2" ry="2" />
<text  x="233.86" y="655.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (31 samples, 0.10%)</title><rect x="1033.0" y="869" width="1.2" height="15.0" fill="rgb(221,225,2)" rx="2" ry="2" />
<text  x="1036.00" y="879.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="191.7" y="1061" width="0.2" height="15.0" fill="rgb(221,109,33)" rx="2" ry="2" />
<text  x="194.74" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="1002.4" y="757" width="0.3" height="15.0" fill="rgb(216,34,54)" rx="2" ry="2" />
<text  x="1005.36" y="767.5" ></text>
</g>
<g >
<title>_&lt;T as core..convert..Into&lt;U&gt;&gt;::into (11 samples, 0.03%)</title><rect x="100.4" y="1109" width="0.4" height="15.0" fill="rgb(250,15,0)" rx="2" ry="2" />
<text  x="103.40" y="1119.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (303 samples, 0.96%)</title><rect x="368.7" y="181" width="11.4" height="15.0" fill="rgb(254,210,40)" rx="2" ry="2" />
<text  x="371.72" y="191.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (29 samples, 0.09%)</title><rect x="1113.3" y="533" width="1.1" height="15.0" fill="rgb(240,138,31)" rx="2" ry="2" />
<text  x="1116.26" y="543.5" ></text>
</g>
<g >
<title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.01%)</title><rect x="641.4" y="613" width="0.2" height="15.0" fill="rgb(237,30,52)" rx="2" ry="2" />
<text  x="644.43" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="162.7" y="1061" width="0.2" height="15.0" fill="rgb(207,107,47)" rx="2" ry="2" />
<text  x="165.69" y="1071.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="94.9" y="1061" width="0.2" height="15.0" fill="rgb(229,26,10)" rx="2" ry="2" />
<text  x="97.88" y="1071.5" ></text>
</g>
<g >
<title>_&lt;rustls..anchors..OwnedTrustAnchor as core..clone..Clone&gt;::clone (2,091 samples, 6.65%)</title><rect x="850.5" y="629" width="78.5" height="15.0" fill="rgb(209,195,11)" rx="2" ry="2" />
<text  x="853.54" y="639.5" >_&lt;rustls...</text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="222.5" y="613" width="0.3" height="15.0" fill="rgb(245,216,16)" rx="2" ry="2" />
<text  x="225.53" y="623.5" ></text>
</g>
<g >
<title>_&lt;serde..de..impls..StringVisitor as serde..de..Visitor&gt;::visit_str (9 samples, 0.03%)</title><rect x="267.0" y="437" width="0.4" height="15.0" fill="rgb(243,19,32)" rx="2" ry="2" />
<text  x="270.02" y="447.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="264.1" y="533" width="0.1" height="15.0" fill="rgb(217,170,31)" rx="2" ry="2" />
<text  x="267.09" y="543.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (35 samples, 0.11%)</title><rect x="200.8" y="1093" width="1.3" height="15.0" fill="rgb(207,201,40)" rx="2" ry="2" />
<text  x="203.79" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,core..slice..Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="21.4" y="997" width="0.2" height="15.0" fill="rgb(223,122,24)" rx="2" ry="2" />
<text  x="24.41" y="1007.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="153.2" y="1093" width="0.3" height="15.0" fill="rgb(254,156,15)" rx="2" ry="2" />
<text  x="156.22" y="1103.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::or_else (10 samples, 0.03%)</title><rect x="236.2" y="389" width="0.3" height="15.0" fill="rgb(218,143,18)" rx="2" ry="2" />
<text  x="239.16" y="399.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (11 samples, 0.03%)</title><rect x="77.6" y="1125" width="0.4" height="15.0" fill="rgb(245,181,27)" rx="2" ry="2" />
<text  x="80.58" y="1135.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="222.4" y="677" width="0.4" height="15.0" fill="rgb(245,84,13)" rx="2" ry="2" />
<text  x="225.38" y="687.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (55 samples, 0.17%)</title><rect x="656.1" y="373" width="2.0" height="15.0" fill="rgb(230,33,52)" rx="2" ry="2" />
<text  x="659.07" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.04%)</title><rect x="221.9" y="485" width="0.5" height="15.0" fill="rgb(244,106,47)" rx="2" ry="2" />
<text  x="224.93" y="495.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (21 samples, 0.07%)</title><rect x="1059.9" y="805" width="0.8" height="15.0" fill="rgb(233,152,14)" rx="2" ry="2" />
<text  x="1062.88" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="97.4" y="1061" width="0.2" height="15.0" fill="rgb(236,95,48)" rx="2" ry="2" />
<text  x="100.44" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (12 samples, 0.04%)</title><rect x="645.5" y="869" width="0.5" height="15.0" fill="rgb(221,133,38)" rx="2" ry="2" />
<text  x="648.52" y="879.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (8 samples, 0.03%)</title><rect x="195.0" y="1093" width="0.3" height="15.0" fill="rgb(241,88,37)" rx="2" ry="2" />
<text  x="198.01" y="1103.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..ResultShunt&lt;I,E&gt; as core..iter..traits..iterator..Iterator&gt;::next (10 samples, 0.03%)</title><rect x="1099.6" y="645" width="0.4" height="15.0" fill="rgb(247,51,39)" rx="2" ry="2" />
<text  x="1102.64" y="655.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::shutdown::Receiver::wait (19 samples, 0.06%)</title><rect x="198.7" y="1125" width="0.7" height="15.0" fill="rgb(249,223,48)" rx="2" ry="2" />
<text  x="201.73" y="1135.5" ></text>
</g>
<g >
<title>_&lt;alloc..rc..Rc&lt;T&gt; as core..default..Default&gt;::default (3 samples, 0.01%)</title><rect x="230.9" y="629" width="0.1" height="15.0" fill="rgb(252,107,17)" rx="2" ry="2" />
<text  x="233.90" y="639.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::state (7 samples, 0.02%)</title><rect x="618.4" y="821" width="0.3" height="15.0" fill="rgb(246,134,39)" rx="2" ry="2" />
<text  x="621.41" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="115.1" y="1013" width="0.1" height="15.0" fill="rgb(252,59,47)" rx="2" ry="2" />
<text  x="118.08" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="663.7" y="741" width="0.1" height="15.0" fill="rgb(231,205,26)" rx="2" ry="2" />
<text  x="666.65" y="751.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="119.3" y="1125" width="0.3" height="15.0" fill="rgb(237,112,20)" rx="2" ry="2" />
<text  x="122.32" y="1135.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (72 samples, 0.23%)</title><rect x="150.4" y="1061" width="2.7" height="15.0" fill="rgb(250,156,52)" rx="2" ry="2" />
<text  x="153.41" y="1071.5" ></text>
</g>
<g >
<title>reqwest::async_impl::client::ClientBuilder::build (4,353 samples, 13.85%)</title><rect x="837.0" y="885" width="163.4" height="15.0" fill="rgb(245,26,36)" rx="2" ry="2" />
<text  x="840.02" y="895.5" >reqwest::async_impl::..</text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="127.8" y="1061" width="0.3" height="15.0" fill="rgb(244,24,33)" rx="2" ry="2" />
<text  x="130.81" y="1071.5" ></text>
</g>
<g >
<title>rusty_v8::script::_&lt;impl rusty_v8..data..Script&gt;::compile (3 samples, 0.01%)</title><rect x="1096.3" y="837" width="0.1" height="15.0" fill="rgb(224,166,3)" rx="2" ry="2" />
<text  x="1099.29" y="847.5" ></text>
</g>
<g >
<title>http::header::value::HeaderValue::from_str::_{{closure}} (8 samples, 0.03%)</title><rect x="834.7" y="821" width="0.3" height="15.0" fill="rgb(213,133,15)" rx="2" ry="2" />
<text  x="837.66" y="831.5" ></text>
</g>
<g >
<title>rustls::anchors::RootCertStore::add_server_trust_anchors (1,854 samples, 5.90%)</title><rect x="758.9" y="869" width="69.6" height="15.0" fill="rgb(209,182,5)" rx="2" ry="2" />
<text  x="761.94" y="879.5" >rustls:..</text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (16 samples, 0.05%)</title><rect x="1002.1" y="821" width="0.6" height="15.0" fill="rgb(251,10,33)" rx="2" ry="2" />
<text  x="1005.06" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (56 samples, 0.18%)</title><rect x="515.7" y="229" width="2.1" height="15.0" fill="rgb(253,209,24)" rx="2" ry="2" />
<text  x="518.70" y="239.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (41 samples, 0.13%)</title><rect x="1174.3" y="837" width="1.5" height="15.0" fill="rgb(251,86,13)" rx="2" ry="2" />
<text  x="1177.27" y="847.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (5 samples, 0.02%)</title><rect x="94.1" y="1077" width="0.1" height="15.0" fill="rgb(214,203,28)" rx="2" ry="2" />
<text  x="97.06" y="1087.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (52 samples, 0.17%)</title><rect x="571.6" y="485" width="1.9" height="15.0" fill="rgb(215,12,44)" rx="2" ry="2" />
<text  x="574.56" y="495.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="98.1" y="1077" width="0.2" height="15.0" fill="rgb(232,205,53)" rx="2" ry="2" />
<text  x="101.07" y="1087.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::find_map (4 samples, 0.01%)</title><rect x="1090.0" y="821" width="0.1" height="15.0" fill="rgb(233,137,23)" rx="2" ry="2" />
<text  x="1092.99" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="88.2" y="1045" width="0.2" height="15.0" fill="rgb(216,33,49)" rx="2" ry="2" />
<text  x="91.24" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="1110.6" y="501" width="0.1" height="15.0" fill="rgb(205,16,4)" rx="2" ry="2" />
<text  x="1113.56" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (9 samples, 0.03%)</title><rect x="73.8" y="1077" width="0.4" height="15.0" fill="rgb(205,167,45)" rx="2" ry="2" />
<text  x="76.82" y="1087.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="263.8" y="645" width="0.4" height="15.0" fill="rgb(220,80,28)" rx="2" ry="2" />
<text  x="266.83" y="655.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (32 samples, 0.10%)</title><rect x="1078.0" y="821" width="1.2" height="15.0" fill="rgb(235,92,6)" rx="2" ry="2" />
<text  x="1080.97" y="831.5" ></text>
</g>
<g >
<title>deno::checksum::gen (28 samples, 0.09%)</title><rect x="267.4" y="645" width="1.0" height="15.0" fill="rgb(251,225,36)" rx="2" ry="2" />
<text  x="270.39" y="655.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (2,381 samples, 7.58%)</title><rect x="839.8" y="821" width="89.4" height="15.0" fill="rgb(216,25,22)" rx="2" ry="2" />
<text  x="842.80" y="831.5" >_&lt;alloc..v..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (86 samples, 0.27%)</title><rect x="542.2" y="165" width="3.2" height="15.0" fill="rgb(216,23,24)" rx="2" ry="2" />
<text  x="545.20" y="175.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="270.1" y="437" width="0.3" height="15.0" fill="rgb(213,103,12)" rx="2" ry="2" />
<text  x="273.09" y="447.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (5,112 samples, 16.26%)</title><rect x="354.2" y="325" width="191.9" height="15.0" fill="rgb(245,215,51)" rx="2" ry="2" />
<text  x="357.19" y="335.5" >_&lt;&amp;mut serde_json..de..De..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="144.5" y="1061" width="0.3" height="15.0" fill="rgb(232,31,32)" rx="2" ry="2" />
<text  x="147.51" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="1104.3" y="533" width="0.1" height="15.0" fill="rgb(230,59,4)" rx="2" ry="2" />
<text  x="1107.33" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="16.9" y="1013" width="0.2" height="15.0" fill="rgb(252,70,36)" rx="2" ry="2" />
<text  x="19.95" y="1023.5" ></text>
</g>
<g >
<title>core::fmt::Write::write_fmt (56 samples, 0.18%)</title><rect x="220.3" y="661" width="2.1" height="15.0" fill="rgb(227,30,18)" rx="2" ry="2" />
<text  x="223.28" y="671.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="1061.9" y="773" width="0.2" height="15.0" fill="rgb(246,139,24)" rx="2" ry="2" />
<text  x="1064.94" y="783.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="614.7" y="453" width="0.2" height="15.0" fill="rgb(248,169,44)" rx="2" ry="2" />
<text  x="617.66" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="546.7" y="133" width="0.2" height="15.0" fill="rgb(207,192,53)" rx="2" ry="2" />
<text  x="549.75" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (278 samples, 0.88%)</title><rect x="918.0" y="517" width="10.4" height="15.0" fill="rgb(248,18,15)" rx="2" ry="2" />
<text  x="921.00" y="527.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (20 samples, 0.06%)</title><rect x="1078.4" y="773" width="0.8" height="15.0" fill="rgb(234,196,43)" rx="2" ry="2" />
<text  x="1081.42" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (20 samples, 0.06%)</title><rect x="1084.4" y="773" width="0.8" height="15.0" fill="rgb(208,227,13)" rx="2" ry="2" />
<text  x="1087.43" y="783.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (5 samples, 0.02%)</title><rect x="550.6" y="229" width="0.2" height="15.0" fill="rgb(210,111,27)" rx="2" ry="2" />
<text  x="553.61" y="239.5" ></text>
</g>
<g >
<title>clap::app::App::new (12 samples, 0.04%)</title><rect x="127.7" y="1125" width="0.4" height="15.0" fill="rgb(251,211,37)" rx="2" ry="2" />
<text  x="130.66" y="1135.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (28 samples, 0.09%)</title><rect x="1188.2" y="821" width="1.1" height="15.0" fill="rgb(254,84,5)" rx="2" ry="2" />
<text  x="1191.24" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (39 samples, 0.12%)</title><rect x="929.3" y="853" width="1.5" height="15.0" fill="rgb(249,45,22)" rx="2" ry="2" />
<text  x="932.34" y="863.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="548.7" y="133" width="0.3" height="15.0" fill="rgb(251,168,14)" rx="2" ry="2" />
<text  x="551.74" y="143.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="119.8" y="1077" width="0.2" height="15.0" fill="rgb(244,106,29)" rx="2" ry="2" />
<text  x="122.85" y="1087.5" ></text>
</g>
<g >
<title>_&lt;&lt;futures_util..stream..futures_unordered..FuturesUnordered&lt;Fut&gt; as futures_core..stream..Stream&gt;..poll_next..Bomb&lt;Fut&gt; as core..ops..drop..Drop&gt;::drop (4 samples, 0.01%)</title><rect x="217.8" y="629" width="0.2" height="15.0" fill="rgb(233,54,35)" rx="2" ry="2" />
<text  x="220.84" y="639.5" ></text>
</g>
<g >
<title>deno::flags::config_arg (10 samples, 0.03%)</title><rect x="87.6" y="1141" width="0.4" height="15.0" fill="rgb(225,204,49)" rx="2" ry="2" />
<text  x="90.64" y="1151.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (95 samples, 0.30%)</title><rect x="1131.5" y="581" width="3.6" height="15.0" fill="rgb(243,29,25)" rx="2" ry="2" />
<text  x="1134.51" y="591.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::debug_asserts (92 samples, 0.29%)</title><rect x="82.1" y="1109" width="3.5" height="15.0" fill="rgb(230,170,27)" rx="2" ry="2" />
<text  x="85.12" y="1119.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_file_host (8 samples, 0.03%)</title><rect x="590.5" y="693" width="0.3" height="15.0" fill="rgb(206,37,14)" rx="2" ry="2" />
<text  x="593.48" y="703.5" ></text>
</g>
<g >
<title>deno::flags::ca_file_arg (9 samples, 0.03%)</title><rect x="119.3" y="1141" width="0.3" height="15.0" fill="rgb(214,15,51)" rx="2" ry="2" />
<text  x="122.29" y="1151.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.03%)</title><rect x="610.8" y="533" width="0.3" height="15.0" fill="rgb(208,5,28)" rx="2" ry="2" />
<text  x="613.79" y="543.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="15.7" y="997" width="0.2" height="15.0" fill="rgb(240,0,20)" rx="2" ry="2" />
<text  x="18.67" y="1007.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="831.1" y="757" width="0.1" height="15.0" fill="rgb(236,209,43)" rx="2" ry="2" />
<text  x="834.06" y="767.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.03%)</title><rect x="1082.1" y="837" width="0.3" height="15.0" fill="rgb(248,215,19)" rx="2" ry="2" />
<text  x="1085.10" y="847.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (5 samples, 0.02%)</title><rect x="209.1" y="805" width="0.2" height="15.0" fill="rgb(215,100,39)" rx="2" ry="2" />
<text  x="212.09" y="815.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (25 samples, 0.08%)</title><rect x="293.4" y="389" width="1.0" height="15.0" fill="rgb(234,42,14)" rx="2" ry="2" />
<text  x="296.45" y="399.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="132.6" y="1045" width="0.2" height="15.0" fill="rgb(214,107,51)" rx="2" ry="2" />
<text  x="135.61" y="1055.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (4 samples, 0.01%)</title><rect x="229.6" y="597" width="0.2" height="15.0" fill="rgb(210,225,2)" rx="2" ry="2" />
<text  x="232.62" y="607.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::Lexer&lt;I&gt;::read_token (6 samples, 0.02%)</title><rect x="234.1" y="197" width="0.2" height="15.0" fill="rgb(209,204,35)" rx="2" ry="2" />
<text  x="237.05" y="207.5" ></text>
</g>
<g >
<title>deno::checksum::gen (28 samples, 0.09%)</title><rect x="259.0" y="677" width="1.0" height="15.0" fill="rgb(225,114,54)" rx="2" ry="2" />
<text  x="261.98" y="687.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="263.4" y="565" width="0.2" height="15.0" fill="rgb(214,152,24)" rx="2" ry="2" />
<text  x="266.45" y="575.5" ></text>
</g>
<g >
<title>_&lt;deno_core..module_specifier..ModuleSpecifier as core..fmt..Display&gt;::fmt (12 samples, 0.04%)</title><rect x="600.5" y="709" width="0.5" height="15.0" fill="rgb(247,179,37)" rx="2" ry="2" />
<text  x="603.54" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (6 samples, 0.02%)</title><rect x="622.6" y="757" width="0.2" height="15.0" fill="rgb(234,109,29)" rx="2" ry="2" />
<text  x="625.58" y="767.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="575.7" y="565" width="0.4" height="15.0" fill="rgb(222,165,12)" rx="2" ry="2" />
<text  x="578.73" y="575.5" ></text>
</g>
<g >
<title>deno::flags::config_arg_parse (6 samples, 0.02%)</title><rect x="193.9" y="1141" width="0.2" height="15.0" fill="rgb(245,176,26)" rx="2" ry="2" />
<text  x="196.88" y="1151.5" ></text>
</g>
<g >
<title>http::header::map::hash_elem_using (12 samples, 0.04%)</title><rect x="837.5" y="789" width="0.5" height="15.0" fill="rgb(218,127,6)" rx="2" ry="2" />
<text  x="840.51" y="799.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (35 samples, 0.11%)</title><rect x="1004.7" y="869" width="1.3" height="15.0" fill="rgb(211,159,46)" rx="2" ry="2" />
<text  x="1007.73" y="879.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for &amp;T&gt;::serialize (558 samples, 1.78%)</title><rect x="1145.3" y="597" width="21.0" height="15.0" fill="rgb(243,107,14)" rx="2" ry="2" />
<text  x="1148.32" y="607.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="666.8" y="725" width="0.2" height="15.0" fill="rgb(230,103,50)" rx="2" ry="2" />
<text  x="669.84" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="1137.5" y="421" width="0.2" height="15.0" fill="rgb(236,123,3)" rx="2" ry="2" />
<text  x="1140.48" y="431.5" ></text>
</g>
<g >
<title>serde_json::value::de::_&lt;impl serde..de..Deserialize for serde_json..value..Value&gt;::deserialize (13 samples, 0.04%)</title><rect x="549.1" y="261" width="0.5" height="15.0" fill="rgb(242,209,19)" rx="2" ry="2" />
<text  x="552.11" y="271.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (10 samples, 0.03%)</title><rect x="192.6" y="1045" width="0.4" height="15.0" fill="rgb(222,77,38)" rx="2" ry="2" />
<text  x="195.61" y="1055.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.03%)</title><rect x="1047.8" y="709" width="0.3" height="15.0" fill="rgb(207,19,30)" rx="2" ry="2" />
<text  x="1050.75" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="617.3" y="405" width="0.1" height="15.0" fill="rgb(252,224,47)" rx="2" ry="2" />
<text  x="620.25" y="415.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (310 samples, 0.99%)</title><rect x="247.3" y="293" width="11.7" height="15.0" fill="rgb(205,101,14)" rx="2" ry="2" />
<text  x="250.34" y="303.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="1098.2" y="757" width="0.2" height="15.0" fill="rgb(225,174,8)" rx="2" ry="2" />
<text  x="1101.17" y="767.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="116.2" y="1061" width="0.2" height="15.0" fill="rgb(247,205,1)" rx="2" ry="2" />
<text  x="119.21" y="1071.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (6 samples, 0.02%)</title><rect x="23.0" y="965" width="0.2" height="15.0" fill="rgb(215,227,12)" rx="2" ry="2" />
<text  x="25.99" y="975.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="156.3" y="1061" width="0.1" height="15.0" fill="rgb(217,110,40)" rx="2" ry="2" />
<text  x="159.27" y="1071.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="265.6" y="517" width="0.3" height="15.0" fill="rgb(209,123,26)" rx="2" ry="2" />
<text  x="268.59" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="659.7" y="853" width="0.1" height="15.0" fill="rgb(236,125,52)" rx="2" ry="2" />
<text  x="662.67" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (190 samples, 0.60%)</title><rect x="65.9" y="1077" width="7.1" height="15.0" fill="rgb(227,17,13)" rx="2" ry="2" />
<text  x="68.86" y="1087.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (1,260 samples, 4.01%)</title><rect x="273.7" y="469" width="47.3" height="15.0" fill="rgb(222,171,9)" rx="2" ry="2" />
<text  x="276.66" y="479.5" >_&lt;se..</text>
</g>
<g >
<title>core::ptr::drop_in_place (17 samples, 0.05%)</title><rect x="224.9" y="533" width="0.7" height="15.0" fill="rgb(231,112,31)" rx="2" ry="2" />
<text  x="227.93" y="543.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (128 samples, 0.41%)</title><rect x="566.3" y="341" width="4.8" height="15.0" fill="rgb(246,178,16)" rx="2" ry="2" />
<text  x="569.34" y="351.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.01%)</title><rect x="155.6" y="1013" width="0.2" height="15.0" fill="rgb(211,149,2)" rx="2" ry="2" />
<text  x="158.63" y="1023.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="270.2" y="389" width="0.2" height="15.0" fill="rgb(208,5,12)" rx="2" ry="2" />
<text  x="273.21" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="600.9" y="565" width="0.1" height="15.0" fill="rgb(235,159,44)" rx="2" ry="2" />
<text  x="603.88" y="575.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="1086.3" y="821" width="0.1" height="15.0" fill="rgb(227,67,37)" rx="2" ry="2" />
<text  x="1089.31" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1098.3" y="709" width="0.1" height="15.0" fill="rgb(207,10,24)" rx="2" ry="2" />
<text  x="1101.28" y="719.5" ></text>
</g>
<g >
<title>deno::http_util::create_http_client (4,473 samples, 14.23%)</title><rect x="663.3" y="901" width="167.9" height="15.0" fill="rgb(209,225,49)" rx="2" ry="2" />
<text  x="666.28" y="911.5" >deno::http_util::crea..</text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (35 samples, 0.11%)</title><rect x="1091.0" y="725" width="1.3" height="15.0" fill="rgb(240,209,0)" rx="2" ry="2" />
<text  x="1094.00" y="735.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (63 samples, 0.20%)</title><rect x="605.8" y="613" width="2.4" height="15.0" fill="rgb(228,180,3)" rx="2" ry="2" />
<text  x="608.80" y="623.5" ></text>
</g>
<g >
<title>url::parser::Parser::parse_file (273 samples, 0.87%)</title><rect x="575.6" y="613" width="10.3" height="15.0" fill="rgb(241,210,43)" rx="2" ry="2" />
<text  x="578.62" y="623.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (62 samples, 0.20%)</title><rect x="188.7" y="1125" width="2.3" height="15.0" fill="rgb(215,157,51)" rx="2" ry="2" />
<text  x="191.67" y="1135.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (12 samples, 0.04%)</title><rect x="998.5" y="805" width="0.4" height="15.0" fill="rgb(253,87,9)" rx="2" ry="2" />
<text  x="1001.50" y="815.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.03%)</title><rect x="1070.7" y="837" width="0.3" height="15.0" fill="rgb(238,95,48)" rx="2" ry="2" />
<text  x="1073.65" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (362 samples, 1.15%)</title><rect x="245.4" y="373" width="13.6" height="15.0" fill="rgb(213,1,44)" rx="2" ry="2" />
<text  x="248.39" y="383.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="14.0" y="981" width="0.1" height="15.0" fill="rgb(214,76,24)" rx="2" ry="2" />
<text  x="17.02" y="991.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (115 samples, 0.37%)</title><rect x="625.7" y="693" width="4.3" height="15.0" fill="rgb(216,169,10)" rx="2" ry="2" />
<text  x="628.70" y="703.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::_&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.01%)</title><rect x="241.5" y="613" width="0.1" height="15.0" fill="rgb(245,27,5)" rx="2" ry="2" />
<text  x="244.49" y="623.5" ></text>
</g>
<g >
<title>_&lt;str as alloc..string..ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="832.1" y="917" width="0.4" height="15.0" fill="rgb(243,64,47)" rx="2" ry="2" />
<text  x="835.11" y="927.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="98.4" y="1093" width="0.1" height="15.0" fill="rgb(245,117,41)" rx="2" ry="2" />
<text  x="101.38" y="1103.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="134.7" y="1093" width="0.3" height="15.0" fill="rgb(207,42,5)" rx="2" ry="2" />
<text  x="137.72" y="1103.5" ></text>
</g>
<g >
<title>deno::flags::run_test_args (545 samples, 1.73%)</title><rect x="167.0" y="1141" width="20.5" height="15.0" fill="rgb(240,2,26)" rx="2" ry="2" />
<text  x="170.04" y="1151.5" ></text>
</g>
<g >
<title>url::Url::parse (285 samples, 0.91%)</title><rect x="575.2" y="677" width="10.7" height="15.0" fill="rgb(231,165,33)" rx="2" ry="2" />
<text  x="578.17" y="687.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (12 samples, 0.04%)</title><rect x="165.5" y="1061" width="0.5" height="15.0" fill="rgb(244,1,22)" rx="2" ry="2" />
<text  x="168.50" y="1071.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::split_off (5 samples, 0.02%)</title><rect x="599.8" y="661" width="0.2" height="15.0" fill="rgb(207,20,35)" rx="2" ry="2" />
<text  x="602.83" y="671.5" ></text>
</g>
<g >
<title>swc_common::syntax_pos::analyze_source_file::analyze_source_file_generic (6 samples, 0.02%)</title><rect x="230.6" y="565" width="0.3" height="15.0" fill="rgb(244,110,49)" rx="2" ry="2" />
<text  x="233.64" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (7 samples, 0.02%)</title><rect x="664.2" y="821" width="0.2" height="15.0" fill="rgb(216,49,1)" rx="2" ry="2" />
<text  x="667.18" y="831.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (4 samples, 0.01%)</title><rect x="100.1" y="1061" width="0.1" height="15.0" fill="rgb(232,49,43)" rx="2" ry="2" />
<text  x="103.06" y="1071.5" ></text>
</g>
<g >
<title>_&lt;std..ffi..os_str..OsString as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="613.5" y="533" width="0.3" height="15.0" fill="rgb(235,129,10)" rx="2" ry="2" />
<text  x="616.50" y="543.5" ></text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::and_then (357 samples, 1.14%)</title><rect x="1101.2" y="709" width="13.4" height="15.0" fill="rgb(208,60,20)" rx="2" ry="2" />
<text  x="1104.21" y="719.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (3 samples, 0.01%)</title><rect x="1095.8" y="773" width="0.1" height="15.0" fill="rgb(254,192,35)" rx="2" ry="2" />
<text  x="1098.77" y="783.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="1093.1" y="677" width="0.4" height="15.0" fill="rgb(209,122,3)" rx="2" ry="2" />
<text  x="1096.14" y="687.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..flag..FlagBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (3 samples, 0.01%)</title><rect x="120.7" y="1109" width="0.1" height="15.0" fill="rgb(237,126,31)" rx="2" ry="2" />
<text  x="123.71" y="1119.5" ></text>
</g>
<g >
<title>_&lt;rusty_v8..scope..CallbackScope&lt;C&gt; as core..ops..drop..Drop&gt;::drop (6 samples, 0.02%)</title><rect x="1171.6" y="773" width="0.2" height="15.0" fill="rgb(249,118,1)" rx="2" ry="2" />
<text  x="1174.57" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.05%)</title><rect x="60.2" y="1045" width="0.6" height="15.0" fill="rgb(252,31,49)" rx="2" ry="2" />
<text  x="63.23" y="1055.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (9 samples, 0.03%)</title><rect x="833.3" y="805" width="0.3" height="15.0" fill="rgb(220,38,42)" rx="2" ry="2" />
<text  x="836.31" y="815.5" ></text>
</g>
<g >
<title>_&lt;core..marker..PhantomData&lt;T&gt; as serde..de..DeserializeSeed&gt;::deserialize (60 samples, 0.19%)</title><rect x="284.9" y="341" width="2.3" height="15.0" fill="rgb(248,166,33)" rx="2" ry="2" />
<text  x="287.92" y="351.5" ></text>
</g>
<g >
<title>core::mem::swap (8 samples, 0.03%)</title><rect x="103.7" y="1077" width="0.3" height="15.0" fill="rgb(231,213,42)" rx="2" ry="2" />
<text  x="106.74" y="1087.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="25.0" y="1109" width="0.1" height="15.0" fill="rgb(246,11,22)" rx="2" ry="2" />
<text  x="28.02" y="1119.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.03%)</title><rect x="1032.7" y="837" width="0.3" height="15.0" fill="rgb(221,72,45)" rx="2" ry="2" />
<text  x="1035.70" y="847.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (69 samples, 0.22%)</title><rect x="639.2" y="773" width="2.6" height="15.0" fill="rgb(216,183,51)" rx="2" ry="2" />
<text  x="642.21" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::join (11 samples, 0.03%)</title><rect x="267.4" y="629" width="0.4" height="15.0" fill="rgb(251,194,23)" rx="2" ry="2" />
<text  x="270.43" y="639.5" ></text>
</g>
<g >
<title>vec_map::VecMap&lt;V&gt;::insert (14 samples, 0.04%)</title><rect x="140.7" y="1109" width="0.5" height="15.0" fill="rgb(213,68,46)" rx="2" ry="2" />
<text  x="143.72" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.04%)</title><rect x="1067.4" y="757" width="0.4" height="15.0" fill="rgb(232,187,33)" rx="2" ry="2" />
<text  x="1070.39" y="767.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (27 samples, 0.09%)</title><rect x="549.8" y="277" width="1.0" height="15.0" fill="rgb(231,214,31)" rx="2" ry="2" />
<text  x="552.82" y="287.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (14 samples, 0.04%)</title><rect x="186.2" y="1013" width="0.6" height="15.0" fill="rgb(229,115,13)" rx="2" ry="2" />
<text  x="189.22" y="1023.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="1034.0" y="821" width="0.1" height="15.0" fill="rgb(246,136,31)" rx="2" ry="2" />
<text  x="1036.97" y="831.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="218.2" y="629" width="0.2" height="15.0" fill="rgb(242,219,30)" rx="2" ry="2" />
<text  x="221.21" y="639.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="216.8" y="501" width="0.2" height="15.0" fill="rgb(241,56,43)" rx="2" ry="2" />
<text  x="219.82" y="511.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (386 samples, 1.23%)</title><rect x="244.5" y="613" width="14.5" height="15.0" fill="rgb(228,142,53)" rx="2" ry="2" />
<text  x="247.49" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="601.9" y="517" width="0.1" height="15.0" fill="rgb(214,62,20)" rx="2" ry="2" />
<text  x="604.90" y="527.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (39 samples, 0.12%)</title><rect x="264.5" y="581" width="1.4" height="15.0" fill="rgb(219,195,39)" rx="2" ry="2" />
<text  x="267.46" y="591.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (53 samples, 0.17%)</title><rect x="74.9" y="1141" width="2.0" height="15.0" fill="rgb(246,105,36)" rx="2" ry="2" />
<text  x="77.95" y="1151.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (27 samples, 0.09%)</title><rect x="1081.0" y="837" width="1.0" height="15.0" fill="rgb(209,62,35)" rx="2" ry="2" />
<text  x="1083.98" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="668.2" y="565" width="0.1" height="15.0" fill="rgb(217,91,16)" rx="2" ry="2" />
<text  x="671.20" y="575.5" ></text>
</g>
<g >
<title>deno_core::module_specifier::ModuleSpecifier::resolve_url (280 samples, 0.89%)</title><rect x="622.8" y="821" width="10.5" height="15.0" fill="rgb(243,185,18)" rx="2" ry="2" />
<text  x="625.81" y="831.5" ></text>
</g>
<g >
<title>deno::tsc::pre_process_file::_{{closure}} (10 samples, 0.03%)</title><rect x="239.3" y="645" width="0.3" height="15.0" fill="rgb(224,73,2)" rx="2" ry="2" />
<text  x="242.27" y="655.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::state (7 samples, 0.02%)</title><rect x="635.0" y="885" width="0.3" height="15.0" fill="rgb(214,160,40)" rx="2" ry="2" />
<text  x="638.01" y="895.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..raw..RawTable&lt;T&gt; as core..ops..drop..Drop&gt;::drop (7 samples, 0.02%)</title><rect x="641.4" y="629" width="0.3" height="15.0" fill="rgb(223,29,27)" rx="2" ry="2" />
<text  x="644.39" y="639.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (14 samples, 0.04%)</title><rect x="928.5" y="597" width="0.5" height="15.0" fill="rgb(225,42,31)" rx="2" ry="2" />
<text  x="931.52" y="607.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (134 samples, 0.43%)</title><rect x="1036.9" y="885" width="5.0" height="15.0" fill="rgb(237,85,36)" rx="2" ry="2" />
<text  x="1039.90" y="895.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="1005.6" y="821" width="0.1" height="15.0" fill="rgb(211,72,25)" rx="2" ry="2" />
<text  x="1008.63" y="831.5" ></text>
</g>
<g >
<title>deno_core::es_isolate::EsIsolate::state (7 samples, 0.02%)</title><rect x="633.9" y="837" width="0.3" height="15.0" fill="rgb(218,43,31)" rx="2" ry="2" />
<text  x="636.92" y="847.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.03%)</title><rect x="321.3" y="341" width="0.4" height="15.0" fill="rgb(251,59,3)" rx="2" ry="2" />
<text  x="324.34" y="351.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (21 samples, 0.07%)</title><rect x="1081.2" y="805" width="0.8" height="15.0" fill="rgb(251,125,34)" rx="2" ry="2" />
<text  x="1084.20" y="815.5" ></text>
</g>
<g >
<title>phf_shared::hash (3 samples, 0.01%)</title><rect x="237.2" y="181" width="0.1" height="15.0" fill="rgb(215,157,36)" rx="2" ry="2" />
<text  x="240.21" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="286.8" y="181" width="0.3" height="15.0" fill="rgb(206,2,41)" rx="2" ry="2" />
<text  x="289.80" y="191.5" ></text>
</g>
<g >
<title>deno::ops::worker_host::init (94 samples, 0.30%)</title><rect x="1082.4" y="901" width="3.6" height="15.0" fill="rgb(211,128,49)" rx="2" ry="2" />
<text  x="1085.44" y="911.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="259.5" y="629" width="0.3" height="15.0" fill="rgb(223,122,23)" rx="2" ry="2" />
<text  x="262.51" y="639.5" ></text>
</g>
<g >
<title>reqwest::async_impl::client::ClientBuilder::default_headers (22 samples, 0.07%)</title><rect x="830.4" y="885" width="0.8" height="15.0" fill="rgb(237,156,50)" rx="2" ry="2" />
<text  x="833.38" y="895.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="1034.6" y="789" width="0.3" height="15.0" fill="rgb(219,192,53)" rx="2" ry="2" />
<text  x="1037.65" y="799.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (13 samples, 0.04%)</title><rect x="1062.5" y="853" width="0.5" height="15.0" fill="rgb(215,184,19)" rx="2" ry="2" />
<text  x="1065.51" y="863.5" ></text>
</g>
<g >
<title>alloc::string::String::with_capacity (5 samples, 0.02%)</title><rect x="590.1" y="741" width="0.2" height="15.0" fill="rgb(235,39,3)" rx="2" ry="2" />
<text  x="593.07" y="751.5" ></text>
</g>
<g >
<title>_&lt;serde..de..impls..StringVisitor as serde..de..Visitor&gt;::visit_str (775 samples, 2.47%)</title><rect x="407.2" y="165" width="29.1" height="15.0" fill="rgb(244,53,5)" rx="2" ry="2" />
<text  x="410.24" y="175.5" >_&lt;..</text>
</g>
<g >
<title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="660.3" y="869" width="0.2" height="15.0" fill="rgb(236,64,33)" rx="2" ry="2" />
<text  x="663.31" y="879.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="217.3" y="501" width="0.2" height="15.0" fill="rgb(208,50,24)" rx="2" ry="2" />
<text  x="220.31" y="511.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="613.6" y="501" width="0.2" height="15.0" fill="rgb(242,126,40)" rx="2" ry="2" />
<text  x="616.57" y="511.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Map&lt;I,F&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (128 samples, 0.41%)</title><rect x="46.8" y="1045" width="4.8" height="15.0" fill="rgb(251,24,10)" rx="2" ry="2" />
<text  x="49.83" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (85 samples, 0.27%)</title><rect x="642.1" y="821" width="3.2" height="15.0" fill="rgb(249,192,0)" rx="2" ry="2" />
<text  x="645.14" y="831.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (28 samples, 0.09%)</title><rect x="272.6" y="341" width="1.1" height="15.0" fill="rgb(228,188,36)" rx="2" ry="2" />
<text  x="275.61" y="351.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (23 samples, 0.07%)</title><rect x="637.7" y="869" width="0.9" height="15.0" fill="rgb(240,35,43)" rx="2" ry="2" />
<text  x="640.75" y="879.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::requires (6 samples, 0.02%)</title><rect x="156.2" y="1109" width="0.2" height="15.0" fill="rgb(232,96,51)" rx="2" ry="2" />
<text  x="159.15" y="1119.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::value_name (8 samples, 0.03%)</title><rect x="128.1" y="1125" width="0.3" height="15.0" fill="rgb(215,217,32)" rx="2" ry="2" />
<text  x="131.15" y="1135.5" ></text>
</g>
<g >
<title>_&lt;deno_core..zero_copy_buf..ZeroCopyBuf as core..ops..deref..Deref&gt;::deref (3 samples, 0.01%)</title><rect x="1101.1" y="709" width="0.1" height="15.0" fill="rgb(215,70,40)" rx="2" ry="2" />
<text  x="1104.10" y="719.5" ></text>
</g>
<g >
<title>clap::app::App::arg (270 samples, 0.86%)</title><rect x="143.0" y="1125" width="10.1" height="15.0" fill="rgb(206,48,9)" rx="2" ry="2" />
<text  x="146.01" y="1135.5" ></text>
</g>
<g >
<title>serde::de::impls::_&lt;impl serde..de..Deserialize for alloc..string..String&gt;::deserialize (564 samples, 1.79%)</title><rect x="328.2" y="341" width="21.1" height="15.0" fill="rgb(218,207,16)" rx="2" ry="2" />
<text  x="331.17" y="351.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (5,241 samples, 16.67%)</title><rect x="349.3" y="373" width="196.8" height="15.0" fill="rgb(241,8,51)" rx="2" ry="2" />
<text  x="352.35" y="383.5" >_&lt;serde_json..de..MapAcce..</text>
</g>
<g >
<title>deno::disk_cache::DiskCache::get_cache_filename (49 samples, 0.16%)</title><rect x="615.7" y="549" width="1.9" height="15.0" fill="rgb(208,28,45)" rx="2" ry="2" />
<text  x="618.75" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (9 samples, 0.03%)</title><rect x="144.4" y="1077" width="0.4" height="15.0" fill="rgb(248,35,7)" rx="2" ry="2" />
<text  x="147.44" y="1087.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="1079.7" y="805" width="0.1" height="15.0" fill="rgb(205,106,30)" rx="2" ry="2" />
<text  x="1082.66" y="815.5" ></text>
</g>
<g >
<title>serde::ser::SerializeMap::serialize_entry (173 samples, 0.55%)</title><rect x="1117.6" y="645" width="6.5" height="15.0" fill="rgb(245,111,46)" rx="2" ry="2" />
<text  x="1120.58" y="655.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="154.3" y="1061" width="0.2" height="15.0" fill="rgb(212,15,37)" rx="2" ry="2" />
<text  x="157.31" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::rustc_entry::_&lt;impl hashbrown..map..HashMap&lt;K,V,S&gt;&gt;::rustc_entry (7 samples, 0.02%)</title><rect x="15.6" y="1013" width="0.3" height="15.0" fill="rgb(249,106,31)" rx="2" ry="2" />
<text  x="18.63" y="1023.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="260.9" y="549" width="0.1" height="15.0" fill="rgb(231,220,41)" rx="2" ry="2" />
<text  x="263.90" y="559.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.03%)</title><rect x="64.7" y="1125" width="0.4" height="15.0" fill="rgb(224,38,3)" rx="2" ry="2" />
<text  x="67.70" y="1135.5" ></text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_key_seed (15 samples, 0.05%)</title><rect x="269.2" y="565" width="0.6" height="15.0" fill="rgb(207,208,21)" rx="2" ry="2" />
<text  x="272.23" y="575.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::create_help_and_version (28 samples, 0.09%)</title><rect x="13.7" y="1125" width="1.0" height="15.0" fill="rgb(215,190,11)" rx="2" ry="2" />
<text  x="16.68" y="1135.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (4 samples, 0.01%)</title><rect x="573.0" y="389" width="0.1" height="15.0" fill="rgb(206,107,18)" rx="2" ry="2" />
<text  x="575.99" y="399.5" ></text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (18 samples, 0.06%)</title><rect x="550.2" y="261" width="0.6" height="15.0" fill="rgb(244,147,38)" rx="2" ry="2" />
<text  x="553.16" y="271.5" ></text>
</g>
<g >
<title>deno::ops::runtime::op_start (353 samples, 1.12%)</title><rect x="1101.4" y="645" width="13.2" height="15.0" fill="rgb(206,201,16)" rx="2" ry="2" />
<text  x="1104.36" y="655.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.03%)</title><rect x="613.8" y="565" width="0.4" height="15.0" fill="rgb(218,120,19)" rx="2" ry="2" />
<text  x="616.83" y="575.5" ></text>
</g>
<g >
<title>rusty_v8::primitives::_&lt;impl rusty_v8..data..Boolean&gt;::new (7 samples, 0.02%)</title><rect x="1095.2" y="853" width="0.2" height="15.0" fill="rgb(242,67,15)" rx="2" ry="2" />
<text  x="1098.17" y="863.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (10 samples, 0.03%)</title><rect x="1110.3" y="533" width="0.4" height="15.0" fill="rgb(227,181,35)" rx="2" ry="2" />
<text  x="1113.33" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (12 samples, 0.04%)</title><rect x="1175.4" y="741" width="0.4" height="15.0" fill="rgb(253,132,29)" rx="2" ry="2" />
<text  x="1178.36" y="751.5" ></text>
</g>
<g >
<title>_&lt;std..sys_common..os_str_bytes..Buf as core..clone..Clone&gt;::clone (9 samples, 0.03%)</title><rect x="216.3" y="517" width="0.4" height="15.0" fill="rgb(215,7,1)" rx="2" ry="2" />
<text  x="219.33" y="527.5" ></text>
</g>
<g >
<title>rusty_v8::function::_&lt;impl rusty_v8..support..MapFnFrom&lt;F&gt; for extern &quot;C&quot; fn(*const rusty_v8..function..FunctionCallbackInfo)&gt;::mapping::_{{closure}} (27 samples, 0.09%)</title><rect x="635.6" y="821" width="1.1" height="15.0" fill="rgb(243,137,28)" rx="2" ry="2" />
<text  x="638.65" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="262.4" y="453" width="0.1" height="15.0" fill="rgb(208,21,41)" rx="2" ry="2" />
<text  x="265.44" y="463.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="590.1" y="709" width="0.2" height="15.0" fill="rgb(224,25,40)" rx="2" ry="2" />
<text  x="593.15" y="719.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="202.6" y="1109" width="0.2" height="15.0" fill="rgb(253,111,4)" rx="2" ry="2" />
<text  x="205.63" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (52 samples, 0.17%)</title><rect x="1030.0" y="741" width="2.0" height="15.0" fill="rgb(215,34,30)" rx="2" ry="2" />
<text  x="1033.03" y="751.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (6 samples, 0.02%)</title><rect x="633.7" y="757" width="0.2" height="15.0" fill="rgb(235,184,24)" rx="2" ry="2" />
<text  x="636.69" y="767.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::insert (7 samples, 0.02%)</title><rect x="229.1" y="597" width="0.2" height="15.0" fill="rgb(239,39,11)" rx="2" ry="2" />
<text  x="232.06" y="607.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (60 samples, 0.19%)</title><rect x="583.2" y="549" width="2.3" height="15.0" fill="rgb(248,102,5)" rx="2" ry="2" />
<text  x="586.24" y="559.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (13 samples, 0.04%)</title><rect x="12.2" y="1125" width="0.5" height="15.0" fill="rgb(236,171,13)" rx="2" ry="2" />
<text  x="15.18" y="1135.5" ></text>
</g>
<g >
<title>_&lt;T as rusty_v8..scope..getter..GetScopeData&gt;::get_scope_data_mut (4 samples, 0.01%)</title><rect x="635.9" y="757" width="0.2" height="15.0" fill="rgb(218,71,51)" rx="2" ry="2" />
<text  x="638.91" y="767.5" ></text>
</g>
<g >
<title>_&lt;T as alloc..vec..SpecFromElem&gt;::from_elem (6 samples, 0.02%)</title><rect x="835.3" y="805" width="0.2" height="15.0" fill="rgb(210,147,53)" rx="2" ry="2" />
<text  x="838.30" y="815.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (206 samples, 0.66%)</title><rect x="43.9" y="1093" width="7.7" height="15.0" fill="rgb(228,172,54)" rx="2" ry="2" />
<text  x="46.90" y="1103.5" ></text>
</g>
<g >
<title>_&lt;deno..ops..io..STDIN_HANDLE as core..ops..deref..Deref&gt;::deref (3 samples, 0.01%)</title><rect x="832.5" y="901" width="0.1" height="15.0" fill="rgb(234,40,3)" rx="2" ry="2" />
<text  x="835.52" y="911.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="837.1" y="837" width="0.2" height="15.0" fill="rgb(208,135,48)" rx="2" ry="2" />
<text  x="840.14" y="847.5" ></text>
</g>
<g >
<title>deno::flags::importmap_arg (9 samples, 0.03%)</title><rect x="154.2" y="1125" width="0.3" height="15.0" fill="rgb(226,152,0)" rx="2" ry="2" />
<text  x="157.16" y="1135.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="222.6" y="565" width="0.2" height="15.0" fill="rgb(230,4,50)" rx="2" ry="2" />
<text  x="225.64" y="575.5" ></text>
</g>
<g >
<title>deno_core::ops::OpRegistry::register (49 samples, 0.16%)</title><rect x="1055.9" y="869" width="1.8" height="15.0" fill="rgb(249,139,49)" rx="2" ry="2" />
<text  x="1058.86" y="879.5" ></text>
</g>
<g >
<title>_&lt;core..str..Split&lt;P&gt; as core..iter..traits..iterator..Iterator&gt;::next (3 samples, 0.01%)</title><rect x="265.9" y="581" width="0.1" height="15.0" fill="rgb(236,54,40)" rx="2" ry="2" />
<text  x="268.93" y="591.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (14 samples, 0.04%)</title><rect x="107.9" y="1029" width="0.5" height="15.0" fill="rgb(214,63,37)" rx="2" ry="2" />
<text  x="110.87" y="1039.5" ></text>
</g>
<g >
<title>_&lt;http..header..name..StandardHeader as core..hash..Hash&gt;::hash (5 samples, 0.02%)</title><rect x="835.6" y="789" width="0.2" height="15.0" fill="rgb(216,223,20)" rx="2" ry="2" />
<text  x="838.64" y="799.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="634.9" y="837" width="0.1" height="15.0" fill="rgb(238,5,24)" rx="2" ry="2" />
<text  x="637.86" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (24 samples, 0.08%)</title><rect x="838.4" y="773" width="0.9" height="15.0" fill="rgb(243,78,3)" rx="2" ry="2" />
<text  x="841.41" y="783.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..ser..Serializer&lt;W,F&gt; as serde..ser..Serializer&gt;::serialize_str (303 samples, 0.96%)</title><rect x="1154.9" y="549" width="11.4" height="15.0" fill="rgb(253,72,16)" rx="2" ry="2" />
<text  x="1157.90" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="1023.9" y="821" width="0.2" height="15.0" fill="rgb(214,223,47)" rx="2" ry="2" />
<text  x="1026.91" y="831.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="1062.2" y="821" width="0.1" height="15.0" fill="rgb(235,201,18)" rx="2" ry="2" />
<text  x="1065.21" y="831.5" ></text>
</g>
<g >
<title>_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as serde..de..Deserializer&gt;::deserialize_any (8,146 samples, 25.92%)</title><rect x="268.6" y="629" width="305.8" height="15.0" fill="rgb(230,154,8)" rx="2" ry="2" />
<text  x="271.56" y="639.5" >_&lt;&amp;mut serde_json..de..Deserializer&lt;R&gt; as..</text>
</g>
<g >
<title>core::ptr::drop_in_place (70 samples, 0.22%)</title><rect x="642.7" y="693" width="2.6" height="15.0" fill="rgb(254,5,23)" rx="2" ry="2" />
<text  x="645.70" y="703.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (6 samples, 0.02%)</title><rect x="1032.0" y="757" width="0.2" height="15.0" fill="rgb(209,96,13)" rx="2" ry="2" />
<text  x="1034.98" y="767.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="235.4" y="197" width="0.2" height="15.0" fill="rgb(236,129,9)" rx="2" ry="2" />
<text  x="238.37" y="207.5" ></text>
</g>
<g >
<title>http::header::map::hash_elem_using (12 samples, 0.04%)</title><rect x="836.2" y="805" width="0.4" height="15.0" fill="rgb(215,212,38)" rx="2" ry="2" />
<text  x="839.16" y="815.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::get_index_of (3 samples, 0.01%)</title><rect x="243.8" y="613" width="0.1" height="15.0" fill="rgb(233,119,29)" rx="2" ry="2" />
<text  x="246.82" y="623.5" ></text>
</g>
<g >
<title>_&lt;T as core..slice..SliceContains&gt;::slice_contains (8 samples, 0.03%)</title><rect x="213.0" y="501" width="0.3" height="15.0" fill="rgb(214,94,0)" rx="2" ry="2" />
<text  x="215.96" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="928.9" y="517" width="0.1" height="15.0" fill="rgb(228,105,33)" rx="2" ry="2" />
<text  x="931.89" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (32 samples, 0.10%)</title><rect x="598.6" y="613" width="1.2" height="15.0" fill="rgb(251,129,25)" rx="2" ry="2" />
<text  x="601.59" y="623.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl alloc..borrow..ToOwned for [T]&gt;::to_owned (14 samples, 0.04%)</title><rect x="1063.3" y="805" width="0.5" height="15.0" fill="rgb(212,69,31)" rx="2" ry="2" />
<text  x="1066.29" y="815.5" ></text>
</g>
<g >
<title>deno::flags::upgrade_subcommand (92 samples, 0.29%)</title><rect x="188.4" y="1157" width="3.5" height="15.0" fill="rgb(231,140,33)" rx="2" ry="2" />
<text  x="191.44" y="1167.5" ></text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="835.8" y="789" width="0.2" height="15.0" fill="rgb(244,161,11)" rx="2" ry="2" />
<text  x="838.82" y="799.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (15 samples, 0.05%)</title><rect x="138.1" y="1077" width="0.6" height="15.0" fill="rgb(241,38,9)" rx="2" ry="2" />
<text  x="141.10" y="1087.5" ></text>
</g>
<g >
<title>rusty_v8::script::_&lt;impl rusty_v8..data..Script&gt;::run::_{{closure}} (2,020 samples, 6.43%)</title><rect x="1097.4" y="837" width="75.8" height="15.0" fill="rgb(244,41,32)" rx="2" ry="2" />
<text  x="1100.38" y="847.5" >rusty_v8..</text>
</g>
<g >
<title>rusty_v8::scope::TryCatch&lt;P&gt;::new (3 samples, 0.01%)</title><rect x="1096.2" y="837" width="0.1" height="15.0" fill="rgb(219,60,32)" rx="2" ry="2" />
<text  x="1099.18" y="847.5" ></text>
</g>
<g >
<title>core::ptr::swap_nonoverlapping_one (3 samples, 0.01%)</title><rect x="136.4" y="1061" width="0.2" height="15.0" fill="rgb(209,90,22)" rx="2" ry="2" />
<text  x="139.44" y="1071.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize::_{{closure}} (3 samples, 0.01%)</title><rect x="1049.8" y="725" width="0.1" height="15.0" fill="rgb(233,146,15)" rx="2" ry="2" />
<text  x="1052.82" y="735.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::execute (2,089 samples, 6.65%)</title><rect x="1094.9" y="885" width="78.4" height="15.0" fill="rgb(230,72,24)" rx="2" ry="2" />
<text  x="1097.87" y="895.5" >deno_core..</text>
</g>
<g >
<title>_&lt;serde_json..de..MapAccess&lt;R&gt; as serde..de..MapAccess&gt;::next_value_seed (20 samples, 0.06%)</title><rect x="548.2" y="277" width="0.8" height="15.0" fill="rgb(251,147,39)" rx="2" ry="2" />
<text  x="551.25" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="1036.3" y="741" width="0.2" height="15.0" fill="rgb(249,205,21)" rx="2" ry="2" />
<text  x="1039.30" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="1067.7" y="709" width="0.1" height="15.0" fill="rgb(242,32,52)" rx="2" ry="2" />
<text  x="1070.72" y="719.5" ></text>
</g>
<g >
<title>rusty_v8::scope::HandleScope&lt;()&gt;::cast_local (6 samples, 0.02%)</title><rect x="1095.2" y="837" width="0.2" height="15.0" fill="rgb(225,119,3)" rx="2" ry="2" />
<text  x="1098.21" y="847.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (9 samples, 0.03%)</title><rect x="1087.4" y="789" width="0.3" height="15.0" fill="rgb(249,44,1)" rx="2" ry="2" />
<text  x="1090.36" y="799.5" ></text>
</g>
<g >
<title>reqwest::async_impl::client::ClientBuilder::build::user_agent (17 samples, 0.05%)</title><rect x="837.3" y="869" width="0.7" height="15.0" fill="rgb(205,170,47)" rx="2" ry="2" />
<text  x="840.33" y="879.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (1,385 samples, 4.41%)</title><rect x="946.3" y="821" width="52.0" height="15.0" fill="rgb(217,198,44)" rx="2" ry="2" />
<text  x="949.35" y="831.5" >alloc..</text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..ops..drop..Drop&gt;::drop (14 samples, 0.04%)</title><rect x="640.9" y="549" width="0.5" height="15.0" fill="rgb(238,205,14)" rx="2" ry="2" />
<text  x="643.87" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="113.3" y="1077" width="0.2" height="15.0" fill="rgb(222,7,6)" rx="2" ry="2" />
<text  x="116.28" y="1087.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (18 samples, 0.06%)</title><rect x="833.0" y="853" width="0.6" height="15.0" fill="rgb(226,125,1)" rx="2" ry="2" />
<text  x="835.97" y="863.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (172 samples, 0.55%)</title><rect x="373.6" y="133" width="6.5" height="15.0" fill="rgb(253,102,6)" rx="2" ry="2" />
<text  x="376.64" y="143.5" ></text>
</g>
<g >
<title>serde::ser::impls::_&lt;impl serde..ser..Serialize for &amp;T&gt;::serialize (71 samples, 0.23%)</title><rect x="1111.9" y="613" width="2.7" height="15.0" fill="rgb(244,161,16)" rx="2" ry="2" />
<text  x="1114.95" y="623.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg (190 samples, 0.60%)</title><rect x="120.4" y="1125" width="7.1" height="15.0" fill="rgb(209,30,14)" rx="2" ry="2" />
<text  x="123.41" y="1135.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="15.4" y="1045" width="0.2" height="15.0" fill="rgb(225,123,45)" rx="2" ry="2" />
<text  x="18.41" y="1055.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (19 samples, 0.06%)</title><rect x="1188.6" y="773" width="0.7" height="15.0" fill="rgb(215,163,12)" rx="2" ry="2" />
<text  x="1191.57" y="783.5" ></text>
</g>
<g >
<title>string_cache::trivial_impls::_&lt;impl core..convert..From&lt;&amp;str&gt; for string_cache..atom..Atom&lt;Static&gt;&gt;::from (5 samples, 0.02%)</title><rect x="237.1" y="213" width="0.2" height="15.0" fill="rgb(229,202,41)" rx="2" ry="2" />
<text  x="240.13" y="223.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (36 samples, 0.11%)</title><rect x="131.2" y="1045" width="1.3" height="15.0" fill="rgb(245,218,11)" rx="2" ry="2" />
<text  x="134.19" y="1055.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::any (8 samples, 0.03%)</title><rect x="17.2" y="1061" width="0.3" height="15.0" fill="rgb(231,149,11)" rx="2" ry="2" />
<text  x="20.25" y="1071.5" ></text>
</g>
<g >
<title>clap::args::arg_matches::ArgMatches::values_of (6 samples, 0.02%)</title><rect x="192.1" y="1157" width="0.2" height="15.0" fill="rgb(222,26,23)" rx="2" ry="2" />
<text  x="195.12" y="1167.5" ></text>
</g>
<g >
<title>serde::de::Visitor::visit_borrowed_str (10 samples, 0.03%)</title><rect x="270.7" y="437" width="0.4" height="15.0" fill="rgb(229,228,9)" rx="2" ry="2" />
<text  x="273.73" y="447.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="110.6" y="1077" width="0.3" height="15.0" fill="rgb(208,98,41)" rx="2" ry="2" />
<text  x="113.58" y="1087.5" ></text>
</g>
<g >
<title>_&lt;deno_core..module_specifier..ModuleSpecifier as core..hash..Hash&gt;::hash (7 samples, 0.02%)</title><rect x="219.6" y="613" width="0.2" height="15.0" fill="rgb(218,156,3)" rx="2" ry="2" />
<text  x="222.56" y="623.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="118.6" y="1125" width="0.2" height="15.0" fill="rgb(253,215,19)" rx="2" ry="2" />
<text  x="121.61" y="1135.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_arg_ref (997 samples, 3.17%)</title><rect x="26.1" y="1125" width="37.5" height="15.0" fill="rgb(253,180,24)" rx="2" ry="2" />
<text  x="29.14" y="1135.5" >cla..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="74.6" y="1093" width="0.1" height="15.0" fill="rgb(252,106,29)" rx="2" ry="2" />
<text  x="77.57" y="1103.5" ></text>
</g>
<g >
<title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.03%)</title><rect x="646.4" y="773" width="0.3" height="15.0" fill="rgb(249,67,11)" rx="2" ry="2" />
<text  x="649.38" y="783.5" ></text>
</g>
<g >
<title>deno::worker::Worker::execute2 (2,090 samples, 6.65%)</title><rect x="1094.8" y="901" width="78.5" height="15.0" fill="rgb(224,61,48)" rx="2" ry="2" />
<text  x="1097.83" y="911.5" >deno::wor..</text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="188.1" y="1045" width="0.3" height="15.0" fill="rgb(247,96,35)" rx="2" ry="2" />
<text  x="191.14" y="1055.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg..Arg as core..convert..From&lt;&amp;clap..args..arg..Arg&gt;&gt;::from (144 samples, 0.46%)</title><rect x="27.7" y="1093" width="5.4" height="15.0" fill="rgb(229,32,0)" rx="2" ry="2" />
<text  x="30.72" y="1103.5" ></text>
</g>
<g >
<title>tokio::time::wheel::level::Level&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="205.6" y="949" width="0.1" height="15.0" fill="rgb(221,179,2)" rx="2" ry="2" />
<text  x="208.60" y="959.5" ></text>
</g>
<g >
<title>clap::args::arg::Arg::required (6 samples, 0.02%)</title><rect x="104.3" y="1141" width="0.2" height="15.0" fill="rgb(207,14,16)" rx="2" ry="2" />
<text  x="107.31" y="1151.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::from_options::_{{closure}} (110 samples, 0.35%)</title><rect x="1090.4" y="805" width="4.1" height="15.0" fill="rgb(232,4,7)" rx="2" ry="2" />
<text  x="1093.36" y="815.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Display&gt;::fmt (10 samples, 0.03%)</title><rect x="612.7" y="501" width="0.4" height="15.0" fill="rgb(247,227,45)" rx="2" ry="2" />
<text  x="615.71" y="511.5" ></text>
</g>
<g >
<title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (26,178 samples, 83.29%)</title><rect x="206.9" y="1093" width="982.8" height="15.0" fill="rgb(205,26,6)" rx="2" ry="2" />
<text  x="209.91" y="1103.5" >tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text>
</g>
<g >
<title>core::ptr::drop_in_place (51 samples, 0.16%)</title><rect x="656.2" y="309" width="1.9" height="15.0" fill="rgb(227,6,1)" rx="2" ry="2" />
<text  x="659.22" y="319.5" ></text>
</g>
<g >
<title>_&lt;clap..args..arg_builder..option..OptBuilder as core..convert..From&lt;clap..args..arg..Arg&gt;&gt;::from (3 samples, 0.01%)</title><rect x="188.9" y="1109" width="0.1" height="15.0" fill="rgb(208,2,19)" rx="2" ry="2" />
<text  x="191.93" y="1119.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="998.6" y="773" width="0.3" height="15.0" fill="rgb(229,154,29)" rx="2" ry="2" />
<text  x="1001.65" y="783.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="548.8" y="117" width="0.2" height="15.0" fill="rgb(211,170,36)" rx="2" ry="2" />
<text  x="551.77" y="127.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..iter..traits..collect..Extend&lt;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="103.4" y="1093" width="0.3" height="15.0" fill="rgb(220,122,2)" rx="2" ry="2" />
<text  x="106.44" y="1103.5" ></text>
</g>
<g >
<title>deno::flags::permission_args (169 samples, 0.54%)</title><rect x="180.7" y="1125" width="6.4" height="15.0" fill="rgb(208,62,14)" rx="2" ry="2" />
<text  x="183.71" y="1135.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="218.3" y="597" width="0.1" height="15.0" fill="rgb(216,76,22)" rx="2" ry="2" />
<text  x="221.29" y="607.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="218.1" y="661" width="0.3" height="15.0" fill="rgb(246,50,39)" rx="2" ry="2" />
<text  x="221.14" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.06%)</title><rect x="632.3" y="613" width="0.7" height="15.0" fill="rgb(230,176,49)" rx="2" ry="2" />
<text  x="635.31" y="623.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (7 samples, 0.02%)</title><rect x="75.7" y="1045" width="0.2" height="15.0" fill="rgb(228,111,30)" rx="2" ry="2" />
<text  x="78.66" y="1055.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (10 samples, 0.03%)</title><rect x="589.3" y="693" width="0.4" height="15.0" fill="rgb(240,0,14)" rx="2" ry="2" />
<text  x="592.32" y="703.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="194.0" y="1109" width="0.1" height="15.0" fill="rgb(224,92,53)" rx="2" ry="2" />
<text  x="196.96" y="1119.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T&gt;::resize (4 samples, 0.01%)</title><rect x="1088.2" y="725" width="0.1" height="15.0" fill="rgb(238,178,19)" rx="2" ry="2" />
<text  x="1091.18" y="735.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="601.8" y="549" width="0.2" height="15.0" fill="rgb(223,226,2)" rx="2" ry="2" />
<text  x="604.82" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="96.7" y="997" width="0.1" height="15.0" fill="rgb(223,146,33)" rx="2" ry="2" />
<text  x="99.72" y="1007.5" ></text>
</g>
<g >
<title>alloc::str::join_generic_copy (9 samples, 0.03%)</title><rect x="222.9" y="629" width="0.3" height="15.0" fill="rgb(252,136,10)" rx="2" ry="2" />
<text  x="225.87" y="639.5" ></text>
</g>
<g >
<title>indexmap::map::core::raw::_&lt;impl indexmap..map..core..IndexMapCore&lt;K,V&gt;&gt;::get_index_of (6 samples, 0.02%)</title><rect x="574.9" y="581" width="0.3" height="15.0" fill="rgb(207,226,25)" rx="2" ry="2" />
<text  x="577.94" y="591.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::contains_long (5 samples, 0.02%)</title><rect x="113.7" y="1093" width="0.1" height="15.0" fill="rgb(242,43,17)" rx="2" ry="2" />
<text  x="116.65" y="1103.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="635.1" y="853" width="0.2" height="15.0" fill="rgb(244,195,38)" rx="2" ry="2" />
<text  x="638.08" y="863.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as alloc..vec..SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="191.7" y="1077" width="0.2" height="15.0" fill="rgb(246,78,3)" rx="2" ry="2" />
<text  x="194.71" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="1138.5" y="645" width="0.1" height="15.0" fill="rgb(207,56,29)" rx="2" ry="2" />
<text  x="1141.49" y="655.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="1062.0" y="757" width="0.1" height="15.0" fill="rgb(245,152,40)" rx="2" ry="2" />
<text  x="1064.98" y="767.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.04%)</title><rect x="1093.7" y="661" width="0.5" height="15.0" fill="rgb(215,43,51)" rx="2" ry="2" />
<text  x="1096.70" y="671.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::get_slot (5 samples, 0.02%)</title><rect x="208.2" y="821" width="0.2" height="15.0" fill="rgb(230,199,36)" rx="2" ry="2" />
<text  x="211.19" y="831.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (8 samples, 0.03%)</title><rect x="13.8" y="1061" width="0.3" height="15.0" fill="rgb(230,159,43)" rx="2" ry="2" />
<text  x="16.83" y="1071.5" ></text>
</g>
<g >
<title>rusty_v8::string::_&lt;impl rusty_v8..data..String&gt;::new (3 samples, 0.01%)</title><rect x="1096.5" y="837" width="0.1" height="15.0" fill="rgb(244,91,38)" rx="2" ry="2" />
<text  x="1099.52" y="847.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (344 samples, 1.09%)</title><rect x="423.4" y="85" width="12.9" height="15.0" fill="rgb(232,135,20)" rx="2" ry="2" />
<text  x="426.42" y="95.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,109 samples, 3.53%)</title><rect x="786.3" y="805" width="41.6" height="15.0" fill="rgb(250,173,9)" rx="2" ry="2" />
<text  x="789.30" y="815.5" >all..</text>
</g>
<g >
<title>core::hash::impls::_&lt;impl core..hash..Hash for str&gt;::hash (149 samples, 0.47%)</title><rect x="559.1" y="325" width="5.6" height="15.0" fill="rgb(231,160,35)" rx="2" ry="2" />
<text  x="562.10" y="335.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="227.9" y="565" width="0.3" height="15.0" fill="rgb(244,211,12)" rx="2" ry="2" />
<text  x="230.86" y="575.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (260 samples, 0.83%)</title><rect x="527.6" y="213" width="9.8" height="15.0" fill="rgb(217,124,22)" rx="2" ry="2" />
<text  x="530.60" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (3 samples, 0.01%)</title><rect x="1116.9" y="597" width="0.1" height="15.0" fill="rgb(214,191,43)" rx="2" ry="2" />
<text  x="1119.90" y="607.5" ></text>
</g>
<g >
<title>clap::app::parser::Parser::add_single_val_to_arg (47 samples, 0.15%)</title><rect x="15.3" y="1077" width="1.8" height="15.0" fill="rgb(220,80,31)" rx="2" ry="2" />
<text  x="18.33" y="1087.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="100.7" y="997" width="0.1" height="15.0" fill="rgb(241,215,2)" rx="2" ry="2" />
<text  x="103.67" y="1007.5" ></text>
</g>
<g >
<title>_&lt;hashbrown..scopeguard..ScopeGuard&lt;T,F&gt; as core..ops..drop..Drop&gt;::drop (4 samples, 0.01%)</title><rect x="1068.5" y="741" width="0.1" height="15.0" fill="rgb(211,57,50)" rx="2" ry="2" />
<text  x="1071.47" y="751.5" ></text>
</g>
<g >
<title>alloc::slice::hack::to_vec (25 samples, 0.08%)</title><rect x="1136.7" y="485" width="1.0" height="15.0" fill="rgb(212,81,17)" rx="2" ry="2" />
<text  x="1139.73" y="495.5" ></text>
</g>
<g >
<title>rusty_v8::isolate::Isolate::dispose (336 samples, 1.07%)</title><rect x="646.3" y="821" width="12.6" height="15.0" fill="rgb(225,138,9)" rx="2" ry="2" />
<text  x="649.27" y="831.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (45 samples, 0.14%)</title><rect x="282.7" y="165" width="1.7" height="15.0" fill="rgb(242,158,32)" rx="2" ry="2" />
<text  x="285.71" y="175.5" ></text>
</g>
<g >
<title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="202.3" y="1125" width="0.3" height="15.0" fill="rgb(214,73,7)" rx="2" ry="2" />
<text  x="205.26" y="1135.5" ></text>
</g>
<g >
<title>serde_json::de::from_str (8,149 samples, 25.93%)</title><rect x="268.4" y="677" width="306.0" height="15.0" fill="rgb(245,32,32)" rx="2" ry="2" />
<text  x="271.44" y="687.5" >serde_json::de::from_str</text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="261.2" y="565" width="0.2" height="15.0" fill="rgb(250,183,10)" rx="2" ry="2" />
<text  x="264.16" y="575.5" ></text>
</g>
<g >
<title>clap::args::arg_builder::positional::PosBuilder::from_arg (13 samples, 0.04%)</title><rect x="85.6" y="1109" width="0.5" height="15.0" fill="rgb(226,201,50)" rx="2" ry="2" />
<text  x="88.57" y="1119.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (32 samples, 0.10%)</title><rect x="1084.0" y="821" width="1.2" height="15.0" fill="rgb(229,207,9)" rx="2" ry="2" />
<text  x="1086.98" y="831.5" ></text>
</g>
<g >
<title>rusty_v8::scope::TryCatch&lt;P&gt;::new (7 samples, 0.02%)</title><rect x="635.9" y="773" width="0.2" height="15.0" fill="rgb(232,6,4)" rx="2" ry="2" />
<text  x="638.87" y="783.5" ></text>
</g>
<g >
<title>deno::state::State::new (4,446 samples, 14.15%)</title><rect x="834.3" y="917" width="166.9" height="15.0" fill="rgb(225,206,22)" rx="2" ry="2" />
<text  x="837.32" y="927.5" >deno::state::State::new</text>
</g>
<g >
<title>core::iter::adapters::map_fold::_{{closure}} (19 samples, 0.06%)</title><rect x="829.7" y="741" width="0.7" height="15.0" fill="rgb(238,168,7)" rx="2" ry="2" />
<text  x="832.67" y="751.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.03%)</title><rect x="11.6" y="1109" width="0.4" height="15.0" fill="rgb(250,14,5)" rx="2" ry="2" />
<text  x="14.58" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="228.1" y="517" width="0.1" height="15.0" fill="rgb(205,118,31)" rx="2" ry="2" />
<text  x="231.08" y="527.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (8 samples, 0.03%)</title><rect x="173.9" y="1013" width="0.3" height="15.0" fill="rgb(239,210,51)" rx="2" ry="2" />
<text  x="176.91" y="1023.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_isize (3 samples, 0.01%)</title><rect x="831.1" y="741" width="0.1" height="15.0" fill="rgb(241,152,41)" rx="2" ry="2" />
<text  x="834.09" y="751.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place (312 samples, 0.99%)</title><rect x="647.2" y="725" width="11.7" height="15.0" fill="rgb(230,138,47)" rx="2" ry="2" />
<text  x="650.17" y="735.5" ></text>
</g>
<g >
<title>_&lt;core..result..Result&lt;V,E&gt; as core..iter..traits..collect..FromIterator&lt;core..result..Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (18 samples, 0.06%)</title><rect x="1099.3" y="709" width="0.7" height="15.0" fill="rgb(253,103,36)" rx="2" ry="2" />
<text  x="1102.33" y="719.5" ></text>
</g>
<g >
<title>alloc::str::_&lt;impl alloc..borrow..ToOwned for str&gt;::to_owned (25 samples, 0.08%)</title><rect x="1056.2" y="821" width="0.9" height="15.0" fill="rgb(233,188,43)" rx="2" ry="2" />
<text  x="1059.20" y="831.5" ></text>
</g>
<g >
<title>_&lt;alloc..sync..Arc&lt;T&gt; as core..ops..drop..Drop&gt;::drop (9 samples, 0.03%)</title><rect x="646.3" y="789" width="0.4" height="15.0" fill="rgb(227,212,40)" rx="2" ry="2" />
<text  x="649.35" y="799.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (23 samples, 0.07%)</title><rect x="661.8" y="853" width="0.8" height="15.0" fill="rgb(245,205,41)" rx="2" ry="2" />
<text  x="664.78" y="863.5" ></text>
</g>
<g >
<title>deno_core::core_isolate::CoreIsolate::register_op (23 samples, 0.07%)</title><rect x="1057.7" y="885" width="0.9" height="15.0" fill="rgb(226,173,41)" rx="2" ry="2" />
<text  x="1060.74" y="895.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (40 samples, 0.13%)</title><rect x="584.0" y="517" width="1.5" height="15.0" fill="rgb(222,207,40)" rx="2" ry="2" />
<text  x="586.99" y="527.5" ></text>
</g>
<g >
<title>alloc::string::String::push (6 samples, 0.02%)</title><rect x="20.2" y="949" width="0.2" height="15.0" fill="rgb(245,138,19)" rx="2" ry="2" />
<text  x="23.17" y="959.5" ></text>
</g>
<g >
<title>_&lt;alloc..collections..vec_deque..Iter&lt;T&gt; as core..iter..traits..iterator..Iterator&gt;::fold (12 samples, 0.04%)</title><rect x="18.3" y="1029" width="0.5" height="15.0" fill="rgb(242,124,30)" rx="2" ry="2" />
<text  x="21.33" y="1039.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::reserve (8 samples, 0.03%)</title><rect x="189.1" y="1093" width="0.3" height="15.0" fill="rgb(232,155,51)" rx="2" ry="2" />
<text  x="192.12" y="1103.5" ></text>
</g>
<g >
<title>core::mem::replace (10 samples, 0.03%)</title><rect x="103.7" y="1093" width="0.3" height="15.0" fill="rgb(209,151,21)" rx="2" ry="2" />
<text  x="106.67" y="1103.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..convert..From&lt;&amp;str&gt;&gt;::from (387 samples, 1.23%)</title><rect x="481.8" y="181" width="14.5" height="15.0" fill="rgb(213,34,16)" rx="2" ry="2" />
<text  x="484.80" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="10.9" y="1141" width="0.2" height="15.0" fill="rgb(223,20,49)" rx="2" ry="2" />
<text  x="13.90" y="1151.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (103 samples, 0.33%)</title><rect x="1107.9" y="597" width="3.8" height="15.0" fill="rgb(242,12,49)" rx="2" ry="2" />
<text  x="1110.86" y="607.5" ></text>
</g>
<g >
<title>swc_ecma_visit::visit_call_expr (3 samples, 0.01%)</title><rect x="239.0" y="501" width="0.1" height="15.0" fill="rgb(209,87,42)" rx="2" ry="2" />
<text  x="242.01" y="511.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (45 samples, 0.14%)</title><rect x="1187.6" y="837" width="1.7" height="15.0" fill="rgb(221,175,4)" rx="2" ry="2" />
<text  x="1190.60" y="847.5" ></text>
</g>
<g >
<title>alloc::slice::_&lt;impl [T]&gt;::to_vec (6 samples, 0.02%)</title><rect x="1186.1" y="837" width="0.2" height="15.0" fill="rgb(249,86,16)" rx="2" ry="2" />
<text  x="1189.10" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (279 samples, 0.89%)</title><rect x="987.9" y="757" width="10.4" height="15.0" fill="rgb(236,98,37)" rx="2" ry="2" />
<text  x="990.87" y="767.5" ></text>
</g>
<g >
<title>_&lt;std..collections..hash..map..DefaultHasher as core..hash..Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="1071.8" y="773" width="0.2" height="15.0" fill="rgb(208,215,46)" rx="2" ry="2" />
<text  x="1074.82" y="783.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..Filter&lt;I,P&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="135.6" y="1029" width="0.1" height="15.0" fill="rgb(236,141,4)" rx="2" ry="2" />
<text  x="138.58" y="1039.5" ></text>
</g>
<g >
<title>deno::flags::run_parse (170 samples, 0.54%)</title><rect x="191.9" y="1173" width="6.4" height="15.0" fill="rgb(242,136,10)" rx="2" ry="2" />
<text  x="194.89" y="1183.5" ></text>
</g>
<g >
<title>_&lt;alloc..string..String as core..fmt..Display&gt;::fmt (10 samples, 0.03%)</title><rect x="262.2" y="565" width="0.3" height="15.0" fill="rgb(248,94,32)" rx="2" ry="2" />
<text  x="265.17" y="575.5" ></text>
</g>
<g >
<title>deno_core::bindings::send::_{{closure}} (4 samples, 0.01%)</title><rect x="1099.9" y="549" width="0.1" height="15.0" fill="rgb(225,153,39)" rx="2" ry="2" />
<text  x="1102.86" y="559.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map (3 samples, 0.01%)</title><rect x="634.6" y="885" width="0.1" height="15.0" fill="rgb(211,173,42)" rx="2" ry="2" />
<text  x="637.63" y="895.5" ></text>
</g>
<g >
<title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.04%)</title><rect x="1087.9" y="805" width="0.4" height="15.0" fill="rgb(241,108,53)" rx="2" ry="2" />
<text  x="1090.88" y="815.5" ></text>
</g>
<g >
<title>_&lt;core..iter..adapters..chain..Chain&lt;A,B&gt; as core..iter..traits..iterator..Iterator&gt;::try_fold (26 samples, 0.08%)</title><rect x="107.4" y="1061" width="1.0" height="15.0" fill="rgb(241,186,51)" rx="2" ry="2" />
<text  x="110.42" y="1071.5" ></text>
</g>
<g >
<title>_&lt;alloc..vec..Vec&lt;T&gt; as core..clone..Clone&gt;::clone (8 samples, 0.03%)</title><rect x="216.4" y="501" width="0.3" height="15.0" fill="rgb(238,107,49)" rx="2" ry="2" />
<text  x="219.37" y="511.5" ></text>
</g>
<g >
<title>swc_ecma_parser::lexer::util::CharExt::is_ident_part (5 samples, 0.02%)</title><rect x="232.0" y="437" width="0.2" height="15.0" fill="rgb(215,117,35)" rx="2" ry="2" />
<text  x="234.99" y="447.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="217.3" y="517" width="0.2" height="15.0" fill="rgb(222,63,9)" rx="2" ry="2" />
<text  x="220.27" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="12.8" y="1109" width="0.1" height="15.0" fill="rgb(250,2,26)" rx="2" ry="2" />
<text  x="15.82" y="1119.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="97.1" y="1045" width="0.1" height="15.0" fill="rgb(220,164,50)" rx="2" ry="2" />
<text  x="100.10" y="1055.5" ></text>
</g>
</g>
</svg>
